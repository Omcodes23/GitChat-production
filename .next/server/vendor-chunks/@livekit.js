"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@livekit";
exports.ids = ["vendor-chunks/@livekit"];
exports.modules = {

/***/ "(ssr)/./node_modules/@livekit/components-styles/dist/general/index.css":
/*!************************************************************************!*\
  !*** ./node_modules/@livekit/components-styles/dist/general/index.css ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"e3e1768c4b1b\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpdmVraXQvY29tcG9uZW50cy1zdHlsZXMvZGlzdC9nZW5lcmFsL2luZGV4LmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW0tY2hhdC1hcHBsaWNhdGlvbi8uL25vZGVfbW9kdWxlcy9AbGl2ZWtpdC9jb21wb25lbnRzLXN0eWxlcy9kaXN0L2dlbmVyYWwvaW5kZXguY3NzP2YyMDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJlM2UxNzY4YzRiMWJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-styles/dist/general/index.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-core/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@livekit/components-core/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataTopic: () => (/* binding */ DataTopic),\n/* harmony export */   GRID_LAYOUTS: () => (/* binding */ GRID_LAYOUTS),\n/* harmony export */   PIN_DEFAULT_STATE: () => (/* binding */ PIN_DEFAULT_STATE),\n/* harmony export */   WIDGET_DEFAULT_STATE: () => (/* binding */ WIDGET_DEFAULT_STATE),\n/* harmony export */   activeSpeakerObserver: () => (/* binding */ activeSpeakerObserver),\n/* harmony export */   allParticipantEvents: () => (/* binding */ allParticipantEvents),\n/* harmony export */   allParticipantRoomEvents: () => (/* binding */ allParticipantRoomEvents),\n/* harmony export */   allRemoteParticipantEvents: () => (/* binding */ allRemoteParticipantEvents),\n/* harmony export */   allRemoteParticipantRoomEvents: () => (/* binding */ allRemoteParticipantRoomEvents),\n/* harmony export */   attachIfSubscribed: () => (/* binding */ attachIfSubscribed),\n/* harmony export */   computeMenuPosition: () => (/* binding */ computeMenuPosition),\n/* harmony export */   connectedParticipantObserver: () => (/* binding */ connectedParticipantObserver),\n/* harmony export */   connectedParticipantsObserver: () => (/* binding */ connectedParticipantsObserver),\n/* harmony export */   connectionStateObserver: () => (/* binding */ connectionStateObserver),\n/* harmony export */   createActiveDeviceObservable: () => (/* binding */ createActiveDeviceObservable),\n/* harmony export */   createConnectionQualityObserver: () => (/* binding */ createConnectionQualityObserver),\n/* harmony export */   createDataObserver: () => (/* binding */ createDataObserver),\n/* harmony export */   createDefaultGrammar: () => (/* binding */ createDefaultGrammar),\n/* harmony export */   createEmailRegExp: () => (/* reexport safe */ email_regex__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   createInteractingObservable: () => (/* binding */ createInteractingObservable),\n/* harmony export */   createIsSpeakingObserver: () => (/* binding */ createIsSpeakingObserver),\n/* harmony export */   createMediaDeviceObserver: () => (/* binding */ createMediaDeviceObserver),\n/* harmony export */   createTrackObserver: () => (/* binding */ createTrackObserver),\n/* harmony export */   createUrlRegExp: () => (/* binding */ createUrlRegExp),\n/* harmony export */   cssPrefix: () => (/* binding */ cssPrefix),\n/* harmony export */   encryptionStatusObservable: () => (/* binding */ encryptionStatusObservable),\n/* harmony export */   getScrollBarWidth: () => (/* binding */ getScrollBarWidth),\n/* harmony export */   getTrackByIdentifier: () => (/* binding */ getTrackByIdentifier),\n/* harmony export */   getTrackReferenceId: () => (/* binding */ getTrackReferenceId),\n/* harmony export */   getTrackReferenceSource: () => (/* binding */ getTrackReferenceSource),\n/* harmony export */   isEqualTrackRef: () => (/* binding */ isEqualTrackRef),\n/* harmony export */   isLocal: () => (/* binding */ isLocal),\n/* harmony export */   isMobileBrowser: () => (/* binding */ isMobileBrowser),\n/* harmony export */   isParticipantSourcePinned: () => (/* binding */ isParticipantSourcePinned),\n/* harmony export */   isParticipantTrackReferencePinned: () => (/* binding */ isParticipantTrackReferencePinned),\n/* harmony export */   isPlaceholderReplacement: () => (/* binding */ isPlaceholderReplacement),\n/* harmony export */   isRemote: () => (/* binding */ isRemote),\n/* harmony export */   isSourceWitOptions: () => (/* binding */ isSourceWitOptions),\n/* harmony export */   isSourcesWithOptions: () => (/* binding */ isSourcesWithOptions),\n/* harmony export */   isTrackReference: () => (/* binding */ isTrackReference),\n/* harmony export */   isTrackReferencePinned: () => (/* binding */ isTrackReferencePinned),\n/* harmony export */   isTrackReferencePlaceholder: () => (/* binding */ isTrackReferencePlaceholder),\n/* harmony export */   isWeb: () => (/* binding */ isWeb),\n/* harmony export */   loadUserChoices: () => (/* binding */ loadUserChoices),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   mutedObserver: () => (/* binding */ mutedObserver),\n/* harmony export */   observeParticipantEvents: () => (/* binding */ observeParticipantEvents),\n/* harmony export */   observeParticipantMedia: () => (/* binding */ observeParticipantMedia),\n/* harmony export */   observeRoomEvents: () => (/* binding */ observeRoomEvents),\n/* harmony export */   observeTrackEvents: () => (/* binding */ observeTrackEvents),\n/* harmony export */   participantEventSelector: () => (/* binding */ participantEventSelector),\n/* harmony export */   participantInfoObserver: () => (/* binding */ participantInfoObserver),\n/* harmony export */   participantPermissionObserver: () => (/* binding */ participantPermissionObserver),\n/* harmony export */   roomAudioPlaybackAllowedObservable: () => (/* binding */ roomAudioPlaybackAllowedObservable),\n/* harmony export */   roomEventSelector: () => (/* binding */ roomEventSelector),\n/* harmony export */   roomInfoObserver: () => (/* binding */ roomInfoObserver),\n/* harmony export */   roomObserver: () => (/* binding */ roomObserver),\n/* harmony export */   roomVideoPlaybackAllowedObservable: () => (/* binding */ roomVideoPlaybackAllowedObservable),\n/* harmony export */   saveUserChoices: () => (/* binding */ saveUserChoices),\n/* harmony export */   screenShareObserver: () => (/* binding */ screenShareObserver),\n/* harmony export */   selectGridLayout: () => (/* binding */ selectGridLayout),\n/* harmony export */   sendMessage: () => (/* binding */ sendMessage),\n/* harmony export */   setDifference: () => (/* binding */ setDifference),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel),\n/* harmony export */   setupChat: () => (/* binding */ setupChat),\n/* harmony export */   setupChatToggle: () => (/* binding */ setupChatToggle),\n/* harmony export */   setupClearPinButton: () => (/* binding */ setupClearPinButton),\n/* harmony export */   setupConnectionQualityIndicator: () => (/* binding */ setupConnectionQualityIndicator),\n/* harmony export */   setupDataMessageHandler: () => (/* binding */ setupDataMessageHandler),\n/* harmony export */   setupDeviceSelector: () => (/* binding */ setupDeviceSelector),\n/* harmony export */   setupDisconnectButton: () => (/* binding */ setupDisconnectButton),\n/* harmony export */   setupFocusToggle: () => (/* binding */ setupFocusToggle),\n/* harmony export */   setupLiveKitRoom: () => (/* binding */ setupLiveKitRoom),\n/* harmony export */   setupManualToggle: () => (/* binding */ setupManualToggle),\n/* harmony export */   setupMediaToggle: () => (/* binding */ setupMediaToggle),\n/* harmony export */   setupMediaTrack: () => (/* binding */ setupMediaTrack),\n/* harmony export */   setupParticipantName: () => (/* binding */ setupParticipantName),\n/* harmony export */   setupParticipantTile: () => (/* binding */ setupParticipantTile),\n/* harmony export */   setupStartAudio: () => (/* binding */ setupStartAudio),\n/* harmony export */   setupStartVideo: () => (/* binding */ setupStartVideo),\n/* harmony export */   setupTrackMutedIndicator: () => (/* binding */ setupTrackMutedIndicator),\n/* harmony export */   sortParticipants: () => (/* binding */ sortParticipants),\n/* harmony export */   sortTrackReferences: () => (/* binding */ sortTrackReferences),\n/* harmony export */   supportsScreenSharing: () => (/* binding */ supportsScreenSharing),\n/* harmony export */   tokenize: () => (/* binding */ tokenize),\n/* harmony export */   trackObservable: () => (/* binding */ trackObservable),\n/* harmony export */   trackReferencesObservable: () => (/* binding */ trackReferencesObservable),\n/* harmony export */   updatePages: () => (/* binding */ updatePages),\n/* harmony export */   wasClickOutside: () => (/* binding */ wasClickOutside)\n/* harmony export */ });\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n/* harmony import */ var email_regex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! email-regex */ \"(ssr)/./node_modules/email-regex/index.js\");\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs\");\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! loglevel */ \"(ssr)/./node_modules/loglevel/lib/loglevel.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/startWith.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/finalize.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/scan.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/timeout.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/skipUntil.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/constants.ts\nvar cssPrefix = \"lk\";\n\n// src/utils.ts\n\n\n// src/track-reference/track-reference.types.ts\nfunction isTrackReference(trackReference) {\n  if (typeof trackReference === \"undefined\") {\n    return false;\n  }\n  return isTrackReferenceSubscribed(trackReference) || isTrackReferencePublished(trackReference);\n}\nfunction isTrackReferenceSubscribed(trackReference) {\n  var _a;\n  if (!trackReference) {\n    return false;\n  }\n  return trackReference.hasOwnProperty(\"participant\") && trackReference.hasOwnProperty(\"source\") && trackReference.hasOwnProperty(\"track\") && typeof ((_a = trackReference.publication) == null ? void 0 : _a.track) !== \"undefined\";\n}\nfunction isTrackReferencePublished(trackReference) {\n  if (!trackReference) {\n    return false;\n  }\n  return trackReference.hasOwnProperty(\"participant\") && trackReference.hasOwnProperty(\"source\") && trackReference.hasOwnProperty(\"publication\") && typeof trackReference.publication !== \"undefined\";\n}\nfunction isTrackReferencePlaceholder(trackReference) {\n  if (!trackReference) {\n    return false;\n  }\n  return trackReference.hasOwnProperty(\"participant\") && trackReference.hasOwnProperty(\"source\") && typeof trackReference.publication === \"undefined\";\n}\n\n// src/track-reference/track-reference.utils.ts\nfunction getTrackReferenceId(trackReference) {\n  if (typeof trackReference === \"string\" || typeof trackReference === \"number\") {\n    return `${trackReference}`;\n  } else if (isTrackReferencePlaceholder(trackReference)) {\n    return `${trackReference.participant.identity}_${trackReference.source}_placeholder`;\n  } else if (isTrackReference(trackReference)) {\n    return `${trackReference.participant.identity}_${trackReference.publication.source}_${trackReference.publication.trackSid}`;\n  } else {\n    throw new Error(`Can't generate a id for the given track reference: ${trackReference}`);\n  }\n}\nfunction getTrackReferenceSource(trackReference) {\n  if (isTrackReference(trackReference)) {\n    return trackReference.publication.source;\n  } else {\n    return trackReference.source;\n  }\n}\nfunction isEqualTrackRef(a, b) {\n  if (a === void 0 || b === void 0) {\n    return false;\n  }\n  if (isTrackReference(a) && isTrackReference(b)) {\n    return a.publication.trackSid === b.publication.trackSid;\n  } else {\n    return getTrackReferenceId(a) === getTrackReferenceId(b);\n  }\n}\nfunction isTrackReferencePinned(trackReference, pinState) {\n  if (typeof pinState === \"undefined\") {\n    return false;\n  }\n  if (isTrackReference(trackReference)) {\n    return pinState.some(\n      (pinnedTrackReference) => pinnedTrackReference.participant.identity === trackReference.participant.identity && isTrackReference(pinnedTrackReference) && pinnedTrackReference.publication.trackSid === trackReference.publication.trackSid\n    );\n  } else if (isTrackReferencePlaceholder(trackReference)) {\n    return pinState.some(\n      (pinnedTrackReference) => pinnedTrackReference.participant.identity === trackReference.participant.identity && isTrackReferencePlaceholder(pinnedTrackReference) && pinnedTrackReference.source === trackReference.source\n    );\n  } else {\n    return false;\n  }\n}\nfunction isPlaceholderReplacement(currentTrackRef, nextTrackRef) {\n  return isTrackReferencePlaceholder(currentTrackRef) && isTrackReference(nextTrackRef) && nextTrackRef.participant.identity === currentTrackRef.participant.identity && nextTrackRef.source === currentTrackRef.source;\n}\n\n// src/utils.ts\nfunction isLocal(p) {\n  return p instanceof livekit_client__WEBPACK_IMPORTED_MODULE_0__.LocalParticipant;\n}\nfunction isRemote(p) {\n  return p instanceof livekit_client__WEBPACK_IMPORTED_MODULE_0__.RemoteParticipant;\n}\nvar attachIfSubscribed = (publication, element) => {\n  if (!publication)\n    return;\n  const { isSubscribed, track } = publication;\n  if (element && track) {\n    if (isSubscribed) {\n      track.attach(element);\n    } else {\n      track.detach(element);\n    }\n  }\n};\nfunction isParticipantSourcePinned(participant, source, pinState) {\n  if (pinState === void 0) {\n    return false;\n  }\n  return pinState.some(\n    ({ source: pinnedSource, participant: pinnedParticipant }) => pinnedSource === source && pinnedParticipant.identity === participant.identity\n  );\n}\nfunction isParticipantTrackReferencePinned(trackRef, pinState) {\n  if (pinState === void 0) {\n    return false;\n  }\n  return pinState.some((pinnedTrackRef) => isEqualTrackRef(pinnedTrackRef, trackRef));\n}\nfunction getScrollBarWidth() {\n  const inner = document.createElement(\"p\");\n  inner.style.width = \"100%\";\n  inner.style.height = \"200px\";\n  const outer = document.createElement(\"div\");\n  outer.style.position = \"absolute\";\n  outer.style.top = \"0px\";\n  outer.style.left = \"0px\";\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"200px\";\n  outer.style.height = \"150px\";\n  outer.style.overflow = \"hidden\";\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  let w2 = inner.offsetWidth;\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n  document.body.removeChild(outer);\n  const scrollBarWidth = w1 - w2;\n  return scrollBarWidth;\n}\n\n// src/helper/detectMobileBrowser.ts\nfunction isWeb() {\n  return typeof document !== \"undefined\";\n}\nfunction isMobileBrowser() {\n  return isWeb() ? /Mobi/i.test(window.navigator.userAgent) : false;\n}\n\n// src/helper/url-regex.ts\nfunction createUrlRegExp(options) {\n  options = __spreadValues({}, options);\n  const protocol = `(?:(?:[a-z]+:)?//)?`;\n  const auth = \"(?:\\\\S+(?::\\\\S*)?@)?\";\n  const ip = new RegExp(\n    \"(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}\",\n    \"g\"\n  ).source;\n  const host = \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\";\n  const domain = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\";\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?`;\n  const port = \"(?::\\\\d{2,5})?\";\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;\n  return options.exact ? new RegExp(`(?:^${regex}$)`, \"i\") : new RegExp(regex, \"ig\");\n}\n\n// src/helper/emailRegex.ts\n\n\n// src/helper/floating-menu.ts\n\nfunction computeMenuPosition(button, menu) {\n  return __async(this, null, function* () {\n    const { x, y } = yield (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.computePosition)(button, menu, {\n      placement: \"top\",\n      middleware: [(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.offset)(6), (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.flip)(), (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_3__.shift)({ padding: 5 })]\n    });\n    return { x, y };\n  });\n}\nfunction wasClickOutside(insideElement, event) {\n  const isOutside = !insideElement.contains(event.target);\n  return isOutside;\n}\n\n// src/helper/tokenizer.ts\nvar createDefaultGrammar = () => {\n  return {\n    email: (0,email_regex__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n    url: createUrlRegExp({})\n  };\n};\nfunction tokenize(input, grammar) {\n  const matches = Object.entries(grammar).map(\n    ([type, rx], weight) => Array.from(input.matchAll(rx)).map(({ index, 0: content }) => ({\n      type,\n      weight,\n      content,\n      index: index != null ? index : 0\n    }))\n  ).flat().sort((a, b) => {\n    const d = a.index - b.index;\n    return d !== 0 ? d : a.weight - b.weight;\n  }).filter(({ index }, i, arr) => {\n    if (i === 0)\n      return true;\n    const prev = arr[i - 1];\n    return prev.index + prev.content.length <= index;\n  });\n  const tokens = [];\n  let pos = 0;\n  for (const { type, content, index } of matches) {\n    if (index > pos)\n      tokens.push(input.substring(pos, index));\n    tokens.push({ type, content });\n    pos = index + content.length;\n  }\n  if (input.length > pos)\n    tokens.push(input.substring(pos));\n  return tokens;\n}\n\n// src/helper/eventGroups.ts\n\nvar allRemoteParticipantRoomEvents = [\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.RoomMetadataChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveSpeakersChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionQualityChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantPermissionsChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantMetadataChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackMuted,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnmuted,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackPublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnpublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackStreamStateChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionFailed,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionPermissionChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionStatusChanged\n];\nvar allParticipantRoomEvents = [\n  ...allRemoteParticipantRoomEvents,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished\n];\nvar allRemoteParticipantEvents = [\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ConnectionQualityChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.IsSpeakingChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantMetadataChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackPublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnpublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackStreamStateChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionFailed,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionPermissionChanged,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionStatusChanged\n];\nvar allParticipantEvents = [\n  ...allRemoteParticipantEvents,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished,\n  livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished\n];\n\n// src/logger.ts\n\n\nvar log = loglevel__WEBPACK_IMPORTED_MODULE_4__.getLogger(\"lk-components-js\");\nlog.setDefaultLevel(\"WARN\");\nfunction setLogLevel(level, options = {}) {\n  var _a;\n  log.setLevel(level);\n  (0,livekit_client__WEBPACK_IMPORTED_MODULE_0__.setLogLevel)((_a = options.liveKitClientLogLevel) != null ? _a : level);\n}\n\n// src/helper/grid-layouts.ts\nvar GRID_LAYOUTS = [\n  {\n    columns: 1,\n    rows: 1,\n    name: \"1x1\",\n    minTiles: 1,\n    maxTiles: 1,\n    minWidth: 0,\n    minHeight: 0\n  },\n  {\n    columns: 1,\n    rows: 2,\n    name: \"1x2\",\n    minTiles: 2,\n    maxTiles: 2,\n    minWidth: 0,\n    minHeight: 0\n  },\n  {\n    columns: 2,\n    rows: 1,\n    name: \"2x1\",\n    minTiles: 2,\n    maxTiles: 2,\n    minWidth: 900,\n    minHeight: 0\n  },\n  {\n    columns: 2,\n    rows: 2,\n    name: \"2x2\",\n    minTiles: 3,\n    maxTiles: 4,\n    minWidth: 560,\n    minHeight: 0\n  },\n  {\n    columns: 3,\n    rows: 3,\n    name: \"3x3\",\n    minTiles: 5,\n    maxTiles: 9,\n    minWidth: 700,\n    minHeight: 0\n  },\n  {\n    columns: 4,\n    rows: 4,\n    name: \"4x4\",\n    minTiles: 10,\n    maxTiles: 16,\n    minWidth: 960,\n    minHeight: 0\n  },\n  {\n    columns: 5,\n    rows: 5,\n    name: \"5x5\",\n    minTiles: 17,\n    maxTiles: 25,\n    minWidth: 1100,\n    minHeight: 0\n  }\n];\nfunction selectGridLayout(layouts, participantCount, width, height) {\n  let currentLayoutIndex = 0;\n  let layout = layouts.find((layout_, index, allLayouts) => {\n    currentLayoutIndex = index;\n    const isBiggerLayoutAvailable = allLayouts.findIndex((l, i) => {\n      const layoutIsBiggerThanCurrent = i > index;\n      const layoutFitsSameAmountOfParticipants = l.maxTiles === layout_.maxTiles;\n      return layoutIsBiggerThanCurrent && layoutFitsSameAmountOfParticipants;\n    }) !== -1;\n    return layout_.maxTiles >= participantCount && !isBiggerLayoutAvailable;\n  });\n  if (layout === void 0) {\n    layout = layouts[layouts.length - 1];\n    if (layout) {\n      log.warn(\n        `No layout found for: participantCount: ${participantCount}, width/height: ${width}/${height} fallback to biggest available layout (${layout.name}).`\n      );\n    } else {\n      throw new Error(`No layout or fallback layout found.`);\n    }\n  }\n  if (width < layout.minWidth || height < layout.minHeight) {\n    if (currentLayoutIndex > 0) {\n      const smallerLayout = layouts[currentLayoutIndex - 1];\n      layout = selectGridLayout(\n        layouts.slice(0, currentLayoutIndex),\n        smallerLayout.maxTiles,\n        width,\n        height\n      );\n    }\n  }\n  return layout;\n}\n\n// src/helper/set-helper.ts\nfunction setDifference(setA, setB) {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n\n// src/helper/featureDetection.ts\nfunction supportsScreenSharing() {\n  return typeof navigator !== \"undefined\" && navigator.mediaDevices && !!navigator.mediaDevices.getDisplayMedia;\n}\n\n// src/types.ts\nvar PIN_DEFAULT_STATE = [];\nvar WIDGET_DEFAULT_STATE = { showChat: false, unreadMessages: 0 };\nfunction isSourceWitOptions(source) {\n  return typeof source === \"object\";\n}\nfunction isSourcesWithOptions(sources) {\n  return Array.isArray(sources) && sources.filter(isSourceWitOptions).length > 0;\n}\n\n// src/sorting/sort-track-bundles.ts\n\n\n// src/sorting/base-sort-functions.ts\n\nfunction sortParticipantsByAudioLevel(a, b) {\n  return b.audioLevel - a.audioLevel;\n}\nfunction sortParticipantsByIsSpeaking(a, b) {\n  if (a.isSpeaking === b.isSpeaking) {\n    return 0;\n  } else {\n    return a.isSpeaking ? -1 : 1;\n  }\n}\nfunction sortParticipantsByLastSpokenAT(a, b) {\n  var _a, _b, _c, _d;\n  if (a.lastSpokeAt !== void 0 || b.lastSpokeAt !== void 0) {\n    return ((_b = (_a = b.lastSpokeAt) == null ? void 0 : _a.getTime()) != null ? _b : 0) - ((_d = (_c = a.lastSpokeAt) == null ? void 0 : _c.getTime()) != null ? _d : 0);\n  } else {\n    return 0;\n  }\n}\nfunction sortParticipantsByJoinedAt(a, b) {\n  var _a, _b, _c, _d;\n  return ((_b = (_a = a.joinedAt) == null ? void 0 : _a.getTime()) != null ? _b : 0) - ((_d = (_c = b.joinedAt) == null ? void 0 : _c.getTime()) != null ? _d : 0);\n}\nfunction sortTrackReferencesByType(a, b) {\n  if (isTrackReference(a)) {\n    if (isTrackReference(b)) {\n      return 0;\n    } else {\n      return -1;\n    }\n  } else if (isTrackReference(b)) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\nfunction sortTrackRefsByIsCameraEnabled(a, b) {\n  const aVideo = a.participant.isCameraEnabled;\n  const bVideo = b.participant.isCameraEnabled;\n  if (aVideo !== bVideo) {\n    if (aVideo) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    return 0;\n  }\n}\n\n// src/sorting/sort-track-bundles.ts\nfunction sortTrackReferences(tracks) {\n  const localTracks = [];\n  const screenShareTracks = [];\n  const cameraTracks = [];\n  const undefinedTracks = [];\n  tracks.forEach((trackRef) => {\n    if (trackRef.participant.isLocal && trackRef.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera) {\n      localTracks.push(trackRef);\n    } else if (trackRef.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare) {\n      screenShareTracks.push(trackRef);\n    } else if (trackRef.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera) {\n      cameraTracks.push(trackRef);\n    } else {\n      undefinedTracks.push(trackRef);\n    }\n  });\n  const sortedScreenShareTracks = sortScreenShareTracks(screenShareTracks);\n  const sortedCameraTracks = sortCameraTracks(cameraTracks);\n  return [...localTracks, ...sortedScreenShareTracks, ...sortedCameraTracks, ...undefinedTracks];\n}\nfunction sortScreenShareTracks(screenShareTracks) {\n  const localScreenShares = [];\n  const remoteScreenShares = [];\n  screenShareTracks.forEach((trackRef) => {\n    if (trackRef.participant.isLocal) {\n      localScreenShares.push(trackRef);\n    } else {\n      remoteScreenShares.push(trackRef);\n    }\n  });\n  localScreenShares.sort((a, b) => sortParticipantsByJoinedAt(a.participant, b.participant));\n  remoteScreenShares.sort((a, b) => sortParticipantsByJoinedAt(a.participant, b.participant));\n  const sortedScreenShareTrackRefs = [...remoteScreenShares, ...localScreenShares];\n  return sortedScreenShareTrackRefs;\n}\nfunction sortCameraTracks(cameraTrackReferences) {\n  const localCameraTracks = [];\n  const remoteCameraTracks = [];\n  cameraTrackReferences.forEach((trackRef) => {\n    if (trackRef.participant.isLocal) {\n      localCameraTracks.push(trackRef);\n    } else {\n      remoteCameraTracks.push(trackRef);\n    }\n  });\n  remoteCameraTracks.sort((a, b) => {\n    if (a.participant.isSpeaking && b.participant.isSpeaking) {\n      return sortParticipantsByAudioLevel(a.participant, b.participant);\n    }\n    if (a.participant.isSpeaking !== b.participant.isSpeaking) {\n      return sortParticipantsByIsSpeaking(a.participant, b.participant);\n    }\n    if (a.participant.lastSpokeAt !== b.participant.lastSpokeAt) {\n      return sortParticipantsByLastSpokenAT(a.participant, b.participant);\n    }\n    if (isTrackReference(a) !== isTrackReference(b)) {\n      return sortTrackReferencesByType(a, b);\n    }\n    if (a.participant.isCameraEnabled !== b.participant.isCameraEnabled) {\n      return sortTrackRefsByIsCameraEnabled(a, b);\n    }\n    return sortParticipantsByJoinedAt(a.participant, b.participant);\n  });\n  return [...localCameraTracks, ...remoteCameraTracks];\n}\n\n// src/sorting/sort-participants.ts\n\nfunction sortParticipants(participants) {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    if (a.isSpeaking && b.isSpeaking) {\n      return sortParticipantsByAudioLevel(a, b);\n    }\n    if (a.isSpeaking !== b.isSpeaking) {\n      return sortParticipantsByIsSpeaking(a, b);\n    }\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      return sortParticipantsByLastSpokenAT(a, b);\n    }\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n    return sortParticipantsByJoinedAt(a, b);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof livekit_client__WEBPACK_IMPORTED_MODULE_0__.LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(0, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n\n// src/helper/array-helper.ts\nfunction chunk(input, size) {\n  return input.reduce(\n    (arr, item, idx) => {\n      return idx % size === 0 ? [...arr, [item]] : [...arr.slice(0, -1), [...arr.slice(-1)[0], item]];\n    },\n    []\n  );\n}\nfunction zip(a1, a2) {\n  const resultLength = Math.max(a1.length, a2.length);\n  return new Array(resultLength).fill([]).map((_val, idx) => [a1[idx], a2[idx]]);\n}\nfunction differenceBy(a1, a2, by) {\n  return a1.filter((c) => !a2.map((v) => by(v)).includes(by(c)));\n}\n\n// src/track-reference/test-utils.ts\n\nfunction flatTrackReferenceArray(list) {\n  return list.map((item) => {\n    if (typeof item === \"string\" || typeof item === \"number\") {\n      return `${item}`;\n    } else {\n      return getTrackReferenceId(item);\n    }\n  });\n}\n\n// src/sorting/tile-array-update.ts\nfunction visualPageChange(state, next) {\n  return {\n    dropped: differenceBy(state, next, getTrackReferenceId),\n    added: differenceBy(next, state, getTrackReferenceId)\n  };\n}\nfunction listNeedsUpdating(changes) {\n  return changes.added.length !== 0 || changes.dropped.length !== 0;\n}\nfunction findIndex(trackReference, trackReferences) {\n  const indexToReplace = trackReferences.findIndex(\n    (trackReference_) => getTrackReferenceId(trackReference_) === getTrackReferenceId(trackReference)\n  );\n  if (indexToReplace === -1) {\n    throw new Error(\n      `Element not part of the array: ${getTrackReferenceId(\n        trackReference\n      )} not in ${flatTrackReferenceArray(trackReferences)}`\n    );\n  }\n  return indexToReplace;\n}\nfunction swapItems(moveForward, moveBack, trackReferences) {\n  const indexToReplace = findIndex(moveForward, trackReferences);\n  const indexReplaceWith = findIndex(moveBack, trackReferences);\n  trackReferences.splice(indexToReplace, 1, moveBack);\n  trackReferences.splice(indexReplaceWith, 1, moveForward);\n  return trackReferences;\n}\nfunction dropItem(itemToDrop, list) {\n  const indexOfElementToDrop = findIndex(itemToDrop, list);\n  list.splice(indexOfElementToDrop, 1);\n  return list;\n}\nfunction addItem(itemToAdd, list) {\n  return [...list, itemToAdd];\n}\nfunction divideIntoPages(list, maxElementsOnPage) {\n  const pages = chunk(list, maxElementsOnPage);\n  return pages;\n}\nfunction updatePages(currentList, nextList, maxItemsOnPage) {\n  let updatedList = refreshList(currentList, nextList);\n  if (updatedList.length < nextList.length) {\n    const addedItems = differenceBy(nextList, updatedList, getTrackReferenceId);\n    updatedList = [...updatedList, ...addedItems];\n  }\n  const currentPages = divideIntoPages(updatedList, maxItemsOnPage);\n  const nextPages = divideIntoPages(nextList, maxItemsOnPage);\n  zip(currentPages, nextPages).forEach(([currentPage, nextPage], pageIndex) => {\n    if (currentPage && nextPage) {\n      const updatedPage = divideIntoPages(updatedList, maxItemsOnPage)[pageIndex];\n      const changes = visualPageChange(updatedPage, nextPage);\n      if (listNeedsUpdating(changes)) {\n        log.debug(\n          `Detected visual changes on page: ${pageIndex}, current: ${flatTrackReferenceArray(\n            currentPage\n          )}, next: ${flatTrackReferenceArray(nextPage)}`,\n          { changes }\n        );\n        if (changes.added.length === changes.dropped.length) {\n          zip(changes.added, changes.dropped).forEach(([added, dropped]) => {\n            if (added && dropped) {\n              updatedList = swapItems(added, dropped, updatedList);\n            } else {\n              throw new Error(\n                `For a swap action we need a addition and a removal one is missing: ${added}, ${dropped}`\n              );\n            }\n          });\n        }\n        if (changes.added.length === 0 && changes.dropped.length > 0) {\n          changes.dropped.forEach((item) => {\n            updatedList = dropItem(item, updatedList);\n          });\n        }\n        if (changes.added.length > 0 && changes.dropped.length === 0) {\n          changes.added.forEach((item) => {\n            updatedList = addItem(item, updatedList);\n          });\n        }\n      }\n    }\n  });\n  if (updatedList.length > nextList.length) {\n    const missingItems = differenceBy(updatedList, nextList, getTrackReferenceId);\n    updatedList = updatedList.filter(\n      (item) => !missingItems.map(getTrackReferenceId).includes(getTrackReferenceId(item))\n    );\n  }\n  return updatedList;\n}\nfunction refreshList(currentList, nextList) {\n  return currentList.map((currentItem) => {\n    const updateForCurrentItem = nextList.find(\n      (newItem_) => (\n        // If the IDs match or ..\n        getTrackReferenceId(currentItem) === getTrackReferenceId(newItem_) || // ... if the current item is a placeholder and the new item is the track reference can replace it.\n        typeof currentItem !== \"number\" && isTrackReferencePlaceholder(currentItem) && isTrackReference(newItem_) && isPlaceholderReplacement(currentItem, newItem_)\n      )\n    );\n    return updateForCurrentItem != null ? updateForCurrentItem : currentItem;\n  });\n}\n\n// src/components/mediaToggle.ts\n\n\n\n// src/observables/participant.ts\n\n\n\n// src/observables/room.ts\n\n\nfunction observeRoomEvents(room, ...events) {\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => {\n    const onRoomUpdate = () => {\n      subscribe.next(room);\n    };\n    events.forEach((evt) => {\n      room.on(evt, onRoomUpdate);\n    });\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        room.off(evt, onRoomUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(room));\n  return observable;\n}\nfunction roomEventSelector(room, event) {\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => {\n    const update = (...params) => {\n      subscribe.next(params);\n    };\n    room.on(event, update);\n    const unsubscribe = () => {\n      room.off(event, update);\n    };\n    return unsubscribe;\n  });\n  return observable;\n}\nfunction roomObserver(room) {\n  const observable = observeRoomEvents(\n    room,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveSpeakersChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnsubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.AudioPlaybackStatusChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged\n  ).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(room));\n  return observable;\n}\nfunction connectionStateObserver(room) {\n  return roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([connectionState]) => connectionState),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(room.state)\n  );\n}\nfunction screenShareObserver(room) {\n  let screenShareSubscriber;\n  const observers = [];\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscriber) => {\n    screenShareSubscriber = subscriber;\n    return () => {\n      observers.forEach((observer) => {\n        observer.unsubscribe();\n      });\n    };\n  });\n  const screenShareTracks = [];\n  const handleSub = (publication, participant) => {\n    if (publication.source !== livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare && publication.source !== livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShareAudio) {\n      return;\n    }\n    let trackMap = screenShareTracks.find((tr) => tr.participant.identity === participant.identity);\n    const getScreenShareTracks = (participant2) => {\n      return participant2.getTracks().filter(\n        (track) => (track.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare || track.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShareAudio) && track.track\n      );\n    };\n    if (!trackMap) {\n      trackMap = {\n        participant,\n        tracks: getScreenShareTracks(participant)\n      };\n    } else {\n      const index = screenShareTracks.indexOf(trackMap);\n      screenShareTracks.splice(index, 1);\n      trackMap.tracks = getScreenShareTracks(participant);\n    }\n    if (trackMap.tracks.length > 0) {\n      screenShareTracks.push(trackMap);\n    }\n    screenShareSubscriber.next(screenShareTracks);\n  };\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscribed).subscribe(\n      ([, ...args]) => handleSub(...args)\n    )\n  );\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnsubscribed).subscribe(\n      ([, ...args]) => handleSub(...args)\n    )\n  );\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished).subscribe((args) => handleSub(...args))\n  );\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished).subscribe((args) => {\n      handleSub(...args);\n    })\n  );\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackMuted).subscribe((args) => {\n      handleSub(...args);\n    })\n  );\n  observers.push(\n    roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnmuted).subscribe((args) => {\n      handleSub(...args);\n    })\n  );\n  setTimeout(() => {\n    for (const p of room.participants.values()) {\n      p.getTracks().forEach((track) => {\n        handleSub(track, p);\n      });\n    }\n  }, 1);\n  return observable;\n}\nfunction roomInfoObserver(room) {\n  const observer = observeRoomEvents(\n    room,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.RoomMetadataChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((r) => {\n      return { name: r.name, metadata: r.metadata };\n    })\n  );\n  return observer;\n}\nfunction activeSpeakerObserver(room) {\n  return roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveSpeakersChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([speakers]) => speakers)\n  );\n}\nfunction createMediaDeviceObserver(kind, onError, requestPermissions = true) {\n  var _a;\n  const onDeviceChange = () => __async(this, null, function* () {\n    try {\n      const newDevices = yield livekit_client__WEBPACK_IMPORTED_MODULE_0__.Room.getLocalDevices(kind, requestPermissions);\n      deviceSubject.next(newDevices);\n    } catch (e) {\n      onError == null ? void 0 : onError(e);\n    }\n  });\n  const deviceSubject = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  const observable = deviceSubject.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.finalize)(() => {\n      var _a2;\n      (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.removeEventListener(\"devicechange\", onDeviceChange);\n    })\n  );\n  if (typeof window !== \"undefined\") {\n    if (!window.isSecureContext) {\n      throw new Error(\n        `Accessing media devices is available only in secure contexts (HTTPS and localhost), in some or all supporting browsers. See: https://developer.mozilla.org/en-US/docs/Web/API/Navigator/mediaDevices`\n      );\n    }\n    (_a = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a.addEventListener(\"devicechange\", onDeviceChange);\n  }\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.concat)(\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.Room.getLocalDevices(kind, requestPermissions).catch((e) => onError == null ? void 0 : onError(e)),\n    observable\n  );\n}\nfunction createDataObserver(room) {\n  return roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.DataReceived);\n}\nfunction roomAudioPlaybackAllowedObservable(room) {\n  const observable = observeRoomEvents(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.AudioPlaybackStatusChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((room2) => {\n      return { canPlayAudio: room2.canPlaybackAudio };\n    })\n  );\n  return observable;\n}\nfunction roomVideoPlaybackAllowedObservable(room) {\n  const observable = observeRoomEvents(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.VideoPlaybackStatusChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((room2) => {\n      return { canPlayVideo: room2.canPlaybackVideo };\n    })\n  );\n  return observable;\n}\nfunction createActiveDeviceObservable(room, kind) {\n  return roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveDeviceChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)(([kindOfDevice]) => kindOfDevice === kind),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([kind2, deviceId]) => {\n      log.debug(\"activeDeviceObservable | RoomEvent.ActiveDeviceChanged\", { kind: kind2, deviceId });\n      return deviceId;\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(room.getActiveDevice(kind))\n  );\n}\nfunction encryptionStatusObservable(room, participant) {\n  return roomEventSelector(room, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantEncryptionStatusChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)(\n      ([, p]) => participant.identity === (p == null ? void 0 : p.identity) || !p && participant.identity === room.localParticipant.identity\n    ),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([encrypted]) => encrypted),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(\n      participant instanceof livekit_client__WEBPACK_IMPORTED_MODULE_0__.LocalParticipant ? participant.isE2EEEnabled : participant.isEncrypted\n    )\n  );\n}\n\n// src/components/mediaTrack.ts\n\n\n\n// src/styles-interface/class-prefixer.ts\nfunction prefixClass(unprefixedClassName) {\n  return `${cssPrefix}-${unprefixedClassName}`;\n}\n\n// src/components/mediaTrack.ts\nfunction setupMediaTrack(trackIdentifier) {\n  const initialPub = getTrackByIdentifier(trackIdentifier);\n  const trackObserver = observeParticipantMedia(trackIdentifier.participant).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(() => {\n      return getTrackByIdentifier(trackIdentifier);\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(initialPub)\n  );\n  const className = prefixClass(\n    trackIdentifier.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera || trackIdentifier.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare ? \"participant-media-video\" : \"participant-media-audio\"\n  );\n  return { className, trackObserver };\n}\nfunction getTrackByIdentifier(options) {\n  if (isTrackReference(options)) {\n    return options.publication;\n  } else {\n    const { source, name, participant } = options;\n    if (source && name) {\n      return participant.getTracks().find((pub) => pub.source === source && pub.trackName === name);\n    } else if (name) {\n      return participant.getTrackByName(name);\n    } else if (source) {\n      return participant.getTrack(source);\n    } else {\n      throw new Error(\"At least one of source and name needs to be defined\");\n    }\n  }\n}\n\n// src/observables/participant.ts\nfunction observeParticipantEvents(participant, ...events) {\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => {\n    const onParticipantUpdate = () => {\n      subscribe.next(participant);\n    };\n    events.forEach((evt) => {\n      participant.on(evt, onParticipantUpdate);\n    });\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        participant.off(evt, onParticipantUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(participant));\n  return observable;\n}\nfunction observeParticipantMedia(participant) {\n  const participantObserver = observeParticipantEvents(\n    participant,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged,\n    // ParticipantEvent.IsSpeakingChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.MediaDevicesError,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionStatusChanged\n    // ParticipantEvent.ConnectionQualityChanged,\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((p) => {\n      const { isMicrophoneEnabled, isCameraEnabled, isScreenShareEnabled } = p;\n      const microphoneTrack = p.getTrack(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone);\n      const cameraTrack = p.getTrack(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera);\n      const participantMedia = {\n        isCameraEnabled,\n        isMicrophoneEnabled,\n        isScreenShareEnabled,\n        cameraTrack,\n        microphoneTrack,\n        participant: p\n      };\n      return participantMedia;\n    })\n  );\n  return participantObserver;\n}\nfunction createTrackObserver(participant, options) {\n  return observeParticipantMedia(participant).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(() => {\n      return { publication: getTrackByIdentifier(options) };\n    })\n  );\n}\nfunction participantInfoObserver(participant) {\n  const observer = observeParticipantEvents(\n    participant,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantMetadataChanged\n    // ParticipantEvent.LocalTrackPublished,\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(({ name, identity, metadata }) => {\n      return {\n        name,\n        identity,\n        metadata\n      };\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)({\n      name: participant.name,\n      identity: participant.identity,\n      metadata: participant.metadata\n    })\n  );\n  return observer;\n}\nfunction createConnectionQualityObserver(participant) {\n  const observer = participantEventSelector(\n    participant,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ConnectionQualityChanged\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([quality]) => quality),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(participant.connectionQuality)\n  );\n  return observer;\n}\nfunction participantEventSelector(participant, event) {\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => {\n    const update = (...params) => {\n      subscribe.next(params);\n    };\n    participant.on(event, update);\n    const unsubscribe = () => {\n      participant.off(event, update);\n    };\n    return unsubscribe;\n  });\n  return observable;\n}\nfunction mutedObserver(trackRef) {\n  var _a, _b, _c, _d;\n  return observeParticipantEvents(\n    trackRef.participant,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnsubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((participant) => {\n      var _a2, _b2;\n      const pub = (_a2 = trackRef.publication) != null ? _a2 : participant.getTrack(trackRef.source);\n      return (_b2 = pub == null ? void 0 : pub.isMuted) != null ? _b2 : true;\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(\n      (_d = (_c = (_a = trackRef.publication) == null ? void 0 : _a.isMuted) != null ? _c : (_b = trackRef.participant.getTrack(trackRef.source)) == null ? void 0 : _b.isMuted) != null ? _d : true\n    )\n  );\n}\nfunction createIsSpeakingObserver(participant) {\n  return participantEventSelector(participant, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.IsSpeakingChanged).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([isSpeaking]) => isSpeaking)\n  );\n}\nfunction connectedParticipantsObserver(room, options = {}) {\n  var _a;\n  let subscriber;\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((sub) => {\n    subscriber = sub;\n    return () => listener.unsubscribe();\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(Array.from(room.participants.values())));\n  const additionalRoomEvents = (_a = options.additionalRoomEvents) != null ? _a : allParticipantRoomEvents;\n  const roomEvents = Array.from(\n    /* @__PURE__ */ new Set([\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n      ...additionalRoomEvents\n    ])\n  );\n  const listener = observeRoomEvents(room, ...roomEvents).subscribe(\n    (r) => subscriber == null ? void 0 : subscriber.next(Array.from(r.participants.values()))\n  );\n  if (room.participants.size > 0) {\n    subscriber == null ? void 0 : subscriber.next(Array.from(room.participants.values()));\n  }\n  return observable;\n}\nfunction connectedParticipantObserver(room, identity, options = {}) {\n  var _a;\n  const additionalEvents = (_a = options.additionalEvents) != null ? _a : allParticipantEvents;\n  const observable = observeRoomEvents(\n    room,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.switchMap)((r) => {\n      const participant = r.getParticipantByIdentity(identity);\n      if (participant) {\n        return observeParticipantEvents(participant, ...additionalEvents);\n      } else {\n        return new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => subscribe.next(void 0));\n      }\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(room.getParticipantByIdentity(identity))\n  );\n  return observable;\n}\nfunction participantPermissionObserver(participant) {\n  const observer = participantEventSelector(\n    participant,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(() => participant.permissions),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(participant.permissions)\n  );\n  return observer;\n}\n\n// src/components/mediaToggle.ts\nfunction setupMediaToggle(source, room, options) {\n  const { localParticipant } = room;\n  const getSourceEnabled = (source2, localParticipant2) => {\n    let isEnabled = false;\n    switch (source2) {\n      case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n        isEnabled = localParticipant2.isCameraEnabled;\n        break;\n      case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n        isEnabled = localParticipant2.isMicrophoneEnabled;\n        break;\n      case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare:\n        isEnabled = localParticipant2.isScreenShareEnabled;\n        break;\n      default:\n        break;\n    }\n    return isEnabled;\n  };\n  const enabledObserver = observeParticipantMedia(localParticipant).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((media) => {\n      return getSourceEnabled(source, media.participant);\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(getSourceEnabled(source, localParticipant))\n  );\n  const pendingSubject = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  const toggle = (forceState, captureOptions) => __async(this, null, function* () {\n    try {\n      captureOptions != null ? captureOptions : captureOptions = options;\n      pendingSubject.next(true);\n      switch (source) {\n        case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n          yield localParticipant.setCameraEnabled(\n            forceState != null ? forceState : !localParticipant.isCameraEnabled,\n            captureOptions\n          );\n          break;\n        case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n          yield localParticipant.setMicrophoneEnabled(\n            forceState != null ? forceState : !localParticipant.isMicrophoneEnabled,\n            captureOptions\n          );\n          break;\n        case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare:\n          yield localParticipant.setScreenShareEnabled(\n            forceState != null ? forceState : !localParticipant.isScreenShareEnabled,\n            captureOptions\n          );\n          break;\n        default:\n          break;\n      }\n    } finally {\n      pendingSubject.next(false);\n    }\n  });\n  const className = prefixClass(\"button\");\n  return {\n    className,\n    toggle,\n    enabledObserver,\n    pendingObserver: pendingSubject.asObservable()\n  };\n}\nfunction setupManualToggle() {\n  let state = false;\n  const enabledSubject = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  const pendingSubject = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  const toggle = (forceState) => {\n    pendingSubject.next(true);\n    state = forceState != null ? forceState : !state;\n    enabledSubject.next(state);\n    pendingSubject.next(false);\n  };\n  const className = prefixClass(\"button\");\n  return {\n    className,\n    toggle,\n    enabledObserver: enabledSubject.asObservable(),\n    pendingObserver: pendingSubject.asObservable()\n  };\n}\n\n// src/components/mediaDeviceSelect.ts\n\n\nfunction setupDeviceSelector(kind, room, localTrack) {\n  const activeDeviceSubject = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(void 0);\n  const activeDeviceObservable = room ? createActiveDeviceObservable(room, kind) : activeDeviceSubject.asObservable();\n  const setActiveMediaDevice = (_0, ..._1) => __async(this, [_0, ..._1], function* (id, options = {}) {\n    var _a, _b, _c;\n    if (room) {\n      log.debug(`Switching active device of kind \"${kind}\" with id ${id}.`);\n      yield room.switchActiveDevice(kind, id, options.exact);\n      const actualDeviceId = (_a = room.getActiveDevice(kind)) != null ? _a : id;\n      if (actualDeviceId !== id && id !== \"default\") {\n        log.info(\n          `We tried to select the device with id (${id}), but the browser decided to select the device with id (${actualDeviceId}) instead.`\n        );\n      }\n      let targetTrack = void 0;\n      if (kind === \"audioinput\")\n        targetTrack = (_b = room.localParticipant.getTrack(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone)) == null ? void 0 : _b.track;\n      else if (kind === \"videoinput\") {\n        targetTrack = (_c = room.localParticipant.getTrack(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera)) == null ? void 0 : _c.track;\n      }\n      const useDefault = id === \"default\" && !targetTrack || id === \"default\" && (targetTrack == null ? void 0 : targetTrack.mediaStreamTrack.label.startsWith(\"Default\"));\n      activeDeviceSubject.next(useDefault ? id : actualDeviceId);\n    } else if (localTrack) {\n      yield localTrack.setDeviceId(options.exact ? { exact: id } : id);\n      const actualId = yield localTrack.getDeviceId();\n      activeDeviceSubject.next(\n        id === \"default\" && localTrack.mediaStreamTrack.label.startsWith(\"Default\") ? id : actualId\n      );\n    } else if (activeDeviceSubject.value !== id) {\n      log.warn(\n        \"device switch skipped, please provide either a room or a local track to switch on. \"\n      );\n      activeDeviceSubject.next(id);\n    }\n  });\n  const className = prefixClass(\"media-device-select\");\n  return {\n    className,\n    activeDeviceObservable,\n    setActiveMediaDevice\n  };\n}\n\n// src/components/disconnectButton.ts\nfunction setupDisconnectButton(room) {\n  const disconnect = (stopTracks) => {\n    room.disconnect(stopTracks);\n  };\n  const className = prefixClass(\"disconnect-button\");\n  return { className, disconnect };\n}\n\n// src/components/connectionQualityIndicator.ts\nfunction setupConnectionQualityIndicator(participant) {\n  const className = prefixClass(\"connection-quality\");\n  const connectionQualityObserver = createConnectionQualityObserver(participant);\n  return { className, connectionQualityObserver };\n}\n\n// src/components/trackMutedIndicator.ts\n\nfunction setupTrackMutedIndicator(trackRef) {\n  let classForSource = \"track-muted-indicator-camera\";\n  switch (trackRef.source) {\n    case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n      classForSource = \"track-muted-indicator-camera\";\n      break;\n    case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n      classForSource = \"track-muted-indicator-microphone\";\n      break;\n    default:\n      break;\n  }\n  const className = prefixClass(classForSource);\n  const mediaMutedObserver = mutedObserver(trackRef);\n  return { className, mediaMutedObserver };\n}\n\n// src/components/participantName.ts\nfunction setupParticipantName(participant) {\n  const infoObserver = participantInfoObserver(participant);\n  return { className: \"lk-participant-name\", infoObserver };\n}\n\n// src/components/participantTile.ts\nfunction setupParticipantTile() {\n  const className = prefixClass(\"participant-tile\");\n  return {\n    className\n  };\n}\n\n// src/components/chat.ts\n\n\n\n// src/observables/dataChannel.ts\n\n\nvar DataTopic = {\n  CHAT: \"lk-chat-topic\"\n};\nfunction sendMessage(_0, _1, _2) {\n  return __async(this, arguments, function* (localParticipant, payload, topic, options = {}) {\n    const { kind, destination } = options;\n    yield localParticipant.publishData(payload, kind != null ? kind : livekit_client__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind.RELIABLE, {\n      destination,\n      topic\n    });\n  });\n}\nfunction setupDataMessageHandler(room, topic, onMessage) {\n  const messageObservable = createDataObserver(room).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)(([, , , messageTopic]) => topic === void 0 || messageTopic === topic),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(([payload, participant, , messageTopic]) => {\n      const msg = {\n        payload,\n        topic: messageTopic,\n        from: participant\n      };\n      onMessage == null ? void 0 : onMessage(msg);\n      return msg;\n    })\n  );\n  let isSendingSubscriber;\n  const isSendingObservable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscriber) => {\n    isSendingSubscriber = subscriber;\n  });\n  const send = (_0, ..._1) => __async(this, [_0, ..._1], function* (payload, options = {}) {\n    isSendingSubscriber.next(true);\n    try {\n      yield sendMessage(room.localParticipant, payload, topic, options);\n    } finally {\n      isSendingSubscriber.next(false);\n    }\n  });\n  return { messageObservable, isSendingObservable, send };\n}\n\n// src/components/chat.ts\nvar encoder = new TextEncoder();\nvar decoder = new TextDecoder();\nvar topicSubjectMap = /* @__PURE__ */ new Map();\nvar encode = (message) => encoder.encode(JSON.stringify({ message: message.message, timestamp: message.timestamp }));\nvar decode = (message) => JSON.parse(decoder.decode(message));\nfunction setupChat(room, options) {\n  var _a, _b;\n  const onDestroyObservable = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  const { messageDecoder, messageEncoder, channelTopic } = options != null ? options : {};\n  const topic = channelTopic != null ? channelTopic : DataTopic.CHAT;\n  let needsSetup = false;\n  if (!topicSubjectMap.has(room)) {\n    needsSetup = true;\n  }\n  const topicMap = (_a = topicSubjectMap.get(room)) != null ? _a : /* @__PURE__ */ new Map();\n  const messageSubject = (_b = topicMap.get(topic)) != null ? _b : new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();\n  topicMap.set(topic, messageSubject);\n  topicSubjectMap.set(room, topicMap);\n  if (needsSetup) {\n    const { messageObservable } = setupDataMessageHandler(room, topic);\n    messageObservable.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_14__.takeUntil)(onDestroyObservable)).subscribe(messageSubject);\n  }\n  const finalMessageDecoder = messageDecoder != null ? messageDecoder : decode;\n  const messagesObservable = messageSubject.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((msg) => {\n      const parsedMessage = finalMessageDecoder(msg.payload);\n      const newMessage = __spreadProps(__spreadValues({}, parsedMessage), { from: msg.from });\n      return newMessage;\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.scan)((acc, value) => [...acc, value], []),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.takeUntil)(onDestroyObservable)\n  );\n  const isSending$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(false);\n  const finalMessageEncoder = messageEncoder != null ? messageEncoder : encode;\n  const send = (message) => __async(this, null, function* () {\n    const timestamp = Date.now();\n    const encodedMsg = finalMessageEncoder({ message, timestamp });\n    isSending$.next(true);\n    try {\n      yield sendMessage(room.localParticipant, encodedMsg, topic, {\n        kind: livekit_client__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind.RELIABLE\n      });\n      messageSubject.next({\n        payload: encodedMsg,\n        topic,\n        from: room.localParticipant\n      });\n    } finally {\n      isSending$.next(false);\n    }\n  });\n  function destroy() {\n    onDestroyObservable.next();\n    onDestroyObservable.complete();\n    topicSubjectMap.clear();\n  }\n  room.once(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.Disconnected, destroy);\n  return { messageObservable: messagesObservable, isSendingObservable: isSending$, send };\n}\n\n// src/components/startAudio.ts\nfunction setupStartAudio() {\n  const handleStartAudioPlayback = (room) => __async(this, null, function* () {\n    log.info(\"Start Audio for room: \", room);\n    yield room.startAudio();\n  });\n  const className = prefixClass(\"start-audio-button\");\n  return { className, roomAudioPlaybackAllowedObservable, handleStartAudioPlayback };\n}\n\n// src/components/startVideo.ts\nfunction setupStartVideo() {\n  const handleStartVideoPlayback = (room) => __async(this, null, function* () {\n    log.info(\"Start Video for room: \", room);\n    yield room.startVideo();\n  });\n  const className = prefixClass(\"start-audio-button\");\n  return { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback };\n}\n\n// src/components/chatToggle.ts\nfunction setupChatToggle() {\n  const className = [prefixClass(\"button\"), prefixClass(\"chat-toggle\")].join(\" \");\n  return { className };\n}\n\n// src/components/focusToggle.ts\nfunction setupFocusToggle() {\n  const className = [prefixClass(\"button\"), prefixClass(\"focus-toggle-button\")].join(\" \");\n  return { className };\n}\n\n// src/components/clearPinButton.ts\nfunction setupClearPinButton() {\n  const className = \"lk-clear-pin-button lk-button\";\n  return { className };\n}\n\n// src/components/room.ts\nfunction setupLiveKitRoom() {\n  const className = \"lk-room-container\";\n  return { className };\n}\n\n// src/observables/track.ts\n\n\nfunction trackObservable(track) {\n  const trackObserver = observeTrackEvents(\n    track,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.Muted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.Unmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.Subscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.Unsubscribed\n  );\n  return trackObserver;\n}\nfunction observeTrackEvents(track, ...events) {\n  const observable = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Observable((subscribe) => {\n    const onTrackUpdate = () => {\n      subscribe.next(track);\n    };\n    events.forEach((evt) => {\n      track.on(evt, onTrackUpdate);\n    });\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        track.off(evt, onTrackUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(track));\n  return observable;\n}\nfunction getTrackReferences(room, sources, onlySubscribedTracks = true) {\n  const localParticipant = room.localParticipant;\n  const allParticipants = [localParticipant, ...Array.from(room.participants.values())];\n  const trackReferences = [];\n  allParticipants.forEach((participant) => {\n    sources.forEach((source) => {\n      const sourceReferences = Array.from(\n        participant.tracks.values()\n      ).filter(\n        (track) => track.source === source && // either return all or only the ones that are subscribed\n        (!onlySubscribedTracks || track.track)\n      ).map((track) => {\n        return {\n          participant,\n          publication: track,\n          source: track.source\n        };\n      });\n      trackReferences.push(...sourceReferences);\n    });\n  });\n  return { trackReferences, participants: allParticipants };\n}\nfunction trackReferencesObservable(room, sources, options) {\n  var _a, _b;\n  const additionalRoomEvents = (_a = options.additionalRoomEvents) != null ? _a : allParticipantRoomEvents;\n  const onlySubscribedTracks = (_b = options.onlySubscribed) != null ? _b : true;\n  const roomEvents = Array.from(\n    (/* @__PURE__ */ new Set([\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackPublished,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnpublished,\n      livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionStatusChanged,\n      ...additionalRoomEvents\n    ])).values()\n  );\n  const observable = observeRoomEvents(room, ...roomEvents).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)((room2) => {\n      const data = getTrackReferences(room2, sources, onlySubscribedTracks);\n      log.debug(`TrackReference[] was updated. (length ${data.trackReferences.length})`, data);\n      return data;\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.startWith)(getTrackReferences(room, sources, onlySubscribedTracks))\n  );\n  return observable;\n}\n\n// src/observables/dom-event.ts\n\nfunction createInteractingObservable(htmlElement, inactiveAfter = 1e3) {\n  if (htmlElement === null)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.of)(false);\n  const move$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.fromEvent)(htmlElement, \"mousemove\", { passive: true }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.map)(() => true));\n  const moveAndStop$ = move$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.timeout)({\n      each: inactiveAfter,\n      with: () => (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.of)(false), moveAndStop$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.skipUntil)(move$)))\n    }),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.distinctUntilChanged)()\n  );\n  return moveAndStop$;\n}\n\n// src/persistent-storage/local-storage-helpers.ts\nfunction saveToLocalStorage(key, value) {\n  if (typeof localStorage === \"undefined\") {\n    log.error(\"Local storage is not available.\");\n    return;\n  }\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    log.error(`Error setting item to local storage: ${error}`);\n  }\n}\nfunction loadFromLocalStorage(key) {\n  if (typeof localStorage === \"undefined\") {\n    log.error(\"Local storage is not available.\");\n    return void 0;\n  }\n  try {\n    const item = localStorage.getItem(key);\n    if (!item) {\n      log.warn(`Item with key ${key} does not exist in local storage.`);\n      return void 0;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    log.error(`Error getting item from local storage: ${error}`);\n    return void 0;\n  }\n}\nfunction createLocalStorageInterface(key) {\n  return {\n    load: () => loadFromLocalStorage(key),\n    save: (value) => saveToLocalStorage(key, value)\n  };\n}\n\n// src/persistent-storage/user-choices.ts\nvar USER_CHOICES_KEY = `${cssPrefix}-user-choices`;\nvar defaultUserChoices = {\n  videoEnabled: true,\n  audioEnabled: true,\n  videoDeviceId: \"\",\n  audioDeviceId: \"\",\n  username: \"\",\n  e2ee: false,\n  sharedPassphrase: \"\"\n};\nvar { load, save } = createLocalStorageInterface(USER_CHOICES_KEY);\nfunction saveUserChoices(userChoices, preventSave = false) {\n  if (preventSave === true) {\n    return;\n  }\n  const _a = userChoices, { e2ee, sharedPassphrase } = _a, toSave = __objRest(_a, [\"e2ee\", \"sharedPassphrase\"]);\n  save(toSave);\n}\nfunction loadUserChoices(defaults, preventLoad = false) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const fallback = {\n    videoEnabled: (_a = defaults == null ? void 0 : defaults.videoEnabled) != null ? _a : defaultUserChoices.videoEnabled,\n    audioEnabled: (_b = defaults == null ? void 0 : defaults.audioEnabled) != null ? _b : defaultUserChoices.audioEnabled,\n    videoDeviceId: (_c = defaults == null ? void 0 : defaults.videoDeviceId) != null ? _c : defaultUserChoices.videoDeviceId,\n    audioDeviceId: (_d = defaults == null ? void 0 : defaults.audioDeviceId) != null ? _d : defaultUserChoices.audioDeviceId,\n    username: (_e = defaults == null ? void 0 : defaults.username) != null ? _e : defaultUserChoices.username,\n    e2ee: (_f = defaults == null ? void 0 : defaults.e2ee) != null ? _f : defaultUserChoices.e2ee,\n    sharedPassphrase: (_g = defaults == null ? void 0 : defaults.sharedPassphrase) != null ? _g : defaultUserChoices.sharedPassphrase\n  };\n  if (preventLoad) {\n    return fallback;\n  } else {\n    const maybeLoadedObject = load();\n    const result = __spreadValues(__spreadValues({}, fallback), maybeLoadedObject != null ? maybeLoadedObject : {});\n    return result;\n  }\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpdmVraXQvY29tcG9uZW50cy1jb3JlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNxRTs7QUFFckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGVBQWU7QUFDN0IsSUFBSTtBQUNKLGNBQWMsb0NBQW9DLEdBQUcsc0JBQXNCO0FBQzNFLElBQUk7QUFDSixjQUFjLG9DQUFvQyxHQUFHLGtDQUFrQyxHQUFHLG9DQUFvQztBQUM5SCxJQUFJO0FBQ0osMEVBQTBFLGVBQWU7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FB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LCtEQUErRDtBQUNsSDtBQUNBO0FBQ0E7QUEyRkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW0tY2hhdC1hcHBsaWNhdGlvbi8uL25vZGVfbW9kdWxlcy9AbGl2ZWtpdC9jb21wb25lbnRzLWNvcmUvZGlzdC9pbmRleC5tanM/MjJjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcbnZhciBfX2dldE93blByb3BEZXNjcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzO1xudmFyIF9fZ2V0T3duUHJvcFN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyA9IChhLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gIGlmIChfX2dldE93blByb3BTeW1ib2xzKVxuICAgIGZvciAodmFyIHByb3Agb2YgX19nZXRPd25Qcm9wU3ltYm9scyhiKSkge1xuICAgICAgaWYgKF9fcHJvcElzRW51bS5jYWxsKGIsIHByb3ApKVxuICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gICAgfVxuICByZXR1cm4gYTtcbn07XG52YXIgX19zcHJlYWRQcm9wcyA9IChhLCBiKSA9PiBfX2RlZlByb3BzKGEsIF9fZ2V0T3duUHJvcERlc2NzKGIpKTtcbnZhciBfX29ialJlc3QgPSAoc291cmNlLCBleGNsdWRlKSA9PiB7XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKHNvdXJjZSwgcHJvcCkgJiYgZXhjbHVkZS5pbmRleE9mKHByb3ApIDwgMClcbiAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgaWYgKHNvdXJjZSAhPSBudWxsICYmIF9fZ2V0T3duUHJvcFN5bWJvbHMpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzKHNvdXJjZSkpIHtcbiAgICAgIGlmIChleGNsdWRlLmluZGV4T2YocHJvcCkgPCAwICYmIF9fcHJvcElzRW51bS5jYWxsKHNvdXJjZSwgcHJvcCkpXG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICB9XG4gIHJldHVybiB0YXJnZXQ7XG59O1xudmFyIF9fYXN5bmMgPSAoX190aGlzLCBfX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGZ1bGZpbGxlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgcmVqZWN0ZWQgPSAodmFsdWUpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHN0ZXAoZ2VuZXJhdG9yLnRocm93KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBzdGVwID0gKHgpID0+IHguZG9uZSA/IHJlc29sdmUoeC52YWx1ZSkgOiBQcm9taXNlLnJlc29sdmUoeC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkoX190aGlzLCBfX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gIH0pO1xufTtcblxuLy8gc3JjL2NvbnN0YW50cy50c1xudmFyIGNzc1ByZWZpeCA9IFwibGtcIjtcblxuLy8gc3JjL3V0aWxzLnRzXG5pbXBvcnQgeyBMb2NhbFBhcnRpY2lwYW50LCBSZW1vdGVQYXJ0aWNpcGFudCB9IGZyb20gXCJsaXZla2l0LWNsaWVudFwiO1xuXG4vLyBzcmMvdHJhY2stcmVmZXJlbmNlL3RyYWNrLXJlZmVyZW5jZS50eXBlcy50c1xuZnVuY3Rpb24gaXNUcmFja1JlZmVyZW5jZSh0cmFja1JlZmVyZW5jZSkge1xuICBpZiAodHlwZW9mIHRyYWNrUmVmZXJlbmNlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBpc1RyYWNrUmVmZXJlbmNlU3Vic2NyaWJlZCh0cmFja1JlZmVyZW5jZSkgfHwgaXNUcmFja1JlZmVyZW5jZVB1Ymxpc2hlZCh0cmFja1JlZmVyZW5jZSk7XG59XG5mdW5jdGlvbiBpc1RyYWNrUmVmZXJlbmNlU3Vic2NyaWJlZCh0cmFja1JlZmVyZW5jZSkge1xuICB2YXIgX2E7XG4gIGlmICghdHJhY2tSZWZlcmVuY2UpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRyYWNrUmVmZXJlbmNlLmhhc093blByb3BlcnR5KFwicGFydGljaXBhbnRcIikgJiYgdHJhY2tSZWZlcmVuY2UuaGFzT3duUHJvcGVydHkoXCJzb3VyY2VcIikgJiYgdHJhY2tSZWZlcmVuY2UuaGFzT3duUHJvcGVydHkoXCJ0cmFja1wiKSAmJiB0eXBlb2YgKChfYSA9IHRyYWNrUmVmZXJlbmNlLnB1YmxpY2F0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2EudHJhY2spICE9PSBcInVuZGVmaW5lZFwiO1xufVxuZnVuY3Rpb24gaXNUcmFja1JlZmVyZW5jZVB1Ymxpc2hlZCh0cmFja1JlZmVyZW5jZSkge1xuICBpZiAoIXRyYWNrUmVmZXJlbmNlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cmFja1JlZmVyZW5jZS5oYXNPd25Qcm9wZXJ0eShcInBhcnRpY2lwYW50XCIpICYmIHRyYWNrUmVmZXJlbmNlLmhhc093blByb3BlcnR5KFwic291cmNlXCIpICYmIHRyYWNrUmVmZXJlbmNlLmhhc093blByb3BlcnR5KFwicHVibGljYXRpb25cIikgJiYgdHlwZW9mIHRyYWNrUmVmZXJlbmNlLnB1YmxpY2F0aW9uICE9PSBcInVuZGVmaW5lZFwiO1xufVxuZnVuY3Rpb24gaXNUcmFja1JlZmVyZW5jZVBsYWNlaG9sZGVyKHRyYWNrUmVmZXJlbmNlKSB7XG4gIGlmICghdHJhY2tSZWZlcmVuY2UpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRyYWNrUmVmZXJlbmNlLmhhc093blByb3BlcnR5KFwicGFydGljaXBhbnRcIikgJiYgdHJhY2tSZWZlcmVuY2UuaGFzT3duUHJvcGVydHkoXCJzb3VyY2VcIikgJiYgdHlwZW9mIHRyYWNrUmVmZXJlbmNlLnB1YmxpY2F0aW9uID09PSBcInVuZGVmaW5lZFwiO1xufVxuXG4vLyBzcmMvdHJhY2stcmVmZXJlbmNlL3RyYWNrLXJlZmVyZW5jZS51dGlscy50c1xuZnVuY3Rpb24gZ2V0VHJhY2tSZWZlcmVuY2VJZCh0cmFja1JlZmVyZW5jZSkge1xuICBpZiAodHlwZW9mIHRyYWNrUmVmZXJlbmNlID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiB0cmFja1JlZmVyZW5jZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiBgJHt0cmFja1JlZmVyZW5jZX1gO1xuICB9IGVsc2UgaWYgKGlzVHJhY2tSZWZlcmVuY2VQbGFjZWhvbGRlcih0cmFja1JlZmVyZW5jZSkpIHtcbiAgICByZXR1cm4gYCR7dHJhY2tSZWZlcmVuY2UucGFydGljaXBhbnQuaWRlbnRpdHl9XyR7dHJhY2tSZWZlcmVuY2Uuc291cmNlfV9wbGFjZWhvbGRlcmA7XG4gIH0gZWxzZSBpZiAoaXNUcmFja1JlZmVyZW5jZSh0cmFja1JlZmVyZW5jZSkpIHtcbiAgICByZXR1cm4gYCR7dHJhY2tSZWZlcmVuY2UucGFydGljaXBhbnQuaWRlbnRpdHl9XyR7dHJhY2tSZWZlcmVuY2UucHVibGljYXRpb24uc291cmNlfV8ke3RyYWNrUmVmZXJlbmNlLnB1YmxpY2F0aW9uLnRyYWNrU2lkfWA7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBnZW5lcmF0ZSBhIGlkIGZvciB0aGUgZ2l2ZW4gdHJhY2sgcmVmZXJlbmNlOiAke3RyYWNrUmVmZXJlbmNlfWApO1xuICB9XG59XG5mdW5jdGlvbiBnZXRUcmFja1JlZmVyZW5jZVNvdXJjZSh0cmFja1JlZmVyZW5jZSkge1xuICBpZiAoaXNUcmFja1JlZmVyZW5jZSh0cmFja1JlZmVyZW5jZSkpIHtcbiAgICByZXR1cm4gdHJhY2tSZWZlcmVuY2UucHVibGljYXRpb24uc291cmNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB0cmFja1JlZmVyZW5jZS5zb3VyY2U7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzRXF1YWxUcmFja1JlZihhLCBiKSB7XG4gIGlmIChhID09PSB2b2lkIDAgfHwgYiA9PT0gdm9pZCAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChpc1RyYWNrUmVmZXJlbmNlKGEpICYmIGlzVHJhY2tSZWZlcmVuY2UoYikpIHtcbiAgICByZXR1cm4gYS5wdWJsaWNhdGlvbi50cmFja1NpZCA9PT0gYi5wdWJsaWNhdGlvbi50cmFja1NpZDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZ2V0VHJhY2tSZWZlcmVuY2VJZChhKSA9PT0gZ2V0VHJhY2tSZWZlcmVuY2VJZChiKTtcbiAgfVxufVxuZnVuY3Rpb24gaXNUcmFja1JlZmVyZW5jZVBpbm5lZCh0cmFja1JlZmVyZW5jZSwgcGluU3RhdGUpIHtcbiAgaWYgKHR5cGVvZiBwaW5TdGF0ZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoaXNUcmFja1JlZmVyZW5jZSh0cmFja1JlZmVyZW5jZSkpIHtcbiAgICByZXR1cm4gcGluU3RhdGUuc29tZShcbiAgICAgIChwaW5uZWRUcmFja1JlZmVyZW5jZSkgPT4gcGlubmVkVHJhY2tSZWZlcmVuY2UucGFydGljaXBhbnQuaWRlbnRpdHkgPT09IHRyYWNrUmVmZXJlbmNlLnBhcnRpY2lwYW50LmlkZW50aXR5ICYmIGlzVHJhY2tSZWZlcmVuY2UocGlubmVkVHJhY2tSZWZlcmVuY2UpICYmIHBpbm5lZFRyYWNrUmVmZXJlbmNlLnB1YmxpY2F0aW9uLnRyYWNrU2lkID09PSB0cmFja1JlZmVyZW5jZS5wdWJsaWNhdGlvbi50cmFja1NpZFxuICAgICk7XG4gIH0gZWxzZSBpZiAoaXNUcmFja1JlZmVyZW5jZVBsYWNlaG9sZGVyKHRyYWNrUmVmZXJlbmNlKSkge1xuICAgIHJldHVybiBwaW5TdGF0ZS5zb21lKFxuICAgICAgKHBpbm5lZFRyYWNrUmVmZXJlbmNlKSA9PiBwaW5uZWRUcmFja1JlZmVyZW5jZS5wYXJ0aWNpcGFudC5pZGVudGl0eSA9PT0gdHJhY2tSZWZlcmVuY2UucGFydGljaXBhbnQuaWRlbnRpdHkgJiYgaXNUcmFja1JlZmVyZW5jZVBsYWNlaG9sZGVyKHBpbm5lZFRyYWNrUmVmZXJlbmNlKSAmJiBwaW5uZWRUcmFja1JlZmVyZW5jZS5zb3VyY2UgPT09IHRyYWNrUmVmZXJlbmNlLnNvdXJjZVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBpc1BsYWNlaG9sZGVyUmVwbGFjZW1lbnQoY3VycmVudFRyYWNrUmVmLCBuZXh0VHJhY2tSZWYpIHtcbiAgcmV0dXJuIGlzVHJhY2tSZWZlcmVuY2VQbGFjZWhvbGRlcihjdXJyZW50VHJhY2tSZWYpICYmIGlzVHJhY2tSZWZlcmVuY2UobmV4dFRyYWNrUmVmKSAmJiBuZXh0VHJhY2tSZWYucGFydGljaXBhbnQuaWRlbnRpdHkgPT09IGN1cnJlbnRUcmFja1JlZi5wYXJ0aWNpcGFudC5pZGVudGl0eSAmJiBuZXh0VHJhY2tSZWYuc291cmNlID09PSBjdXJyZW50VHJhY2tSZWYuc291cmNlO1xufVxuXG4vLyBzcmMvdXRpbHMudHNcbmZ1bmN0aW9uIGlzTG9jYWwocCkge1xuICByZXR1cm4gcCBpbnN0YW5jZW9mIExvY2FsUGFydGljaXBhbnQ7XG59XG5mdW5jdGlvbiBpc1JlbW90ZShwKSB7XG4gIHJldHVybiBwIGluc3RhbmNlb2YgUmVtb3RlUGFydGljaXBhbnQ7XG59XG52YXIgYXR0YWNoSWZTdWJzY3JpYmVkID0gKHB1YmxpY2F0aW9uLCBlbGVtZW50KSA9PiB7XG4gIGlmICghcHVibGljYXRpb24pXG4gICAgcmV0dXJuO1xuICBjb25zdCB7IGlzU3Vic2NyaWJlZCwgdHJhY2sgfSA9IHB1YmxpY2F0aW9uO1xuICBpZiAoZWxlbWVudCAmJiB0cmFjaykge1xuICAgIGlmIChpc1N1YnNjcmliZWQpIHtcbiAgICAgIHRyYWNrLmF0dGFjaChlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhY2suZGV0YWNoKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxufTtcbmZ1bmN0aW9uIGlzUGFydGljaXBhbnRTb3VyY2VQaW5uZWQocGFydGljaXBhbnQsIHNvdXJjZSwgcGluU3RhdGUpIHtcbiAgaWYgKHBpblN0YXRlID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHBpblN0YXRlLnNvbWUoXG4gICAgKHsgc291cmNlOiBwaW5uZWRTb3VyY2UsIHBhcnRpY2lwYW50OiBwaW5uZWRQYXJ0aWNpcGFudCB9KSA9PiBwaW5uZWRTb3VyY2UgPT09IHNvdXJjZSAmJiBwaW5uZWRQYXJ0aWNpcGFudC5pZGVudGl0eSA9PT0gcGFydGljaXBhbnQuaWRlbnRpdHlcbiAgKTtcbn1cbmZ1bmN0aW9uIGlzUGFydGljaXBhbnRUcmFja1JlZmVyZW5jZVBpbm5lZCh0cmFja1JlZiwgcGluU3RhdGUpIHtcbiAgaWYgKHBpblN0YXRlID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHBpblN0YXRlLnNvbWUoKHBpbm5lZFRyYWNrUmVmKSA9PiBpc0VxdWFsVHJhY2tSZWYocGlubmVkVHJhY2tSZWYsIHRyYWNrUmVmKSk7XG59XG5mdW5jdGlvbiBnZXRTY3JvbGxCYXJXaWR0aCgpIHtcbiAgY29uc3QgaW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgaW5uZXIuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcbiAgaW5uZXIuc3R5bGUuaGVpZ2h0ID0gXCIyMDBweFwiO1xuICBjb25zdCBvdXRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIG91dGVyLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICBvdXRlci5zdHlsZS50b3AgPSBcIjBweFwiO1xuICBvdXRlci5zdHlsZS5sZWZ0ID0gXCIwcHhcIjtcbiAgb3V0ZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gIG91dGVyLnN0eWxlLndpZHRoID0gXCIyMDBweFwiO1xuICBvdXRlci5zdHlsZS5oZWlnaHQgPSBcIjE1MHB4XCI7XG4gIG91dGVyLnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcbiAgb3V0ZXIuYXBwZW5kQ2hpbGQoaW5uZXIpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG91dGVyKTtcbiAgY29uc3QgdzEgPSBpbm5lci5vZmZzZXRXaWR0aDtcbiAgb3V0ZXIuc3R5bGUub3ZlcmZsb3cgPSBcInNjcm9sbFwiO1xuICBsZXQgdzIgPSBpbm5lci5vZmZzZXRXaWR0aDtcbiAgaWYgKHcxID09PSB3Mikge1xuICAgIHcyID0gb3V0ZXIuY2xpZW50V2lkdGg7XG4gIH1cbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChvdXRlcik7XG4gIGNvbnN0IHNjcm9sbEJhcldpZHRoID0gdzEgLSB3MjtcbiAgcmV0dXJuIHNjcm9sbEJhcldpZHRoO1xufVxuXG4vLyBzcmMvaGVscGVyL2RldGVjdE1vYmlsZUJyb3dzZXIudHNcbmZ1bmN0aW9uIGlzV2ViKCkge1xuICByZXR1cm4gdHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiO1xufVxuZnVuY3Rpb24gaXNNb2JpbGVCcm93c2VyKCkge1xuICByZXR1cm4gaXNXZWIoKSA/IC9Nb2JpL2kudGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCkgOiBmYWxzZTtcbn1cblxuLy8gc3JjL2hlbHBlci91cmwtcmVnZXgudHNcbmZ1bmN0aW9uIGNyZWF0ZVVybFJlZ0V4cChvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7fSwgb3B0aW9ucyk7XG4gIGNvbnN0IHByb3RvY29sID0gYCg/Oig/OlthLXpdKzopPy8vKT9gO1xuICBjb25zdCBhdXRoID0gXCIoPzpcXFxcUysoPzo6XFxcXFMqKT9AKT9cIjtcbiAgY29uc3QgaXAgPSBuZXcgUmVnRXhwKFxuICAgIFwiKD86MjVbMC01XXwyWzAtNF1cXFxcZHwxXFxcXGRcXFxcZHxbMS05XVxcXFxkfFxcXFxkKSg/OlxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcZHwxXFxcXGRcXFxcZHxbMS05XVxcXFxkfFxcXFxkKSl7M31cIixcbiAgICBcImdcIlxuICApLnNvdXJjZTtcbiAgY29uc3QgaG9zdCA9IFwiKD86KD86W2EtelxcXFx1MDBhMS1cXFxcdWZmZmYwLTldWy1fXSopKlthLXpcXFxcdTAwYTEtXFxcXHVmZmZmMC05XSspXCI7XG4gIGNvbnN0IGRvbWFpbiA9IFwiKD86XFxcXC4oPzpbYS16XFxcXHUwMGExLVxcXFx1ZmZmZjAtOV0tKikqW2EtelxcXFx1MDBhMS1cXFxcdWZmZmYwLTldKykqXCI7XG4gIGNvbnN0IHRsZCA9IGAoPzpcXFxcLig/OlthLXpcXFxcdTAwYTEtXFxcXHVmZmZmXXsyLH0pKVxcXFwuP2A7XG4gIGNvbnN0IHBvcnQgPSBcIig/OjpcXFxcZHsyLDV9KT9cIjtcbiAgY29uc3QgcGF0aCA9ICcoPzpbLz8jXVteXFxcXHNcIl0qKT8nO1xuICBjb25zdCByZWdleCA9IGAoPzoke3Byb3RvY29sfXx3d3dcXFxcLikke2F1dGh9KD86bG9jYWxob3N0fCR7aXB9fCR7aG9zdH0ke2RvbWFpbn0ke3RsZH0pJHtwb3J0fSR7cGF0aH1gO1xuICByZXR1cm4gb3B0aW9ucy5leGFjdCA/IG5ldyBSZWdFeHAoYCg/Ol4ke3JlZ2V4fSQpYCwgXCJpXCIpIDogbmV3IFJlZ0V4cChyZWdleCwgXCJpZ1wiKTtcbn1cblxuLy8gc3JjL2hlbHBlci9lbWFpbFJlZ2V4LnRzXG5pbXBvcnQgY3JlYXRlRW1haWxSZWdFeHAgZnJvbSBcImVtYWlsLXJlZ2V4XCI7XG5cbi8vIHNyYy9oZWxwZXIvZmxvYXRpbmctbWVudS50c1xuaW1wb3J0IHsgY29tcHV0ZVBvc2l0aW9uLCBmbGlwLCBvZmZzZXQsIHNoaWZ0IH0gZnJvbSBcIkBmbG9hdGluZy11aS9kb21cIjtcbmZ1bmN0aW9uIGNvbXB1dGVNZW51UG9zaXRpb24oYnV0dG9uLCBtZW51KSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgeyB4LCB5IH0gPSB5aWVsZCBjb21wdXRlUG9zaXRpb24oYnV0dG9uLCBtZW51LCB7XG4gICAgICBwbGFjZW1lbnQ6IFwidG9wXCIsXG4gICAgICBtaWRkbGV3YXJlOiBbb2Zmc2V0KDYpLCBmbGlwKCksIHNoaWZ0KHsgcGFkZGluZzogNSB9KV1cbiAgICB9KTtcbiAgICByZXR1cm4geyB4LCB5IH07XG4gIH0pO1xufVxuZnVuY3Rpb24gd2FzQ2xpY2tPdXRzaWRlKGluc2lkZUVsZW1lbnQsIGV2ZW50KSB7XG4gIGNvbnN0IGlzT3V0c2lkZSA9ICFpbnNpZGVFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCk7XG4gIHJldHVybiBpc091dHNpZGU7XG59XG5cbi8vIHNyYy9oZWxwZXIvdG9rZW5pemVyLnRzXG52YXIgY3JlYXRlRGVmYXVsdEdyYW1tYXIgPSAoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgZW1haWw6IGNyZWF0ZUVtYWlsUmVnRXhwKCksXG4gICAgdXJsOiBjcmVhdGVVcmxSZWdFeHAoe30pXG4gIH07XG59O1xuZnVuY3Rpb24gdG9rZW5pemUoaW5wdXQsIGdyYW1tYXIpIHtcbiAgY29uc3QgbWF0Y2hlcyA9IE9iamVjdC5lbnRyaWVzKGdyYW1tYXIpLm1hcChcbiAgICAoW3R5cGUsIHJ4XSwgd2VpZ2h0KSA9PiBBcnJheS5mcm9tKGlucHV0Lm1hdGNoQWxsKHJ4KSkubWFwKCh7IGluZGV4LCAwOiBjb250ZW50IH0pID0+ICh7XG4gICAgICB0eXBlLFxuICAgICAgd2VpZ2h0LFxuICAgICAgY29udGVudCxcbiAgICAgIGluZGV4OiBpbmRleCAhPSBudWxsID8gaW5kZXggOiAwXG4gICAgfSkpXG4gICkuZmxhdCgpLnNvcnQoKGEsIGIpID0+IHtcbiAgICBjb25zdCBkID0gYS5pbmRleCAtIGIuaW5kZXg7XG4gICAgcmV0dXJuIGQgIT09IDAgPyBkIDogYS53ZWlnaHQgLSBiLndlaWdodDtcbiAgfSkuZmlsdGVyKCh7IGluZGV4IH0sIGksIGFycikgPT4ge1xuICAgIGlmIChpID09PSAwKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgY29uc3QgcHJldiA9IGFycltpIC0gMV07XG4gICAgcmV0dXJuIHByZXYuaW5kZXggKyBwcmV2LmNvbnRlbnQubGVuZ3RoIDw9IGluZGV4O1xuICB9KTtcbiAgY29uc3QgdG9rZW5zID0gW107XG4gIGxldCBwb3MgPSAwO1xuICBmb3IgKGNvbnN0IHsgdHlwZSwgY29udGVudCwgaW5kZXggfSBvZiBtYXRjaGVzKSB7XG4gICAgaWYgKGluZGV4ID4gcG9zKVxuICAgICAgdG9rZW5zLnB1c2goaW5wdXQuc3Vic3RyaW5nKHBvcywgaW5kZXgpKTtcbiAgICB0b2tlbnMucHVzaCh7IHR5cGUsIGNvbnRlbnQgfSk7XG4gICAgcG9zID0gaW5kZXggKyBjb250ZW50Lmxlbmd0aDtcbiAgfVxuICBpZiAoaW5wdXQubGVuZ3RoID4gcG9zKVxuICAgIHRva2Vucy5wdXNoKGlucHV0LnN1YnN0cmluZyhwb3MpKTtcbiAgcmV0dXJuIHRva2Vucztcbn1cblxuLy8gc3JjL2hlbHBlci9ldmVudEdyb3Vwcy50c1xuaW1wb3J0IHsgUGFydGljaXBhbnRFdmVudCwgUm9vbUV2ZW50IH0gZnJvbSBcImxpdmVraXQtY2xpZW50XCI7XG52YXIgYWxsUmVtb3RlUGFydGljaXBhbnRSb29tRXZlbnRzID0gW1xuICBSb29tRXZlbnQuQ29ubmVjdGlvblN0YXRlQ2hhbmdlZCxcbiAgUm9vbUV2ZW50LlJvb21NZXRhZGF0YUNoYW5nZWQsXG4gIFJvb21FdmVudC5BY3RpdmVTcGVha2Vyc0NoYW5nZWQsXG4gIFJvb21FdmVudC5Db25uZWN0aW9uUXVhbGl0eUNoYW5nZWQsXG4gIFJvb21FdmVudC5QYXJ0aWNpcGFudENvbm5lY3RlZCxcbiAgUm9vbUV2ZW50LlBhcnRpY2lwYW50RGlzY29ubmVjdGVkLFxuICBSb29tRXZlbnQuUGFydGljaXBhbnRQZXJtaXNzaW9uc0NoYW5nZWQsXG4gIFJvb21FdmVudC5QYXJ0aWNpcGFudE1ldGFkYXRhQ2hhbmdlZCxcbiAgUm9vbUV2ZW50LlRyYWNrTXV0ZWQsXG4gIFJvb21FdmVudC5UcmFja1VubXV0ZWQsXG4gIFJvb21FdmVudC5UcmFja1B1Ymxpc2hlZCxcbiAgUm9vbUV2ZW50LlRyYWNrVW5wdWJsaXNoZWQsXG4gIFJvb21FdmVudC5UcmFja1N0cmVhbVN0YXRlQ2hhbmdlZCxcbiAgUm9vbUV2ZW50LlRyYWNrU3Vic2NyaXB0aW9uRmFpbGVkLFxuICBSb29tRXZlbnQuVHJhY2tTdWJzY3JpcHRpb25QZXJtaXNzaW9uQ2hhbmdlZCxcbiAgUm9vbUV2ZW50LlRyYWNrU3Vic2NyaXB0aW9uU3RhdHVzQ2hhbmdlZFxuXTtcbnZhciBhbGxQYXJ0aWNpcGFudFJvb21FdmVudHMgPSBbXG4gIC4uLmFsbFJlbW90ZVBhcnRpY2lwYW50Um9vbUV2ZW50cyxcbiAgUm9vbUV2ZW50LkxvY2FsVHJhY2tQdWJsaXNoZWQsXG4gIFJvb21FdmVudC5Mb2NhbFRyYWNrVW5wdWJsaXNoZWRcbl07XG52YXIgYWxsUmVtb3RlUGFydGljaXBhbnRFdmVudHMgPSBbXG4gIFBhcnRpY2lwYW50RXZlbnQuQ29ubmVjdGlvblF1YWxpdHlDaGFuZ2VkLFxuICBQYXJ0aWNpcGFudEV2ZW50LklzU3BlYWtpbmdDaGFuZ2VkLFxuICBQYXJ0aWNpcGFudEV2ZW50LlBhcnRpY2lwYW50TWV0YWRhdGFDaGFuZ2VkLFxuICBQYXJ0aWNpcGFudEV2ZW50LlBhcnRpY2lwYW50UGVybWlzc2lvbnNDaGFuZ2VkLFxuICBQYXJ0aWNpcGFudEV2ZW50LlRyYWNrTXV0ZWQsXG4gIFBhcnRpY2lwYW50RXZlbnQuVHJhY2tVbm11dGVkLFxuICBQYXJ0aWNpcGFudEV2ZW50LlRyYWNrUHVibGlzaGVkLFxuICBQYXJ0aWNpcGFudEV2ZW50LlRyYWNrVW5wdWJsaXNoZWQsXG4gIFBhcnRpY2lwYW50RXZlbnQuVHJhY2tTdHJlYW1TdGF0ZUNoYW5nZWQsXG4gIFBhcnRpY2lwYW50RXZlbnQuVHJhY2tTdWJzY3JpcHRpb25GYWlsZWQsXG4gIFBhcnRpY2lwYW50RXZlbnQuVHJhY2tTdWJzY3JpcHRpb25QZXJtaXNzaW9uQ2hhbmdlZCxcbiAgUGFydGljaXBhbnRFdmVudC5UcmFja1N1YnNjcmlwdGlvblN0YXR1c0NoYW5nZWRcbl07XG52YXIgYWxsUGFydGljaXBhbnRFdmVudHMgPSBbXG4gIC4uLmFsbFJlbW90ZVBhcnRpY2lwYW50RXZlbnRzLFxuICBQYXJ0aWNpcGFudEV2ZW50LkxvY2FsVHJhY2tQdWJsaXNoZWQsXG4gIFBhcnRpY2lwYW50RXZlbnQuTG9jYWxUcmFja1VucHVibGlzaGVkXG5dO1xuXG4vLyBzcmMvbG9nZ2VyLnRzXG5pbXBvcnQgeyBzZXRMb2dMZXZlbCBhcyBzZXRDbGllbnRTZGtMb2dMZXZlbCB9IGZyb20gXCJsaXZla2l0LWNsaWVudFwiO1xuaW1wb3J0IGxvZ2xldmVsIGZyb20gXCJsb2dsZXZlbFwiO1xudmFyIGxvZyA9IGxvZ2xldmVsLmdldExvZ2dlcihcImxrLWNvbXBvbmVudHMtanNcIik7XG5sb2cuc2V0RGVmYXVsdExldmVsKFwiV0FSTlwiKTtcbmZ1bmN0aW9uIHNldExvZ0xldmVsKGxldmVsLCBvcHRpb25zID0ge30pIHtcbiAgdmFyIF9hO1xuICBsb2cuc2V0TGV2ZWwobGV2ZWwpO1xuICBzZXRDbGllbnRTZGtMb2dMZXZlbCgoX2EgPSBvcHRpb25zLmxpdmVLaXRDbGllbnRMb2dMZXZlbCkgIT0gbnVsbCA/IF9hIDogbGV2ZWwpO1xufVxuXG4vLyBzcmMvaGVscGVyL2dyaWQtbGF5b3V0cy50c1xudmFyIEdSSURfTEFZT1VUUyA9IFtcbiAge1xuICAgIGNvbHVtbnM6IDEsXG4gICAgcm93czogMSxcbiAgICBuYW1lOiBcIjF4MVwiLFxuICAgIG1pblRpbGVzOiAxLFxuICAgIG1heFRpbGVzOiAxLFxuICAgIG1pbldpZHRoOiAwLFxuICAgIG1pbkhlaWdodDogMFxuICB9LFxuICB7XG4gICAgY29sdW1uczogMSxcbiAgICByb3dzOiAyLFxuICAgIG5hbWU6IFwiMXgyXCIsXG4gICAgbWluVGlsZXM6IDIsXG4gICAgbWF4VGlsZXM6IDIsXG4gICAgbWluV2lkdGg6IDAsXG4gICAgbWluSGVpZ2h0OiAwXG4gIH0sXG4gIHtcbiAgICBjb2x1bW5zOiAyLFxuICAgIHJvd3M6IDEsXG4gICAgbmFtZTogXCIyeDFcIixcbiAgICBtaW5UaWxlczogMixcbiAgICBtYXhUaWxlczogMixcbiAgICBtaW5XaWR0aDogOTAwLFxuICAgIG1pbkhlaWdodDogMFxuICB9LFxuICB7XG4gICAgY29sdW1uczogMixcbiAgICByb3dzOiAyLFxuICAgIG5hbWU6IFwiMngyXCIsXG4gICAgbWluVGlsZXM6IDMsXG4gICAgbWF4VGlsZXM6IDQsXG4gICAgbWluV2lkdGg6IDU2MCxcbiAgICBtaW5IZWlnaHQ6IDBcbiAgfSxcbiAge1xuICAgIGNvbHVtbnM6IDMsXG4gICAgcm93czogMyxcbiAgICBuYW1lOiBcIjN4M1wiLFxuICAgIG1pblRpbGVzOiA1LFxuICAgIG1heFRpbGVzOiA5LFxuICAgIG1pbldpZHRoOiA3MDAsXG4gICAgbWluSGVpZ2h0OiAwXG4gIH0sXG4gIHtcbiAgICBjb2x1bW5zOiA0LFxuICAgIHJvd3M6IDQsXG4gICAgbmFtZTogXCI0eDRcIixcbiAgICBtaW5UaWxlczogMTAsXG4gICAgbWF4VGlsZXM6IDE2LFxuICAgIG1pbldpZHRoOiA5NjAsXG4gICAgbWluSGVpZ2h0OiAwXG4gIH0sXG4gIHtcbiAgICBjb2x1bW5zOiA1LFxuICAgIHJvd3M6IDUsXG4gICAgbmFtZTogXCI1eDVcIixcbiAgICBtaW5UaWxlczogMTcsXG4gICAgbWF4VGlsZXM6IDI1LFxuICAgIG1pbldpZHRoOiAxMTAwLFxuICAgIG1pbkhlaWdodDogMFxuICB9XG5dO1xuZnVuY3Rpb24gc2VsZWN0R3JpZExheW91dChsYXlvdXRzLCBwYXJ0aWNpcGFudENvdW50LCB3aWR0aCwgaGVpZ2h0KSB7XG4gIGxldCBjdXJyZW50TGF5b3V0SW5kZXggPSAwO1xuICBsZXQgbGF5b3V0ID0gbGF5b3V0cy5maW5kKChsYXlvdXRfLCBpbmRleCwgYWxsTGF5b3V0cykgPT4ge1xuICAgIGN1cnJlbnRMYXlvdXRJbmRleCA9IGluZGV4O1xuICAgIGNvbnN0IGlzQmlnZ2VyTGF5b3V0QXZhaWxhYmxlID0gYWxsTGF5b3V0cy5maW5kSW5kZXgoKGwsIGkpID0+IHtcbiAgICAgIGNvbnN0IGxheW91dElzQmlnZ2VyVGhhbkN1cnJlbnQgPSBpID4gaW5kZXg7XG4gICAgICBjb25zdCBsYXlvdXRGaXRzU2FtZUFtb3VudE9mUGFydGljaXBhbnRzID0gbC5tYXhUaWxlcyA9PT0gbGF5b3V0Xy5tYXhUaWxlcztcbiAgICAgIHJldHVybiBsYXlvdXRJc0JpZ2dlclRoYW5DdXJyZW50ICYmIGxheW91dEZpdHNTYW1lQW1vdW50T2ZQYXJ0aWNpcGFudHM7XG4gICAgfSkgIT09IC0xO1xuICAgIHJldHVybiBsYXlvdXRfLm1heFRpbGVzID49IHBhcnRpY2lwYW50Q291bnQgJiYgIWlzQmlnZ2VyTGF5b3V0QXZhaWxhYmxlO1xuICB9KTtcbiAgaWYgKGxheW91dCA9PT0gdm9pZCAwKSB7XG4gICAgbGF5b3V0ID0gbGF5b3V0c1tsYXlvdXRzLmxlbmd0aCAtIDFdO1xuICAgIGlmIChsYXlvdXQpIHtcbiAgICAgIGxvZy53YXJuKFxuICAgICAgICBgTm8gbGF5b3V0IGZvdW5kIGZvcjogcGFydGljaXBhbnRDb3VudDogJHtwYXJ0aWNpcGFudENvdW50fSwgd2lkdGgvaGVpZ2h0OiAke3dpZHRofS8ke2hlaWdodH0gZmFsbGJhY2sgdG8gYmlnZ2VzdCBhdmFpbGFibGUgbGF5b3V0ICgke2xheW91dC5uYW1lfSkuYFxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBsYXlvdXQgb3IgZmFsbGJhY2sgbGF5b3V0IGZvdW5kLmApO1xuICAgIH1cbiAgfVxuICBpZiAod2lkdGggPCBsYXlvdXQubWluV2lkdGggfHwgaGVpZ2h0IDwgbGF5b3V0Lm1pbkhlaWdodCkge1xuICAgIGlmIChjdXJyZW50TGF5b3V0SW5kZXggPiAwKSB7XG4gICAgICBjb25zdCBzbWFsbGVyTGF5b3V0ID0gbGF5b3V0c1tjdXJyZW50TGF5b3V0SW5kZXggLSAxXTtcbiAgICAgIGxheW91dCA9IHNlbGVjdEdyaWRMYXlvdXQoXG4gICAgICAgIGxheW91dHMuc2xpY2UoMCwgY3VycmVudExheW91dEluZGV4KSxcbiAgICAgICAgc21hbGxlckxheW91dC5tYXhUaWxlcyxcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIGhlaWdodFxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGxheW91dDtcbn1cblxuLy8gc3JjL2hlbHBlci9zZXQtaGVscGVyLnRzXG5mdW5jdGlvbiBzZXREaWZmZXJlbmNlKHNldEEsIHNldEIpIHtcbiAgY29uc3QgX2RpZmZlcmVuY2UgPSBuZXcgU2V0KHNldEEpO1xuICBmb3IgKGNvbnN0IGVsZW0gb2Ygc2V0Qikge1xuICAgIF9kaWZmZXJlbmNlLmRlbGV0ZShlbGVtKTtcbiAgfVxuICByZXR1cm4gX2RpZmZlcmVuY2U7XG59XG5cbi8vIHNyYy9oZWxwZXIvZmVhdHVyZURldGVjdGlvbi50c1xuZnVuY3Rpb24gc3VwcG9ydHNTY3JlZW5TaGFyaW5nKCkge1xuICByZXR1cm4gdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzICYmICEhbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXREaXNwbGF5TWVkaWE7XG59XG5cbi8vIHNyYy90eXBlcy50c1xudmFyIFBJTl9ERUZBVUxUX1NUQVRFID0gW107XG52YXIgV0lER0VUX0RFRkFVTFRfU1RBVEUgPSB7IHNob3dDaGF0OiBmYWxzZSwgdW5yZWFkTWVzc2FnZXM6IDAgfTtcbmZ1bmN0aW9uIGlzU291cmNlV2l0T3B0aW9ucyhzb3VyY2UpIHtcbiAgcmV0dXJuIHR5cGVvZiBzb3VyY2UgPT09IFwib2JqZWN0XCI7XG59XG5mdW5jdGlvbiBpc1NvdXJjZXNXaXRoT3B0aW9ucyhzb3VyY2VzKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHNvdXJjZXMpICYmIHNvdXJjZXMuZmlsdGVyKGlzU291cmNlV2l0T3B0aW9ucykubGVuZ3RoID4gMDtcbn1cblxuLy8gc3JjL3NvcnRpbmcvc29ydC10cmFjay1idW5kbGVzLnRzXG5pbXBvcnQgeyBUcmFjayBhcyBUcmFjazIgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcblxuLy8gc3JjL3NvcnRpbmcvYmFzZS1zb3J0LWZ1bmN0aW9ucy50c1xuaW1wb3J0IHsgVHJhY2sgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmZ1bmN0aW9uIHNvcnRQYXJ0aWNpcGFudHNCeUF1ZGlvTGV2ZWwoYSwgYikge1xuICByZXR1cm4gYi5hdWRpb0xldmVsIC0gYS5hdWRpb0xldmVsO1xufVxuZnVuY3Rpb24gc29ydFBhcnRpY2lwYW50c0J5SXNTcGVha2luZyhhLCBiKSB7XG4gIGlmIChhLmlzU3BlYWtpbmcgPT09IGIuaXNTcGVha2luZykge1xuICAgIHJldHVybiAwO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBhLmlzU3BlYWtpbmcgPyAtMSA6IDE7XG4gIH1cbn1cbmZ1bmN0aW9uIHNvcnRQYXJ0aWNpcGFudHNCeUxhc3RTcG9rZW5BVChhLCBiKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgaWYgKGEubGFzdFNwb2tlQXQgIT09IHZvaWQgMCB8fCBiLmxhc3RTcG9rZUF0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gKChfYiA9IChfYSA9IGIubGFzdFNwb2tlQXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5nZXRUaW1lKCkpICE9IG51bGwgPyBfYiA6IDApIC0gKChfZCA9IChfYyA9IGEubGFzdFNwb2tlQXQpID09IG51bGwgPyB2b2lkIDAgOiBfYy5nZXRUaW1lKCkpICE9IG51bGwgPyBfZCA6IDApO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAwO1xuICB9XG59XG5mdW5jdGlvbiBzb3J0UGFydGljaXBhbnRzQnlKb2luZWRBdChhLCBiKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgcmV0dXJuICgoX2IgPSAoX2EgPSBhLmpvaW5lZEF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuZ2V0VGltZSgpKSAhPSBudWxsID8gX2IgOiAwKSAtICgoX2QgPSAoX2MgPSBiLmpvaW5lZEF0KSA9PSBudWxsID8gdm9pZCAwIDogX2MuZ2V0VGltZSgpKSAhPSBudWxsID8gX2QgOiAwKTtcbn1cbmZ1bmN0aW9uIHNvcnRUcmFja1JlZmVyZW5jZXNCeVR5cGUoYSwgYikge1xuICBpZiAoaXNUcmFja1JlZmVyZW5jZShhKSkge1xuICAgIGlmIChpc1RyYWNrUmVmZXJlbmNlKGIpKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc1RyYWNrUmVmZXJlbmNlKGIpKSB7XG4gICAgcmV0dXJuIDE7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbn1cbmZ1bmN0aW9uIHNvcnRUcmFja1JlZnNCeUlzQ2FtZXJhRW5hYmxlZChhLCBiKSB7XG4gIGNvbnN0IGFWaWRlbyA9IGEucGFydGljaXBhbnQuaXNDYW1lcmFFbmFibGVkO1xuICBjb25zdCBiVmlkZW8gPSBiLnBhcnRpY2lwYW50LmlzQ2FtZXJhRW5hYmxlZDtcbiAgaWYgKGFWaWRlbyAhPT0gYlZpZGVvKSB7XG4gICAgaWYgKGFWaWRlbykge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbn1cblxuLy8gc3JjL3NvcnRpbmcvc29ydC10cmFjay1idW5kbGVzLnRzXG5mdW5jdGlvbiBzb3J0VHJhY2tSZWZlcmVuY2VzKHRyYWNrcykge1xuICBjb25zdCBsb2NhbFRyYWNrcyA9IFtdO1xuICBjb25zdCBzY3JlZW5TaGFyZVRyYWNrcyA9IFtdO1xuICBjb25zdCBjYW1lcmFUcmFja3MgPSBbXTtcbiAgY29uc3QgdW5kZWZpbmVkVHJhY2tzID0gW107XG4gIHRyYWNrcy5mb3JFYWNoKCh0cmFja1JlZikgPT4ge1xuICAgIGlmICh0cmFja1JlZi5wYXJ0aWNpcGFudC5pc0xvY2FsICYmIHRyYWNrUmVmLnNvdXJjZSA9PT0gVHJhY2syLlNvdXJjZS5DYW1lcmEpIHtcbiAgICAgIGxvY2FsVHJhY2tzLnB1c2godHJhY2tSZWYpO1xuICAgIH0gZWxzZSBpZiAodHJhY2tSZWYuc291cmNlID09PSBUcmFjazIuU291cmNlLlNjcmVlblNoYXJlKSB7XG4gICAgICBzY3JlZW5TaGFyZVRyYWNrcy5wdXNoKHRyYWNrUmVmKTtcbiAgICB9IGVsc2UgaWYgKHRyYWNrUmVmLnNvdXJjZSA9PT0gVHJhY2syLlNvdXJjZS5DYW1lcmEpIHtcbiAgICAgIGNhbWVyYVRyYWNrcy5wdXNoKHRyYWNrUmVmKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdW5kZWZpbmVkVHJhY2tzLnB1c2godHJhY2tSZWYpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IHNvcnRlZFNjcmVlblNoYXJlVHJhY2tzID0gc29ydFNjcmVlblNoYXJlVHJhY2tzKHNjcmVlblNoYXJlVHJhY2tzKTtcbiAgY29uc3Qgc29ydGVkQ2FtZXJhVHJhY2tzID0gc29ydENhbWVyYVRyYWNrcyhjYW1lcmFUcmFja3MpO1xuICByZXR1cm4gWy4uLmxvY2FsVHJhY2tzLCAuLi5zb3J0ZWRTY3JlZW5TaGFyZVRyYWNrcywgLi4uc29ydGVkQ2FtZXJhVHJhY2tzLCAuLi51bmRlZmluZWRUcmFja3NdO1xufVxuZnVuY3Rpb24gc29ydFNjcmVlblNoYXJlVHJhY2tzKHNjcmVlblNoYXJlVHJhY2tzKSB7XG4gIGNvbnN0IGxvY2FsU2NyZWVuU2hhcmVzID0gW107XG4gIGNvbnN0IHJlbW90ZVNjcmVlblNoYXJlcyA9IFtdO1xuICBzY3JlZW5TaGFyZVRyYWNrcy5mb3JFYWNoKCh0cmFja1JlZikgPT4ge1xuICAgIGlmICh0cmFja1JlZi5wYXJ0aWNpcGFudC5pc0xvY2FsKSB7XG4gICAgICBsb2NhbFNjcmVlblNoYXJlcy5wdXNoKHRyYWNrUmVmKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3RlU2NyZWVuU2hhcmVzLnB1c2godHJhY2tSZWYpO1xuICAgIH1cbiAgfSk7XG4gIGxvY2FsU2NyZWVuU2hhcmVzLnNvcnQoKGEsIGIpID0+IHNvcnRQYXJ0aWNpcGFudHNCeUpvaW5lZEF0KGEucGFydGljaXBhbnQsIGIucGFydGljaXBhbnQpKTtcbiAgcmVtb3RlU2NyZWVuU2hhcmVzLnNvcnQoKGEsIGIpID0+IHNvcnRQYXJ0aWNpcGFudHNCeUpvaW5lZEF0KGEucGFydGljaXBhbnQsIGIucGFydGljaXBhbnQpKTtcbiAgY29uc3Qgc29ydGVkU2NyZWVuU2hhcmVUcmFja1JlZnMgPSBbLi4ucmVtb3RlU2NyZWVuU2hhcmVzLCAuLi5sb2NhbFNjcmVlblNoYXJlc107XG4gIHJldHVybiBzb3J0ZWRTY3JlZW5TaGFyZVRyYWNrUmVmcztcbn1cbmZ1bmN0aW9uIHNvcnRDYW1lcmFUcmFja3MoY2FtZXJhVHJhY2tSZWZlcmVuY2VzKSB7XG4gIGNvbnN0IGxvY2FsQ2FtZXJhVHJhY2tzID0gW107XG4gIGNvbnN0IHJlbW90ZUNhbWVyYVRyYWNrcyA9IFtdO1xuICBjYW1lcmFUcmFja1JlZmVyZW5jZXMuZm9yRWFjaCgodHJhY2tSZWYpID0+IHtcbiAgICBpZiAodHJhY2tSZWYucGFydGljaXBhbnQuaXNMb2NhbCkge1xuICAgICAgbG9jYWxDYW1lcmFUcmFja3MucHVzaCh0cmFja1JlZik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW90ZUNhbWVyYVRyYWNrcy5wdXNoKHRyYWNrUmVmKTtcbiAgICB9XG4gIH0pO1xuICByZW1vdGVDYW1lcmFUcmFja3Muc29ydCgoYSwgYikgPT4ge1xuICAgIGlmIChhLnBhcnRpY2lwYW50LmlzU3BlYWtpbmcgJiYgYi5wYXJ0aWNpcGFudC5pc1NwZWFraW5nKSB7XG4gICAgICByZXR1cm4gc29ydFBhcnRpY2lwYW50c0J5QXVkaW9MZXZlbChhLnBhcnRpY2lwYW50LCBiLnBhcnRpY2lwYW50KTtcbiAgICB9XG4gICAgaWYgKGEucGFydGljaXBhbnQuaXNTcGVha2luZyAhPT0gYi5wYXJ0aWNpcGFudC5pc1NwZWFraW5nKSB7XG4gICAgICByZXR1cm4gc29ydFBhcnRpY2lwYW50c0J5SXNTcGVha2luZyhhLnBhcnRpY2lwYW50LCBiLnBhcnRpY2lwYW50KTtcbiAgICB9XG4gICAgaWYgKGEucGFydGljaXBhbnQubGFzdFNwb2tlQXQgIT09IGIucGFydGljaXBhbnQubGFzdFNwb2tlQXQpIHtcbiAgICAgIHJldHVybiBzb3J0UGFydGljaXBhbnRzQnlMYXN0U3Bva2VuQVQoYS5wYXJ0aWNpcGFudCwgYi5wYXJ0aWNpcGFudCk7XG4gICAgfVxuICAgIGlmIChpc1RyYWNrUmVmZXJlbmNlKGEpICE9PSBpc1RyYWNrUmVmZXJlbmNlKGIpKSB7XG4gICAgICByZXR1cm4gc29ydFRyYWNrUmVmZXJlbmNlc0J5VHlwZShhLCBiKTtcbiAgICB9XG4gICAgaWYgKGEucGFydGljaXBhbnQuaXNDYW1lcmFFbmFibGVkICE9PSBiLnBhcnRpY2lwYW50LmlzQ2FtZXJhRW5hYmxlZCkge1xuICAgICAgcmV0dXJuIHNvcnRUcmFja1JlZnNCeUlzQ2FtZXJhRW5hYmxlZChhLCBiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvcnRQYXJ0aWNpcGFudHNCeUpvaW5lZEF0KGEucGFydGljaXBhbnQsIGIucGFydGljaXBhbnQpO1xuICB9KTtcbiAgcmV0dXJuIFsuLi5sb2NhbENhbWVyYVRyYWNrcywgLi4ucmVtb3RlQ2FtZXJhVHJhY2tzXTtcbn1cblxuLy8gc3JjL3NvcnRpbmcvc29ydC1wYXJ0aWNpcGFudHMudHNcbmltcG9ydCB7IExvY2FsUGFydGljaXBhbnQgYXMgTG9jYWxQYXJ0aWNpcGFudDIgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmZ1bmN0aW9uIHNvcnRQYXJ0aWNpcGFudHMocGFydGljaXBhbnRzKSB7XG4gIGNvbnN0IHNvcnRlZFBhcnRpY2lwYW50cyA9IFsuLi5wYXJ0aWNpcGFudHNdO1xuICBzb3J0ZWRQYXJ0aWNpcGFudHMuc29ydCgoYSwgYikgPT4ge1xuICAgIGlmIChhLmlzU3BlYWtpbmcgJiYgYi5pc1NwZWFraW5nKSB7XG4gICAgICByZXR1cm4gc29ydFBhcnRpY2lwYW50c0J5QXVkaW9MZXZlbChhLCBiKTtcbiAgICB9XG4gICAgaWYgKGEuaXNTcGVha2luZyAhPT0gYi5pc1NwZWFraW5nKSB7XG4gICAgICByZXR1cm4gc29ydFBhcnRpY2lwYW50c0J5SXNTcGVha2luZyhhLCBiKTtcbiAgICB9XG4gICAgaWYgKGEubGFzdFNwb2tlQXQgIT09IGIubGFzdFNwb2tlQXQpIHtcbiAgICAgIHJldHVybiBzb3J0UGFydGljaXBhbnRzQnlMYXN0U3Bva2VuQVQoYSwgYik7XG4gICAgfVxuICAgIGNvbnN0IGFWaWRlbyA9IGEudmlkZW9UcmFja3Muc2l6ZSA+IDA7XG4gICAgY29uc3QgYlZpZGVvID0gYi52aWRlb1RyYWNrcy5zaXplID4gMDtcbiAgICBpZiAoYVZpZGVvICE9PSBiVmlkZW8pIHtcbiAgICAgIGlmIChhVmlkZW8pIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzb3J0UGFydGljaXBhbnRzQnlKb2luZWRBdChhLCBiKTtcbiAgfSk7XG4gIGNvbnN0IGxvY2FsUGFydGljaXBhbnQgPSBzb3J0ZWRQYXJ0aWNpcGFudHMuZmluZCgocCkgPT4gcCBpbnN0YW5jZW9mIExvY2FsUGFydGljaXBhbnQyKTtcbiAgaWYgKGxvY2FsUGFydGljaXBhbnQpIHtcbiAgICBjb25zdCBsb2NhbElkeCA9IHNvcnRlZFBhcnRpY2lwYW50cy5pbmRleE9mKGxvY2FsUGFydGljaXBhbnQpO1xuICAgIGlmIChsb2NhbElkeCA+PSAwKSB7XG4gICAgICBzb3J0ZWRQYXJ0aWNpcGFudHMuc3BsaWNlKGxvY2FsSWR4LCAxKTtcbiAgICAgIGlmIChzb3J0ZWRQYXJ0aWNpcGFudHMubGVuZ3RoID4gMCkge1xuICAgICAgICBzb3J0ZWRQYXJ0aWNpcGFudHMuc3BsaWNlKDAsIDAsIGxvY2FsUGFydGljaXBhbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc29ydGVkUGFydGljaXBhbnRzLnB1c2gobG9jYWxQYXJ0aWNpcGFudCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBzb3J0ZWRQYXJ0aWNpcGFudHM7XG59XG5cbi8vIHNyYy9oZWxwZXIvYXJyYXktaGVscGVyLnRzXG5mdW5jdGlvbiBjaHVuayhpbnB1dCwgc2l6ZSkge1xuICByZXR1cm4gaW5wdXQucmVkdWNlKFxuICAgIChhcnIsIGl0ZW0sIGlkeCkgPT4ge1xuICAgICAgcmV0dXJuIGlkeCAlIHNpemUgPT09IDAgPyBbLi4uYXJyLCBbaXRlbV1dIDogWy4uLmFyci5zbGljZSgwLCAtMSksIFsuLi5hcnIuc2xpY2UoLTEpWzBdLCBpdGVtXV07XG4gICAgfSxcbiAgICBbXVxuICApO1xufVxuZnVuY3Rpb24gemlwKGExLCBhMikge1xuICBjb25zdCByZXN1bHRMZW5ndGggPSBNYXRoLm1heChhMS5sZW5ndGgsIGEyLmxlbmd0aCk7XG4gIHJldHVybiBuZXcgQXJyYXkocmVzdWx0TGVuZ3RoKS5maWxsKFtdKS5tYXAoKF92YWwsIGlkeCkgPT4gW2ExW2lkeF0sIGEyW2lkeF1dKTtcbn1cbmZ1bmN0aW9uIGRpZmZlcmVuY2VCeShhMSwgYTIsIGJ5KSB7XG4gIHJldHVybiBhMS5maWx0ZXIoKGMpID0+ICFhMi5tYXAoKHYpID0+IGJ5KHYpKS5pbmNsdWRlcyhieShjKSkpO1xufVxuXG4vLyBzcmMvdHJhY2stcmVmZXJlbmNlL3Rlc3QtdXRpbHMudHNcbmltcG9ydCB7IFBhcnRpY2lwYW50LCBUcmFjayBhcyBUcmFjazMsIFRyYWNrUHVibGljYXRpb24gfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmZ1bmN0aW9uIGZsYXRUcmFja1JlZmVyZW5jZUFycmF5KGxpc3QpIHtcbiAgcmV0dXJuIGxpc3QubWFwKChpdGVtKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBpdGVtID09PSBcIm51bWJlclwiKSB7XG4gICAgICByZXR1cm4gYCR7aXRlbX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0VHJhY2tSZWZlcmVuY2VJZChpdGVtKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vLyBzcmMvc29ydGluZy90aWxlLWFycmF5LXVwZGF0ZS50c1xuZnVuY3Rpb24gdmlzdWFsUGFnZUNoYW5nZShzdGF0ZSwgbmV4dCkge1xuICByZXR1cm4ge1xuICAgIGRyb3BwZWQ6IGRpZmZlcmVuY2VCeShzdGF0ZSwgbmV4dCwgZ2V0VHJhY2tSZWZlcmVuY2VJZCksXG4gICAgYWRkZWQ6IGRpZmZlcmVuY2VCeShuZXh0LCBzdGF0ZSwgZ2V0VHJhY2tSZWZlcmVuY2VJZClcbiAgfTtcbn1cbmZ1bmN0aW9uIGxpc3ROZWVkc1VwZGF0aW5nKGNoYW5nZXMpIHtcbiAgcmV0dXJuIGNoYW5nZXMuYWRkZWQubGVuZ3RoICE9PSAwIHx8IGNoYW5nZXMuZHJvcHBlZC5sZW5ndGggIT09IDA7XG59XG5mdW5jdGlvbiBmaW5kSW5kZXgodHJhY2tSZWZlcmVuY2UsIHRyYWNrUmVmZXJlbmNlcykge1xuICBjb25zdCBpbmRleFRvUmVwbGFjZSA9IHRyYWNrUmVmZXJlbmNlcy5maW5kSW5kZXgoXG4gICAgKHRyYWNrUmVmZXJlbmNlXykgPT4gZ2V0VHJhY2tSZWZlcmVuY2VJZCh0cmFja1JlZmVyZW5jZV8pID09PSBnZXRUcmFja1JlZmVyZW5jZUlkKHRyYWNrUmVmZXJlbmNlKVxuICApO1xuICBpZiAoaW5kZXhUb1JlcGxhY2UgPT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEVsZW1lbnQgbm90IHBhcnQgb2YgdGhlIGFycmF5OiAke2dldFRyYWNrUmVmZXJlbmNlSWQoXG4gICAgICAgIHRyYWNrUmVmZXJlbmNlXG4gICAgICApfSBub3QgaW4gJHtmbGF0VHJhY2tSZWZlcmVuY2VBcnJheSh0cmFja1JlZmVyZW5jZXMpfWBcbiAgICApO1xuICB9XG4gIHJldHVybiBpbmRleFRvUmVwbGFjZTtcbn1cbmZ1bmN0aW9uIHN3YXBJdGVtcyhtb3ZlRm9yd2FyZCwgbW92ZUJhY2ssIHRyYWNrUmVmZXJlbmNlcykge1xuICBjb25zdCBpbmRleFRvUmVwbGFjZSA9IGZpbmRJbmRleChtb3ZlRm9yd2FyZCwgdHJhY2tSZWZlcmVuY2VzKTtcbiAgY29uc3QgaW5kZXhSZXBsYWNlV2l0aCA9IGZpbmRJbmRleChtb3ZlQmFjaywgdHJhY2tSZWZlcmVuY2VzKTtcbiAgdHJhY2tSZWZlcmVuY2VzLnNwbGljZShpbmRleFRvUmVwbGFjZSwgMSwgbW92ZUJhY2spO1xuICB0cmFja1JlZmVyZW5jZXMuc3BsaWNlKGluZGV4UmVwbGFjZVdpdGgsIDEsIG1vdmVGb3J3YXJkKTtcbiAgcmV0dXJuIHRyYWNrUmVmZXJlbmNlcztcbn1cbmZ1bmN0aW9uIGRyb3BJdGVtKGl0ZW1Ub0Ryb3AsIGxpc3QpIHtcbiAgY29uc3QgaW5kZXhPZkVsZW1lbnRUb0Ryb3AgPSBmaW5kSW5kZXgoaXRlbVRvRHJvcCwgbGlzdCk7XG4gIGxpc3Quc3BsaWNlKGluZGV4T2ZFbGVtZW50VG9Ecm9wLCAxKTtcbiAgcmV0dXJuIGxpc3Q7XG59XG5mdW5jdGlvbiBhZGRJdGVtKGl0ZW1Ub0FkZCwgbGlzdCkge1xuICByZXR1cm4gWy4uLmxpc3QsIGl0ZW1Ub0FkZF07XG59XG5mdW5jdGlvbiBkaXZpZGVJbnRvUGFnZXMobGlzdCwgbWF4RWxlbWVudHNPblBhZ2UpIHtcbiAgY29uc3QgcGFnZXMgPSBjaHVuayhsaXN0LCBtYXhFbGVtZW50c09uUGFnZSk7XG4gIHJldHVybiBwYWdlcztcbn1cbmZ1bmN0aW9uIHVwZGF0ZVBhZ2VzKGN1cnJlbnRMaXN0LCBuZXh0TGlzdCwgbWF4SXRlbXNPblBhZ2UpIHtcbiAgbGV0IHVwZGF0ZWRMaXN0ID0gcmVmcmVzaExpc3QoY3VycmVudExpc3QsIG5leHRMaXN0KTtcbiAgaWYgKHVwZGF0ZWRMaXN0Lmxlbmd0aCA8IG5leHRMaXN0Lmxlbmd0aCkge1xuICAgIGNvbnN0IGFkZGVkSXRlbXMgPSBkaWZmZXJlbmNlQnkobmV4dExpc3QsIHVwZGF0ZWRMaXN0LCBnZXRUcmFja1JlZmVyZW5jZUlkKTtcbiAgICB1cGRhdGVkTGlzdCA9IFsuLi51cGRhdGVkTGlzdCwgLi4uYWRkZWRJdGVtc107XG4gIH1cbiAgY29uc3QgY3VycmVudFBhZ2VzID0gZGl2aWRlSW50b1BhZ2VzKHVwZGF0ZWRMaXN0LCBtYXhJdGVtc09uUGFnZSk7XG4gIGNvbnN0IG5leHRQYWdlcyA9IGRpdmlkZUludG9QYWdlcyhuZXh0TGlzdCwgbWF4SXRlbXNPblBhZ2UpO1xuICB6aXAoY3VycmVudFBhZ2VzLCBuZXh0UGFnZXMpLmZvckVhY2goKFtjdXJyZW50UGFnZSwgbmV4dFBhZ2VdLCBwYWdlSW5kZXgpID0+IHtcbiAgICBpZiAoY3VycmVudFBhZ2UgJiYgbmV4dFBhZ2UpIHtcbiAgICAgIGNvbnN0IHVwZGF0ZWRQYWdlID0gZGl2aWRlSW50b1BhZ2VzKHVwZGF0ZWRMaXN0LCBtYXhJdGVtc09uUGFnZSlbcGFnZUluZGV4XTtcbiAgICAgIGNvbnN0IGNoYW5nZXMgPSB2aXN1YWxQYWdlQ2hhbmdlKHVwZGF0ZWRQYWdlLCBuZXh0UGFnZSk7XG4gICAgICBpZiAobGlzdE5lZWRzVXBkYXRpbmcoY2hhbmdlcykpIHtcbiAgICAgICAgbG9nLmRlYnVnKFxuICAgICAgICAgIGBEZXRlY3RlZCB2aXN1YWwgY2hhbmdlcyBvbiBwYWdlOiAke3BhZ2VJbmRleH0sIGN1cnJlbnQ6ICR7ZmxhdFRyYWNrUmVmZXJlbmNlQXJyYXkoXG4gICAgICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICAgICl9LCBuZXh0OiAke2ZsYXRUcmFja1JlZmVyZW5jZUFycmF5KG5leHRQYWdlKX1gLFxuICAgICAgICAgIHsgY2hhbmdlcyB9XG4gICAgICAgICk7XG4gICAgICAgIGlmIChjaGFuZ2VzLmFkZGVkLmxlbmd0aCA9PT0gY2hhbmdlcy5kcm9wcGVkLmxlbmd0aCkge1xuICAgICAgICAgIHppcChjaGFuZ2VzLmFkZGVkLCBjaGFuZ2VzLmRyb3BwZWQpLmZvckVhY2goKFthZGRlZCwgZHJvcHBlZF0pID0+IHtcbiAgICAgICAgICAgIGlmIChhZGRlZCAmJiBkcm9wcGVkKSB7XG4gICAgICAgICAgICAgIHVwZGF0ZWRMaXN0ID0gc3dhcEl0ZW1zKGFkZGVkLCBkcm9wcGVkLCB1cGRhdGVkTGlzdCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgYEZvciBhIHN3YXAgYWN0aW9uIHdlIG5lZWQgYSBhZGRpdGlvbiBhbmQgYSByZW1vdmFsIG9uZSBpcyBtaXNzaW5nOiAke2FkZGVkfSwgJHtkcm9wcGVkfWBcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhbmdlcy5hZGRlZC5sZW5ndGggPT09IDAgJiYgY2hhbmdlcy5kcm9wcGVkLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjaGFuZ2VzLmRyb3BwZWQuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgdXBkYXRlZExpc3QgPSBkcm9wSXRlbShpdGVtLCB1cGRhdGVkTGlzdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5nZXMuYWRkZWQubGVuZ3RoID4gMCAmJiBjaGFuZ2VzLmRyb3BwZWQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgY2hhbmdlcy5hZGRlZC5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICB1cGRhdGVkTGlzdCA9IGFkZEl0ZW0oaXRlbSwgdXBkYXRlZExpc3QpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgaWYgKHVwZGF0ZWRMaXN0Lmxlbmd0aCA+IG5leHRMaXN0Lmxlbmd0aCkge1xuICAgIGNvbnN0IG1pc3NpbmdJdGVtcyA9IGRpZmZlcmVuY2VCeSh1cGRhdGVkTGlzdCwgbmV4dExpc3QsIGdldFRyYWNrUmVmZXJlbmNlSWQpO1xuICAgIHVwZGF0ZWRMaXN0ID0gdXBkYXRlZExpc3QuZmlsdGVyKFxuICAgICAgKGl0ZW0pID0+ICFtaXNzaW5nSXRlbXMubWFwKGdldFRyYWNrUmVmZXJlbmNlSWQpLmluY2x1ZGVzKGdldFRyYWNrUmVmZXJlbmNlSWQoaXRlbSkpXG4gICAgKTtcbiAgfVxuICByZXR1cm4gdXBkYXRlZExpc3Q7XG59XG5mdW5jdGlvbiByZWZyZXNoTGlzdChjdXJyZW50TGlzdCwgbmV4dExpc3QpIHtcbiAgcmV0dXJuIGN1cnJlbnRMaXN0Lm1hcCgoY3VycmVudEl0ZW0pID0+IHtcbiAgICBjb25zdCB1cGRhdGVGb3JDdXJyZW50SXRlbSA9IG5leHRMaXN0LmZpbmQoXG4gICAgICAobmV3SXRlbV8pID0+IChcbiAgICAgICAgLy8gSWYgdGhlIElEcyBtYXRjaCBvciAuLlxuICAgICAgICBnZXRUcmFja1JlZmVyZW5jZUlkKGN1cnJlbnRJdGVtKSA9PT0gZ2V0VHJhY2tSZWZlcmVuY2VJZChuZXdJdGVtXykgfHwgLy8gLi4uIGlmIHRoZSBjdXJyZW50IGl0ZW0gaXMgYSBwbGFjZWhvbGRlciBhbmQgdGhlIG5ldyBpdGVtIGlzIHRoZSB0cmFjayByZWZlcmVuY2UgY2FuIHJlcGxhY2UgaXQuXG4gICAgICAgIHR5cGVvZiBjdXJyZW50SXRlbSAhPT0gXCJudW1iZXJcIiAmJiBpc1RyYWNrUmVmZXJlbmNlUGxhY2Vob2xkZXIoY3VycmVudEl0ZW0pICYmIGlzVHJhY2tSZWZlcmVuY2UobmV3SXRlbV8pICYmIGlzUGxhY2Vob2xkZXJSZXBsYWNlbWVudChjdXJyZW50SXRlbSwgbmV3SXRlbV8pXG4gICAgICApXG4gICAgKTtcbiAgICByZXR1cm4gdXBkYXRlRm9yQ3VycmVudEl0ZW0gIT0gbnVsbCA/IHVwZGF0ZUZvckN1cnJlbnRJdGVtIDogY3VycmVudEl0ZW07XG4gIH0pO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9tZWRpYVRvZ2dsZS50c1xuaW1wb3J0IHsgVHJhY2sgYXMgVHJhY2s3IH0gZnJvbSBcImxpdmVraXQtY2xpZW50XCI7XG5pbXBvcnQgeyBTdWJqZWN0IGFzIFN1YmplY3QyLCBtYXAgYXMgbWFwNCwgc3RhcnRXaXRoIGFzIHN0YXJ0V2l0aDQgfSBmcm9tIFwicnhqc1wiO1xuXG4vLyBzcmMvb2JzZXJ2YWJsZXMvcGFydGljaXBhbnQudHNcbmltcG9ydCB7IFBhcnRpY2lwYW50RXZlbnQgYXMgUGFydGljaXBhbnRFdmVudDIsIFJvb21FdmVudCBhcyBSb29tRXZlbnQzLCBUcmFjayBhcyBUcmFjazYgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IG1hcCBhcyBtYXAzLCBzd2l0Y2hNYXAsIE9ic2VydmFibGUgYXMgT2JzZXJ2YWJsZTIsIHN0YXJ0V2l0aCBhcyBzdGFydFdpdGgzIH0gZnJvbSBcInJ4anNcIjtcblxuLy8gc3JjL29ic2VydmFibGVzL3Jvb20udHNcbmltcG9ydCB7IFN1YmplY3QsIG1hcCwgT2JzZXJ2YWJsZSwgc3RhcnRXaXRoLCBmaW5hbGl6ZSwgZmlsdGVyLCBjb25jYXQgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgTG9jYWxQYXJ0aWNpcGFudCBhcyBMb2NhbFBhcnRpY2lwYW50MywgUm9vbSwgUm9vbUV2ZW50IGFzIFJvb21FdmVudDIsIFRyYWNrIGFzIFRyYWNrNCB9IGZyb20gXCJsaXZla2l0LWNsaWVudFwiO1xuZnVuY3Rpb24gb2JzZXJ2ZVJvb21FdmVudHMocm9vbSwgLi4uZXZlbnRzKSB7XG4gIGNvbnN0IG9ic2VydmFibGUgPSBuZXcgT2JzZXJ2YWJsZSgoc3Vic2NyaWJlKSA9PiB7XG4gICAgY29uc3Qgb25Sb29tVXBkYXRlID0gKCkgPT4ge1xuICAgICAgc3Vic2NyaWJlLm5leHQocm9vbSk7XG4gICAgfTtcbiAgICBldmVudHMuZm9yRWFjaCgoZXZ0KSA9PiB7XG4gICAgICByb29tLm9uKGV2dCwgb25Sb29tVXBkYXRlKTtcbiAgICB9KTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgIGV2ZW50cy5mb3JFYWNoKChldnQpID0+IHtcbiAgICAgICAgcm9vbS5vZmYoZXZ0LCBvblJvb21VcGRhdGUpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0pLnBpcGUoc3RhcnRXaXRoKHJvb20pKTtcbiAgcmV0dXJuIG9ic2VydmFibGU7XG59XG5mdW5jdGlvbiByb29tRXZlbnRTZWxlY3Rvcihyb29tLCBldmVudCkge1xuICBjb25zdCBvYnNlcnZhYmxlID0gbmV3IE9ic2VydmFibGUoKHN1YnNjcmliZSkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZSA9ICguLi5wYXJhbXMpID0+IHtcbiAgICAgIHN1YnNjcmliZS5uZXh0KHBhcmFtcyk7XG4gICAgfTtcbiAgICByb29tLm9uKGV2ZW50LCB1cGRhdGUpO1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gKCkgPT4ge1xuICAgICAgcm9vbS5vZmYoZXZlbnQsIHVwZGF0ZSk7XG4gICAgfTtcbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0pO1xuICByZXR1cm4gb2JzZXJ2YWJsZTtcbn1cbmZ1bmN0aW9uIHJvb21PYnNlcnZlcihyb29tKSB7XG4gIGNvbnN0IG9ic2VydmFibGUgPSBvYnNlcnZlUm9vbUV2ZW50cyhcbiAgICByb29tLFxuICAgIFJvb21FdmVudDIuUGFydGljaXBhbnRDb25uZWN0ZWQsXG4gICAgUm9vbUV2ZW50Mi5QYXJ0aWNpcGFudERpc2Nvbm5lY3RlZCxcbiAgICBSb29tRXZlbnQyLkFjdGl2ZVNwZWFrZXJzQ2hhbmdlZCxcbiAgICBSb29tRXZlbnQyLlRyYWNrU3Vic2NyaWJlZCxcbiAgICBSb29tRXZlbnQyLlRyYWNrVW5zdWJzY3JpYmVkLFxuICAgIFJvb21FdmVudDIuTG9jYWxUcmFja1B1Ymxpc2hlZCxcbiAgICBSb29tRXZlbnQyLkxvY2FsVHJhY2tVbnB1Ymxpc2hlZCxcbiAgICBSb29tRXZlbnQyLkF1ZGlvUGxheWJhY2tTdGF0dXNDaGFuZ2VkLFxuICAgIFJvb21FdmVudDIuQ29ubmVjdGlvblN0YXRlQ2hhbmdlZFxuICApLnBpcGUoc3RhcnRXaXRoKHJvb20pKTtcbiAgcmV0dXJuIG9ic2VydmFibGU7XG59XG5mdW5jdGlvbiBjb25uZWN0aW9uU3RhdGVPYnNlcnZlcihyb29tKSB7XG4gIHJldHVybiByb29tRXZlbnRTZWxlY3Rvcihyb29tLCBSb29tRXZlbnQyLkNvbm5lY3Rpb25TdGF0ZUNoYW5nZWQpLnBpcGUoXG4gICAgbWFwKChbY29ubmVjdGlvblN0YXRlXSkgPT4gY29ubmVjdGlvblN0YXRlKSxcbiAgICBzdGFydFdpdGgocm9vbS5zdGF0ZSlcbiAgKTtcbn1cbmZ1bmN0aW9uIHNjcmVlblNoYXJlT2JzZXJ2ZXIocm9vbSkge1xuICBsZXQgc2NyZWVuU2hhcmVTdWJzY3JpYmVyO1xuICBjb25zdCBvYnNlcnZlcnMgPSBbXTtcbiAgY29uc3Qgb2JzZXJ2YWJsZSA9IG5ldyBPYnNlcnZhYmxlKChzdWJzY3JpYmVyKSA9PiB7XG4gICAgc2NyZWVuU2hhcmVTdWJzY3JpYmVyID0gc3Vic2NyaWJlcjtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgb2JzZXJ2ZXJzLmZvckVhY2goKG9ic2VydmVyKSA9PiB7XG4gICAgICAgIG9ic2VydmVyLnVuc3Vic2NyaWJlKCk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9KTtcbiAgY29uc3Qgc2NyZWVuU2hhcmVUcmFja3MgPSBbXTtcbiAgY29uc3QgaGFuZGxlU3ViID0gKHB1YmxpY2F0aW9uLCBwYXJ0aWNpcGFudCkgPT4ge1xuICAgIGlmIChwdWJsaWNhdGlvbi5zb3VyY2UgIT09IFRyYWNrNC5Tb3VyY2UuU2NyZWVuU2hhcmUgJiYgcHVibGljYXRpb24uc291cmNlICE9PSBUcmFjazQuU291cmNlLlNjcmVlblNoYXJlQXVkaW8pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHRyYWNrTWFwID0gc2NyZWVuU2hhcmVUcmFja3MuZmluZCgodHIpID0+IHRyLnBhcnRpY2lwYW50LmlkZW50aXR5ID09PSBwYXJ0aWNpcGFudC5pZGVudGl0eSk7XG4gICAgY29uc3QgZ2V0U2NyZWVuU2hhcmVUcmFja3MgPSAocGFydGljaXBhbnQyKSA9PiB7XG4gICAgICByZXR1cm4gcGFydGljaXBhbnQyLmdldFRyYWNrcygpLmZpbHRlcihcbiAgICAgICAgKHRyYWNrKSA9PiAodHJhY2suc291cmNlID09PSBUcmFjazQuU291cmNlLlNjcmVlblNoYXJlIHx8IHRyYWNrLnNvdXJjZSA9PT0gVHJhY2s0LlNvdXJjZS5TY3JlZW5TaGFyZUF1ZGlvKSAmJiB0cmFjay50cmFja1xuICAgICAgKTtcbiAgICB9O1xuICAgIGlmICghdHJhY2tNYXApIHtcbiAgICAgIHRyYWNrTWFwID0ge1xuICAgICAgICBwYXJ0aWNpcGFudCxcbiAgICAgICAgdHJhY2tzOiBnZXRTY3JlZW5TaGFyZVRyYWNrcyhwYXJ0aWNpcGFudClcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gc2NyZWVuU2hhcmVUcmFja3MuaW5kZXhPZih0cmFja01hcCk7XG4gICAgICBzY3JlZW5TaGFyZVRyYWNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdHJhY2tNYXAudHJhY2tzID0gZ2V0U2NyZWVuU2hhcmVUcmFja3MocGFydGljaXBhbnQpO1xuICAgIH1cbiAgICBpZiAodHJhY2tNYXAudHJhY2tzLmxlbmd0aCA+IDApIHtcbiAgICAgIHNjcmVlblNoYXJlVHJhY2tzLnB1c2godHJhY2tNYXApO1xuICAgIH1cbiAgICBzY3JlZW5TaGFyZVN1YnNjcmliZXIubmV4dChzY3JlZW5TaGFyZVRyYWNrcyk7XG4gIH07XG4gIG9ic2VydmVycy5wdXNoKFxuICAgIHJvb21FdmVudFNlbGVjdG9yKHJvb20sIFJvb21FdmVudDIuVHJhY2tTdWJzY3JpYmVkKS5zdWJzY3JpYmUoXG4gICAgICAoWywgLi4uYXJnc10pID0+IGhhbmRsZVN1YiguLi5hcmdzKVxuICAgIClcbiAgKTtcbiAgb2JzZXJ2ZXJzLnB1c2goXG4gICAgcm9vbUV2ZW50U2VsZWN0b3Iocm9vbSwgUm9vbUV2ZW50Mi5UcmFja1Vuc3Vic2NyaWJlZCkuc3Vic2NyaWJlKFxuICAgICAgKFssIC4uLmFyZ3NdKSA9PiBoYW5kbGVTdWIoLi4uYXJncylcbiAgICApXG4gICk7XG4gIG9ic2VydmVycy5wdXNoKFxuICAgIHJvb21FdmVudFNlbGVjdG9yKHJvb20sIFJvb21FdmVudDIuTG9jYWxUcmFja1B1Ymxpc2hlZCkuc3Vic2NyaWJlKChhcmdzKSA9PiBoYW5kbGVTdWIoLi4uYXJncykpXG4gICk7XG4gIG9ic2VydmVycy5wdXNoKFxuICAgIHJvb21FdmVudFNlbGVjdG9yKHJvb20sIFJvb21FdmVudDIuTG9jYWxUcmFja1VucHVibGlzaGVkKS5zdWJzY3JpYmUoKGFyZ3MpID0+IHtcbiAgICAgIGhhbmRsZVN1YiguLi5hcmdzKTtcbiAgICB9KVxuICApO1xuICBvYnNlcnZlcnMucHVzaChcbiAgICByb29tRXZlbnRTZWxlY3Rvcihyb29tLCBSb29tRXZlbnQyLlRyYWNrTXV0ZWQpLnN1YnNjcmliZSgoYXJncykgPT4ge1xuICAgICAgaGFuZGxlU3ViKC4uLmFyZ3MpO1xuICAgIH0pXG4gICk7XG4gIG9ic2VydmVycy5wdXNoKFxuICAgIHJvb21FdmVudFNlbGVjdG9yKHJvb20sIFJvb21FdmVudDIuVHJhY2tVbm11dGVkKS5zdWJzY3JpYmUoKGFyZ3MpID0+IHtcbiAgICAgIGhhbmRsZVN1YiguLi5hcmdzKTtcbiAgICB9KVxuICApO1xuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBmb3IgKGNvbnN0IHAgb2Ygcm9vbS5wYXJ0aWNpcGFudHMudmFsdWVzKCkpIHtcbiAgICAgIHAuZ2V0VHJhY2tzKCkuZm9yRWFjaCgodHJhY2spID0+IHtcbiAgICAgICAgaGFuZGxlU3ViKHRyYWNrLCBwKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgMSk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuZnVuY3Rpb24gcm9vbUluZm9PYnNlcnZlcihyb29tKSB7XG4gIGNvbnN0IG9ic2VydmVyID0gb2JzZXJ2ZVJvb21FdmVudHMoXG4gICAgcm9vbSxcbiAgICBSb29tRXZlbnQyLlJvb21NZXRhZGF0YUNoYW5nZWQsXG4gICAgUm9vbUV2ZW50Mi5Db25uZWN0aW9uU3RhdGVDaGFuZ2VkXG4gICkucGlwZShcbiAgICBtYXAoKHIpID0+IHtcbiAgICAgIHJldHVybiB7IG5hbWU6IHIubmFtZSwgbWV0YWRhdGE6IHIubWV0YWRhdGEgfTtcbiAgICB9KVxuICApO1xuICByZXR1cm4gb2JzZXJ2ZXI7XG59XG5mdW5jdGlvbiBhY3RpdmVTcGVha2VyT2JzZXJ2ZXIocm9vbSkge1xuICByZXR1cm4gcm9vbUV2ZW50U2VsZWN0b3Iocm9vbSwgUm9vbUV2ZW50Mi5BY3RpdmVTcGVha2Vyc0NoYW5nZWQpLnBpcGUoXG4gICAgbWFwKChbc3BlYWtlcnNdKSA9PiBzcGVha2VycylcbiAgKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1lZGlhRGV2aWNlT2JzZXJ2ZXIoa2luZCwgb25FcnJvciwgcmVxdWVzdFBlcm1pc3Npb25zID0gdHJ1ZSkge1xuICB2YXIgX2E7XG4gIGNvbnN0IG9uRGV2aWNlQ2hhbmdlID0gKCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBuZXdEZXZpY2VzID0geWllbGQgUm9vbS5nZXRMb2NhbERldmljZXMoa2luZCwgcmVxdWVzdFBlcm1pc3Npb25zKTtcbiAgICAgIGRldmljZVN1YmplY3QubmV4dChuZXdEZXZpY2VzKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBvbkVycm9yID09IG51bGwgPyB2b2lkIDAgOiBvbkVycm9yKGUpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGRldmljZVN1YmplY3QgPSBuZXcgU3ViamVjdCgpO1xuICBjb25zdCBvYnNlcnZhYmxlID0gZGV2aWNlU3ViamVjdC5waXBlKFxuICAgIGZpbmFsaXplKCgpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICAoX2EyID0gbmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJkZXZpY2VjaGFuZ2VcIiwgb25EZXZpY2VDaGFuZ2UpO1xuICAgIH0pXG4gICk7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgaWYgKCF3aW5kb3cuaXNTZWN1cmVDb250ZXh0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBBY2Nlc3NpbmcgbWVkaWEgZGV2aWNlcyBpcyBhdmFpbGFibGUgb25seSBpbiBzZWN1cmUgY29udGV4dHMgKEhUVFBTIGFuZCBsb2NhbGhvc3QpLCBpbiBzb21lIG9yIGFsbCBzdXBwb3J0aW5nIGJyb3dzZXJzLiBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9OYXZpZ2F0b3IvbWVkaWFEZXZpY2VzYFxuICAgICAgKTtcbiAgICB9XG4gICAgKF9hID0gbmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2EuYWRkRXZlbnRMaXN0ZW5lcihcImRldmljZWNoYW5nZVwiLCBvbkRldmljZUNoYW5nZSk7XG4gIH1cbiAgcmV0dXJuIGNvbmNhdChcbiAgICBSb29tLmdldExvY2FsRGV2aWNlcyhraW5kLCByZXF1ZXN0UGVybWlzc2lvbnMpLmNhdGNoKChlKSA9PiBvbkVycm9yID09IG51bGwgPyB2b2lkIDAgOiBvbkVycm9yKGUpKSxcbiAgICBvYnNlcnZhYmxlXG4gICk7XG59XG5mdW5jdGlvbiBjcmVhdGVEYXRhT2JzZXJ2ZXIocm9vbSkge1xuICByZXR1cm4gcm9vbUV2ZW50U2VsZWN0b3Iocm9vbSwgUm9vbUV2ZW50Mi5EYXRhUmVjZWl2ZWQpO1xufVxuZnVuY3Rpb24gcm9vbUF1ZGlvUGxheWJhY2tBbGxvd2VkT2JzZXJ2YWJsZShyb29tKSB7XG4gIGNvbnN0IG9ic2VydmFibGUgPSBvYnNlcnZlUm9vbUV2ZW50cyhyb29tLCBSb29tRXZlbnQyLkF1ZGlvUGxheWJhY2tTdGF0dXNDaGFuZ2VkKS5waXBlKFxuICAgIG1hcCgocm9vbTIpID0+IHtcbiAgICAgIHJldHVybiB7IGNhblBsYXlBdWRpbzogcm9vbTIuY2FuUGxheWJhY2tBdWRpbyB9O1xuICAgIH0pXG4gICk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuZnVuY3Rpb24gcm9vbVZpZGVvUGxheWJhY2tBbGxvd2VkT2JzZXJ2YWJsZShyb29tKSB7XG4gIGNvbnN0IG9ic2VydmFibGUgPSBvYnNlcnZlUm9vbUV2ZW50cyhyb29tLCBSb29tRXZlbnQyLlZpZGVvUGxheWJhY2tTdGF0dXNDaGFuZ2VkKS5waXBlKFxuICAgIG1hcCgocm9vbTIpID0+IHtcbiAgICAgIHJldHVybiB7IGNhblBsYXlWaWRlbzogcm9vbTIuY2FuUGxheWJhY2tWaWRlbyB9O1xuICAgIH0pXG4gICk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuZnVuY3Rpb24gY3JlYXRlQWN0aXZlRGV2aWNlT2JzZXJ2YWJsZShyb29tLCBraW5kKSB7XG4gIHJldHVybiByb29tRXZlbnRTZWxlY3Rvcihyb29tLCBSb29tRXZlbnQyLkFjdGl2ZURldmljZUNoYW5nZWQpLnBpcGUoXG4gICAgZmlsdGVyKChba2luZE9mRGV2aWNlXSkgPT4ga2luZE9mRGV2aWNlID09PSBraW5kKSxcbiAgICBtYXAoKFtraW5kMiwgZGV2aWNlSWRdKSA9PiB7XG4gICAgICBsb2cuZGVidWcoXCJhY3RpdmVEZXZpY2VPYnNlcnZhYmxlIHwgUm9vbUV2ZW50LkFjdGl2ZURldmljZUNoYW5nZWRcIiwgeyBraW5kOiBraW5kMiwgZGV2aWNlSWQgfSk7XG4gICAgICByZXR1cm4gZGV2aWNlSWQ7XG4gICAgfSksXG4gICAgc3RhcnRXaXRoKHJvb20uZ2V0QWN0aXZlRGV2aWNlKGtpbmQpKVxuICApO1xufVxuZnVuY3Rpb24gZW5jcnlwdGlvblN0YXR1c09ic2VydmFibGUocm9vbSwgcGFydGljaXBhbnQpIHtcbiAgcmV0dXJuIHJvb21FdmVudFNlbGVjdG9yKHJvb20sIFJvb21FdmVudDIuUGFydGljaXBhbnRFbmNyeXB0aW9uU3RhdHVzQ2hhbmdlZCkucGlwZShcbiAgICBmaWx0ZXIoXG4gICAgICAoWywgcF0pID0+IHBhcnRpY2lwYW50LmlkZW50aXR5ID09PSAocCA9PSBudWxsID8gdm9pZCAwIDogcC5pZGVudGl0eSkgfHwgIXAgJiYgcGFydGljaXBhbnQuaWRlbnRpdHkgPT09IHJvb20ubG9jYWxQYXJ0aWNpcGFudC5pZGVudGl0eVxuICAgICksXG4gICAgbWFwKChbZW5jcnlwdGVkXSkgPT4gZW5jcnlwdGVkKSxcbiAgICBzdGFydFdpdGgoXG4gICAgICBwYXJ0aWNpcGFudCBpbnN0YW5jZW9mIExvY2FsUGFydGljaXBhbnQzID8gcGFydGljaXBhbnQuaXNFMkVFRW5hYmxlZCA6IHBhcnRpY2lwYW50LmlzRW5jcnlwdGVkXG4gICAgKVxuICApO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9tZWRpYVRyYWNrLnRzXG5pbXBvcnQgeyBUcmFjayBhcyBUcmFjazUgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IG1hcCBhcyBtYXAyLCBzdGFydFdpdGggYXMgc3RhcnRXaXRoMiB9IGZyb20gXCJyeGpzXCI7XG5cbi8vIHNyYy9zdHlsZXMtaW50ZXJmYWNlL2NsYXNzLXByZWZpeGVyLnRzXG5mdW5jdGlvbiBwcmVmaXhDbGFzcyh1bnByZWZpeGVkQ2xhc3NOYW1lKSB7XG4gIHJldHVybiBgJHtjc3NQcmVmaXh9LSR7dW5wcmVmaXhlZENsYXNzTmFtZX1gO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9tZWRpYVRyYWNrLnRzXG5mdW5jdGlvbiBzZXR1cE1lZGlhVHJhY2sodHJhY2tJZGVudGlmaWVyKSB7XG4gIGNvbnN0IGluaXRpYWxQdWIgPSBnZXRUcmFja0J5SWRlbnRpZmllcih0cmFja0lkZW50aWZpZXIpO1xuICBjb25zdCB0cmFja09ic2VydmVyID0gb2JzZXJ2ZVBhcnRpY2lwYW50TWVkaWEodHJhY2tJZGVudGlmaWVyLnBhcnRpY2lwYW50KS5waXBlKFxuICAgIG1hcDIoKCkgPT4ge1xuICAgICAgcmV0dXJuIGdldFRyYWNrQnlJZGVudGlmaWVyKHRyYWNrSWRlbnRpZmllcik7XG4gICAgfSksXG4gICAgc3RhcnRXaXRoMihpbml0aWFsUHViKVxuICApO1xuICBjb25zdCBjbGFzc05hbWUgPSBwcmVmaXhDbGFzcyhcbiAgICB0cmFja0lkZW50aWZpZXIuc291cmNlID09PSBUcmFjazUuU291cmNlLkNhbWVyYSB8fCB0cmFja0lkZW50aWZpZXIuc291cmNlID09PSBUcmFjazUuU291cmNlLlNjcmVlblNoYXJlID8gXCJwYXJ0aWNpcGFudC1tZWRpYS12aWRlb1wiIDogXCJwYXJ0aWNpcGFudC1tZWRpYS1hdWRpb1wiXG4gICk7XG4gIHJldHVybiB7IGNsYXNzTmFtZSwgdHJhY2tPYnNlcnZlciB9O1xufVxuZnVuY3Rpb24gZ2V0VHJhY2tCeUlkZW50aWZpZXIob3B0aW9ucykge1xuICBpZiAoaXNUcmFja1JlZmVyZW5jZShvcHRpb25zKSkge1xuICAgIHJldHVybiBvcHRpb25zLnB1YmxpY2F0aW9uO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHsgc291cmNlLCBuYW1lLCBwYXJ0aWNpcGFudCB9ID0gb3B0aW9ucztcbiAgICBpZiAoc291cmNlICYmIG5hbWUpIHtcbiAgICAgIHJldHVybiBwYXJ0aWNpcGFudC5nZXRUcmFja3MoKS5maW5kKChwdWIpID0+IHB1Yi5zb3VyY2UgPT09IHNvdXJjZSAmJiBwdWIudHJhY2tOYW1lID09PSBuYW1lKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUpIHtcbiAgICAgIHJldHVybiBwYXJ0aWNpcGFudC5nZXRUcmFja0J5TmFtZShuYW1lKTtcbiAgICB9IGVsc2UgaWYgKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIHBhcnRpY2lwYW50LmdldFRyYWNrKHNvdXJjZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkF0IGxlYXN0IG9uZSBvZiBzb3VyY2UgYW5kIG5hbWUgbmVlZHMgdG8gYmUgZGVmaW5lZFwiKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gc3JjL29ic2VydmFibGVzL3BhcnRpY2lwYW50LnRzXG5mdW5jdGlvbiBvYnNlcnZlUGFydGljaXBhbnRFdmVudHMocGFydGljaXBhbnQsIC4uLmV2ZW50cykge1xuICBjb25zdCBvYnNlcnZhYmxlID0gbmV3IE9ic2VydmFibGUyKChzdWJzY3JpYmUpID0+IHtcbiAgICBjb25zdCBvblBhcnRpY2lwYW50VXBkYXRlID0gKCkgPT4ge1xuICAgICAgc3Vic2NyaWJlLm5leHQocGFydGljaXBhbnQpO1xuICAgIH07XG4gICAgZXZlbnRzLmZvckVhY2goKGV2dCkgPT4ge1xuICAgICAgcGFydGljaXBhbnQub24oZXZ0LCBvblBhcnRpY2lwYW50VXBkYXRlKTtcbiAgICB9KTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgIGV2ZW50cy5mb3JFYWNoKChldnQpID0+IHtcbiAgICAgICAgcGFydGljaXBhbnQub2ZmKGV2dCwgb25QYXJ0aWNpcGFudFVwZGF0ZSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgfSkucGlwZShzdGFydFdpdGgzKHBhcnRpY2lwYW50KSk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuZnVuY3Rpb24gb2JzZXJ2ZVBhcnRpY2lwYW50TWVkaWEocGFydGljaXBhbnQpIHtcbiAgY29uc3QgcGFydGljaXBhbnRPYnNlcnZlciA9IG9ic2VydmVQYXJ0aWNpcGFudEV2ZW50cyhcbiAgICBwYXJ0aWNpcGFudCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5UcmFja011dGVkLFxuICAgIFBhcnRpY2lwYW50RXZlbnQyLlRyYWNrVW5tdXRlZCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5QYXJ0aWNpcGFudFBlcm1pc3Npb25zQ2hhbmdlZCxcbiAgICAvLyBQYXJ0aWNpcGFudEV2ZW50LklzU3BlYWtpbmdDaGFuZ2VkLFxuICAgIFBhcnRpY2lwYW50RXZlbnQyLlRyYWNrUHVibGlzaGVkLFxuICAgIFBhcnRpY2lwYW50RXZlbnQyLlRyYWNrVW5wdWJsaXNoZWQsXG4gICAgUGFydGljaXBhbnRFdmVudDIuTG9jYWxUcmFja1B1Ymxpc2hlZCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5Mb2NhbFRyYWNrVW5wdWJsaXNoZWQsXG4gICAgUGFydGljaXBhbnRFdmVudDIuTWVkaWFEZXZpY2VzRXJyb3IsXG4gICAgUGFydGljaXBhbnRFdmVudDIuVHJhY2tTdWJzY3JpcHRpb25TdGF0dXNDaGFuZ2VkXG4gICAgLy8gUGFydGljaXBhbnRFdmVudC5Db25uZWN0aW9uUXVhbGl0eUNoYW5nZWQsXG4gICkucGlwZShcbiAgICBtYXAzKChwKSA9PiB7XG4gICAgICBjb25zdCB7IGlzTWljcm9waG9uZUVuYWJsZWQsIGlzQ2FtZXJhRW5hYmxlZCwgaXNTY3JlZW5TaGFyZUVuYWJsZWQgfSA9IHA7XG4gICAgICBjb25zdCBtaWNyb3Bob25lVHJhY2sgPSBwLmdldFRyYWNrKFRyYWNrNi5Tb3VyY2UuTWljcm9waG9uZSk7XG4gICAgICBjb25zdCBjYW1lcmFUcmFjayA9IHAuZ2V0VHJhY2soVHJhY2s2LlNvdXJjZS5DYW1lcmEpO1xuICAgICAgY29uc3QgcGFydGljaXBhbnRNZWRpYSA9IHtcbiAgICAgICAgaXNDYW1lcmFFbmFibGVkLFxuICAgICAgICBpc01pY3JvcGhvbmVFbmFibGVkLFxuICAgICAgICBpc1NjcmVlblNoYXJlRW5hYmxlZCxcbiAgICAgICAgY2FtZXJhVHJhY2ssXG4gICAgICAgIG1pY3JvcGhvbmVUcmFjayxcbiAgICAgICAgcGFydGljaXBhbnQ6IHBcbiAgICAgIH07XG4gICAgICByZXR1cm4gcGFydGljaXBhbnRNZWRpYTtcbiAgICB9KVxuICApO1xuICByZXR1cm4gcGFydGljaXBhbnRPYnNlcnZlcjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVRyYWNrT2JzZXJ2ZXIocGFydGljaXBhbnQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9ic2VydmVQYXJ0aWNpcGFudE1lZGlhKHBhcnRpY2lwYW50KS5waXBlKFxuICAgIG1hcDMoKCkgPT4ge1xuICAgICAgcmV0dXJuIHsgcHVibGljYXRpb246IGdldFRyYWNrQnlJZGVudGlmaWVyKG9wdGlvbnMpIH07XG4gICAgfSlcbiAgKTtcbn1cbmZ1bmN0aW9uIHBhcnRpY2lwYW50SW5mb09ic2VydmVyKHBhcnRpY2lwYW50KSB7XG4gIGNvbnN0IG9ic2VydmVyID0gb2JzZXJ2ZVBhcnRpY2lwYW50RXZlbnRzKFxuICAgIHBhcnRpY2lwYW50LFxuICAgIFBhcnRpY2lwYW50RXZlbnQyLlBhcnRpY2lwYW50TWV0YWRhdGFDaGFuZ2VkXG4gICAgLy8gUGFydGljaXBhbnRFdmVudC5Mb2NhbFRyYWNrUHVibGlzaGVkLFxuICApLnBpcGUoXG4gICAgbWFwMygoeyBuYW1lLCBpZGVudGl0eSwgbWV0YWRhdGEgfSkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgaWRlbnRpdHksXG4gICAgICAgIG1ldGFkYXRhXG4gICAgICB9O1xuICAgIH0pLFxuICAgIHN0YXJ0V2l0aDMoe1xuICAgICAgbmFtZTogcGFydGljaXBhbnQubmFtZSxcbiAgICAgIGlkZW50aXR5OiBwYXJ0aWNpcGFudC5pZGVudGl0eSxcbiAgICAgIG1ldGFkYXRhOiBwYXJ0aWNpcGFudC5tZXRhZGF0YVxuICAgIH0pXG4gICk7XG4gIHJldHVybiBvYnNlcnZlcjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb25RdWFsaXR5T2JzZXJ2ZXIocGFydGljaXBhbnQpIHtcbiAgY29uc3Qgb2JzZXJ2ZXIgPSBwYXJ0aWNpcGFudEV2ZW50U2VsZWN0b3IoXG4gICAgcGFydGljaXBhbnQsXG4gICAgUGFydGljaXBhbnRFdmVudDIuQ29ubmVjdGlvblF1YWxpdHlDaGFuZ2VkXG4gICkucGlwZShcbiAgICBtYXAzKChbcXVhbGl0eV0pID0+IHF1YWxpdHkpLFxuICAgIHN0YXJ0V2l0aDMocGFydGljaXBhbnQuY29ubmVjdGlvblF1YWxpdHkpXG4gICk7XG4gIHJldHVybiBvYnNlcnZlcjtcbn1cbmZ1bmN0aW9uIHBhcnRpY2lwYW50RXZlbnRTZWxlY3RvcihwYXJ0aWNpcGFudCwgZXZlbnQpIHtcbiAgY29uc3Qgb2JzZXJ2YWJsZSA9IG5ldyBPYnNlcnZhYmxlMigoc3Vic2NyaWJlKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlID0gKC4uLnBhcmFtcykgPT4ge1xuICAgICAgc3Vic2NyaWJlLm5leHQocGFyYW1zKTtcbiAgICB9O1xuICAgIHBhcnRpY2lwYW50Lm9uKGV2ZW50LCB1cGRhdGUpO1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gKCkgPT4ge1xuICAgICAgcGFydGljaXBhbnQub2ZmKGV2ZW50LCB1cGRhdGUpO1xuICAgIH07XG4gICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICB9KTtcbiAgcmV0dXJuIG9ic2VydmFibGU7XG59XG5mdW5jdGlvbiBtdXRlZE9ic2VydmVyKHRyYWNrUmVmKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgcmV0dXJuIG9ic2VydmVQYXJ0aWNpcGFudEV2ZW50cyhcbiAgICB0cmFja1JlZi5wYXJ0aWNpcGFudCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5UcmFja011dGVkLFxuICAgIFBhcnRpY2lwYW50RXZlbnQyLlRyYWNrVW5tdXRlZCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5UcmFja1N1YnNjcmliZWQsXG4gICAgUGFydGljaXBhbnRFdmVudDIuVHJhY2tVbnN1YnNjcmliZWQsXG4gICAgUGFydGljaXBhbnRFdmVudDIuTG9jYWxUcmFja1B1Ymxpc2hlZCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5Mb2NhbFRyYWNrVW5wdWJsaXNoZWRcbiAgKS5waXBlKFxuICAgIG1hcDMoKHBhcnRpY2lwYW50KSA9PiB7XG4gICAgICB2YXIgX2EyLCBfYjI7XG4gICAgICBjb25zdCBwdWIgPSAoX2EyID0gdHJhY2tSZWYucHVibGljYXRpb24pICE9IG51bGwgPyBfYTIgOiBwYXJ0aWNpcGFudC5nZXRUcmFjayh0cmFja1JlZi5zb3VyY2UpO1xuICAgICAgcmV0dXJuIChfYjIgPSBwdWIgPT0gbnVsbCA/IHZvaWQgMCA6IHB1Yi5pc011dGVkKSAhPSBudWxsID8gX2IyIDogdHJ1ZTtcbiAgICB9KSxcbiAgICBzdGFydFdpdGgzKFxuICAgICAgKF9kID0gKF9jID0gKF9hID0gdHJhY2tSZWYucHVibGljYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYS5pc011dGVkKSAhPSBudWxsID8gX2MgOiAoX2IgPSB0cmFja1JlZi5wYXJ0aWNpcGFudC5nZXRUcmFjayh0cmFja1JlZi5zb3VyY2UpKSA9PSBudWxsID8gdm9pZCAwIDogX2IuaXNNdXRlZCkgIT0gbnVsbCA/IF9kIDogdHJ1ZVxuICAgIClcbiAgKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUlzU3BlYWtpbmdPYnNlcnZlcihwYXJ0aWNpcGFudCkge1xuICByZXR1cm4gcGFydGljaXBhbnRFdmVudFNlbGVjdG9yKHBhcnRpY2lwYW50LCBQYXJ0aWNpcGFudEV2ZW50Mi5Jc1NwZWFraW5nQ2hhbmdlZCkucGlwZShcbiAgICBtYXAzKChbaXNTcGVha2luZ10pID0+IGlzU3BlYWtpbmcpXG4gICk7XG59XG5mdW5jdGlvbiBjb25uZWN0ZWRQYXJ0aWNpcGFudHNPYnNlcnZlcihyb29tLCBvcHRpb25zID0ge30pIHtcbiAgdmFyIF9hO1xuICBsZXQgc3Vic2NyaWJlcjtcbiAgY29uc3Qgb2JzZXJ2YWJsZSA9IG5ldyBPYnNlcnZhYmxlMigoc3ViKSA9PiB7XG4gICAgc3Vic2NyaWJlciA9IHN1YjtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXIudW5zdWJzY3JpYmUoKTtcbiAgfSkucGlwZShzdGFydFdpdGgzKEFycmF5LmZyb20ocm9vbS5wYXJ0aWNpcGFudHMudmFsdWVzKCkpKSk7XG4gIGNvbnN0IGFkZGl0aW9uYWxSb29tRXZlbnRzID0gKF9hID0gb3B0aW9ucy5hZGRpdGlvbmFsUm9vbUV2ZW50cykgIT0gbnVsbCA/IF9hIDogYWxsUGFydGljaXBhbnRSb29tRXZlbnRzO1xuICBjb25zdCByb29tRXZlbnRzID0gQXJyYXkuZnJvbShcbiAgICAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gICAgICBSb29tRXZlbnQzLlBhcnRpY2lwYW50Q29ubmVjdGVkLFxuICAgICAgUm9vbUV2ZW50My5QYXJ0aWNpcGFudERpc2Nvbm5lY3RlZCxcbiAgICAgIFJvb21FdmVudDMuQ29ubmVjdGlvblN0YXRlQ2hhbmdlZCxcbiAgICAgIC4uLmFkZGl0aW9uYWxSb29tRXZlbnRzXG4gICAgXSlcbiAgKTtcbiAgY29uc3QgbGlzdGVuZXIgPSBvYnNlcnZlUm9vbUV2ZW50cyhyb29tLCAuLi5yb29tRXZlbnRzKS5zdWJzY3JpYmUoXG4gICAgKHIpID0+IHN1YnNjcmliZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHN1YnNjcmliZXIubmV4dChBcnJheS5mcm9tKHIucGFydGljaXBhbnRzLnZhbHVlcygpKSlcbiAgKTtcbiAgaWYgKHJvb20ucGFydGljaXBhbnRzLnNpemUgPiAwKSB7XG4gICAgc3Vic2NyaWJlciA9PSBudWxsID8gdm9pZCAwIDogc3Vic2NyaWJlci5uZXh0KEFycmF5LmZyb20ocm9vbS5wYXJ0aWNpcGFudHMudmFsdWVzKCkpKTtcbiAgfVxuICByZXR1cm4gb2JzZXJ2YWJsZTtcbn1cbmZ1bmN0aW9uIGNvbm5lY3RlZFBhcnRpY2lwYW50T2JzZXJ2ZXIocm9vbSwgaWRlbnRpdHksIG9wdGlvbnMgPSB7fSkge1xuICB2YXIgX2E7XG4gIGNvbnN0IGFkZGl0aW9uYWxFdmVudHMgPSAoX2EgPSBvcHRpb25zLmFkZGl0aW9uYWxFdmVudHMpICE9IG51bGwgPyBfYSA6IGFsbFBhcnRpY2lwYW50RXZlbnRzO1xuICBjb25zdCBvYnNlcnZhYmxlID0gb2JzZXJ2ZVJvb21FdmVudHMoXG4gICAgcm9vbSxcbiAgICBSb29tRXZlbnQzLlBhcnRpY2lwYW50Q29ubmVjdGVkLFxuICAgIFJvb21FdmVudDMuUGFydGljaXBhbnREaXNjb25uZWN0ZWQsXG4gICAgUm9vbUV2ZW50My5Db25uZWN0aW9uU3RhdGVDaGFuZ2VkXG4gICkucGlwZShcbiAgICBzd2l0Y2hNYXAoKHIpID0+IHtcbiAgICAgIGNvbnN0IHBhcnRpY2lwYW50ID0gci5nZXRQYXJ0aWNpcGFudEJ5SWRlbnRpdHkoaWRlbnRpdHkpO1xuICAgICAgaWYgKHBhcnRpY2lwYW50KSB7XG4gICAgICAgIHJldHVybiBvYnNlcnZlUGFydGljaXBhbnRFdmVudHMocGFydGljaXBhbnQsIC4uLmFkZGl0aW9uYWxFdmVudHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlMigoc3Vic2NyaWJlKSA9PiBzdWJzY3JpYmUubmV4dCh2b2lkIDApKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICBzdGFydFdpdGgzKHJvb20uZ2V0UGFydGljaXBhbnRCeUlkZW50aXR5KGlkZW50aXR5KSlcbiAgKTtcbiAgcmV0dXJuIG9ic2VydmFibGU7XG59XG5mdW5jdGlvbiBwYXJ0aWNpcGFudFBlcm1pc3Npb25PYnNlcnZlcihwYXJ0aWNpcGFudCkge1xuICBjb25zdCBvYnNlcnZlciA9IHBhcnRpY2lwYW50RXZlbnRTZWxlY3RvcihcbiAgICBwYXJ0aWNpcGFudCxcbiAgICBQYXJ0aWNpcGFudEV2ZW50Mi5QYXJ0aWNpcGFudFBlcm1pc3Npb25zQ2hhbmdlZFxuICApLnBpcGUoXG4gICAgbWFwMygoKSA9PiBwYXJ0aWNpcGFudC5wZXJtaXNzaW9ucyksXG4gICAgc3RhcnRXaXRoMyhwYXJ0aWNpcGFudC5wZXJtaXNzaW9ucylcbiAgKTtcbiAgcmV0dXJuIG9ic2VydmVyO1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9tZWRpYVRvZ2dsZS50c1xuZnVuY3Rpb24gc2V0dXBNZWRpYVRvZ2dsZShzb3VyY2UsIHJvb20sIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBsb2NhbFBhcnRpY2lwYW50IH0gPSByb29tO1xuICBjb25zdCBnZXRTb3VyY2VFbmFibGVkID0gKHNvdXJjZTIsIGxvY2FsUGFydGljaXBhbnQyKSA9PiB7XG4gICAgbGV0IGlzRW5hYmxlZCA9IGZhbHNlO1xuICAgIHN3aXRjaCAoc291cmNlMikge1xuICAgICAgY2FzZSBUcmFjazcuU291cmNlLkNhbWVyYTpcbiAgICAgICAgaXNFbmFibGVkID0gbG9jYWxQYXJ0aWNpcGFudDIuaXNDYW1lcmFFbmFibGVkO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgVHJhY2s3LlNvdXJjZS5NaWNyb3Bob25lOlxuICAgICAgICBpc0VuYWJsZWQgPSBsb2NhbFBhcnRpY2lwYW50Mi5pc01pY3JvcGhvbmVFbmFibGVkO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgVHJhY2s3LlNvdXJjZS5TY3JlZW5TaGFyZTpcbiAgICAgICAgaXNFbmFibGVkID0gbG9jYWxQYXJ0aWNpcGFudDIuaXNTY3JlZW5TaGFyZUVuYWJsZWQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBpc0VuYWJsZWQ7XG4gIH07XG4gIGNvbnN0IGVuYWJsZWRPYnNlcnZlciA9IG9ic2VydmVQYXJ0aWNpcGFudE1lZGlhKGxvY2FsUGFydGljaXBhbnQpLnBpcGUoXG4gICAgbWFwNCgobWVkaWEpID0+IHtcbiAgICAgIHJldHVybiBnZXRTb3VyY2VFbmFibGVkKHNvdXJjZSwgbWVkaWEucGFydGljaXBhbnQpO1xuICAgIH0pLFxuICAgIHN0YXJ0V2l0aDQoZ2V0U291cmNlRW5hYmxlZChzb3VyY2UsIGxvY2FsUGFydGljaXBhbnQpKVxuICApO1xuICBjb25zdCBwZW5kaW5nU3ViamVjdCA9IG5ldyBTdWJqZWN0MigpO1xuICBjb25zdCB0b2dnbGUgPSAoZm9yY2VTdGF0ZSwgY2FwdHVyZU9wdGlvbnMpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB0cnkge1xuICAgICAgY2FwdHVyZU9wdGlvbnMgIT0gbnVsbCA/IGNhcHR1cmVPcHRpb25zIDogY2FwdHVyZU9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgcGVuZGluZ1N1YmplY3QubmV4dCh0cnVlKTtcbiAgICAgIHN3aXRjaCAoc291cmNlKSB7XG4gICAgICAgIGNhc2UgVHJhY2s3LlNvdXJjZS5DYW1lcmE6XG4gICAgICAgICAgeWllbGQgbG9jYWxQYXJ0aWNpcGFudC5zZXRDYW1lcmFFbmFibGVkKFxuICAgICAgICAgICAgZm9yY2VTdGF0ZSAhPSBudWxsID8gZm9yY2VTdGF0ZSA6ICFsb2NhbFBhcnRpY2lwYW50LmlzQ2FtZXJhRW5hYmxlZCxcbiAgICAgICAgICAgIGNhcHR1cmVPcHRpb25zXG4gICAgICAgICAgKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBUcmFjazcuU291cmNlLk1pY3JvcGhvbmU6XG4gICAgICAgICAgeWllbGQgbG9jYWxQYXJ0aWNpcGFudC5zZXRNaWNyb3Bob25lRW5hYmxlZChcbiAgICAgICAgICAgIGZvcmNlU3RhdGUgIT0gbnVsbCA/IGZvcmNlU3RhdGUgOiAhbG9jYWxQYXJ0aWNpcGFudC5pc01pY3JvcGhvbmVFbmFibGVkLFxuICAgICAgICAgICAgY2FwdHVyZU9wdGlvbnNcbiAgICAgICAgICApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFRyYWNrNy5Tb3VyY2UuU2NyZWVuU2hhcmU6XG4gICAgICAgICAgeWllbGQgbG9jYWxQYXJ0aWNpcGFudC5zZXRTY3JlZW5TaGFyZUVuYWJsZWQoXG4gICAgICAgICAgICBmb3JjZVN0YXRlICE9IG51bGwgPyBmb3JjZVN0YXRlIDogIWxvY2FsUGFydGljaXBhbnQuaXNTY3JlZW5TaGFyZUVuYWJsZWQsXG4gICAgICAgICAgICBjYXB0dXJlT3B0aW9uc1xuICAgICAgICAgICk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHBlbmRpbmdTdWJqZWN0Lm5leHQoZmFsc2UpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByZWZpeENsYXNzKFwiYnV0dG9uXCIpO1xuICByZXR1cm4ge1xuICAgIGNsYXNzTmFtZSxcbiAgICB0b2dnbGUsXG4gICAgZW5hYmxlZE9ic2VydmVyLFxuICAgIHBlbmRpbmdPYnNlcnZlcjogcGVuZGluZ1N1YmplY3QuYXNPYnNlcnZhYmxlKClcbiAgfTtcbn1cbmZ1bmN0aW9uIHNldHVwTWFudWFsVG9nZ2xlKCkge1xuICBsZXQgc3RhdGUgPSBmYWxzZTtcbiAgY29uc3QgZW5hYmxlZFN1YmplY3QgPSBuZXcgU3ViamVjdDIoKTtcbiAgY29uc3QgcGVuZGluZ1N1YmplY3QgPSBuZXcgU3ViamVjdDIoKTtcbiAgY29uc3QgdG9nZ2xlID0gKGZvcmNlU3RhdGUpID0+IHtcbiAgICBwZW5kaW5nU3ViamVjdC5uZXh0KHRydWUpO1xuICAgIHN0YXRlID0gZm9yY2VTdGF0ZSAhPSBudWxsID8gZm9yY2VTdGF0ZSA6ICFzdGF0ZTtcbiAgICBlbmFibGVkU3ViamVjdC5uZXh0KHN0YXRlKTtcbiAgICBwZW5kaW5nU3ViamVjdC5uZXh0KGZhbHNlKTtcbiAgfTtcbiAgY29uc3QgY2xhc3NOYW1lID0gcHJlZml4Q2xhc3MoXCJidXR0b25cIik7XG4gIHJldHVybiB7XG4gICAgY2xhc3NOYW1lLFxuICAgIHRvZ2dsZSxcbiAgICBlbmFibGVkT2JzZXJ2ZXI6IGVuYWJsZWRTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpLFxuICAgIHBlbmRpbmdPYnNlcnZlcjogcGVuZGluZ1N1YmplY3QuYXNPYnNlcnZhYmxlKClcbiAgfTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvbWVkaWFEZXZpY2VTZWxlY3QudHNcbmltcG9ydCB7XG4gIFRyYWNrIGFzIFRyYWNrOFxufSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gXCJyeGpzXCI7XG5mdW5jdGlvbiBzZXR1cERldmljZVNlbGVjdG9yKGtpbmQsIHJvb20sIGxvY2FsVHJhY2spIHtcbiAgY29uc3QgYWN0aXZlRGV2aWNlU3ViamVjdCA9IG5ldyBCZWhhdmlvclN1YmplY3Qodm9pZCAwKTtcbiAgY29uc3QgYWN0aXZlRGV2aWNlT2JzZXJ2YWJsZSA9IHJvb20gPyBjcmVhdGVBY3RpdmVEZXZpY2VPYnNlcnZhYmxlKHJvb20sIGtpbmQpIDogYWN0aXZlRGV2aWNlU3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgY29uc3Qgc2V0QWN0aXZlTWVkaWFEZXZpY2UgPSAoXzAsIC4uLl8xKSA9PiBfX2FzeW5jKHRoaXMsIFtfMCwgLi4uXzFdLCBmdW5jdGlvbiogKGlkLCBvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBpZiAocm9vbSkge1xuICAgICAgbG9nLmRlYnVnKGBTd2l0Y2hpbmcgYWN0aXZlIGRldmljZSBvZiBraW5kIFwiJHtraW5kfVwiIHdpdGggaWQgJHtpZH0uYCk7XG4gICAgICB5aWVsZCByb29tLnN3aXRjaEFjdGl2ZURldmljZShraW5kLCBpZCwgb3B0aW9ucy5leGFjdCk7XG4gICAgICBjb25zdCBhY3R1YWxEZXZpY2VJZCA9IChfYSA9IHJvb20uZ2V0QWN0aXZlRGV2aWNlKGtpbmQpKSAhPSBudWxsID8gX2EgOiBpZDtcbiAgICAgIGlmIChhY3R1YWxEZXZpY2VJZCAhPT0gaWQgJiYgaWQgIT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgIGxvZy5pbmZvKFxuICAgICAgICAgIGBXZSB0cmllZCB0byBzZWxlY3QgdGhlIGRldmljZSB3aXRoIGlkICgke2lkfSksIGJ1dCB0aGUgYnJvd3NlciBkZWNpZGVkIHRvIHNlbGVjdCB0aGUgZGV2aWNlIHdpdGggaWQgKCR7YWN0dWFsRGV2aWNlSWR9KSBpbnN0ZWFkLmBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGxldCB0YXJnZXRUcmFjayA9IHZvaWQgMDtcbiAgICAgIGlmIChraW5kID09PSBcImF1ZGlvaW5wdXRcIilcbiAgICAgICAgdGFyZ2V0VHJhY2sgPSAoX2IgPSByb29tLmxvY2FsUGFydGljaXBhbnQuZ2V0VHJhY2soVHJhY2s4LlNvdXJjZS5NaWNyb3Bob25lKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnRyYWNrO1xuICAgICAgZWxzZSBpZiAoa2luZCA9PT0gXCJ2aWRlb2lucHV0XCIpIHtcbiAgICAgICAgdGFyZ2V0VHJhY2sgPSAoX2MgPSByb29tLmxvY2FsUGFydGljaXBhbnQuZ2V0VHJhY2soVHJhY2s4LlNvdXJjZS5DYW1lcmEpKSA9PSBudWxsID8gdm9pZCAwIDogX2MudHJhY2s7XG4gICAgICB9XG4gICAgICBjb25zdCB1c2VEZWZhdWx0ID0gaWQgPT09IFwiZGVmYXVsdFwiICYmICF0YXJnZXRUcmFjayB8fCBpZCA9PT0gXCJkZWZhdWx0XCIgJiYgKHRhcmdldFRyYWNrID09IG51bGwgPyB2b2lkIDAgOiB0YXJnZXRUcmFjay5tZWRpYVN0cmVhbVRyYWNrLmxhYmVsLnN0YXJ0c1dpdGgoXCJEZWZhdWx0XCIpKTtcbiAgICAgIGFjdGl2ZURldmljZVN1YmplY3QubmV4dCh1c2VEZWZhdWx0ID8gaWQgOiBhY3R1YWxEZXZpY2VJZCk7XG4gICAgfSBlbHNlIGlmIChsb2NhbFRyYWNrKSB7XG4gICAgICB5aWVsZCBsb2NhbFRyYWNrLnNldERldmljZUlkKG9wdGlvbnMuZXhhY3QgPyB7IGV4YWN0OiBpZCB9IDogaWQpO1xuICAgICAgY29uc3QgYWN0dWFsSWQgPSB5aWVsZCBsb2NhbFRyYWNrLmdldERldmljZUlkKCk7XG4gICAgICBhY3RpdmVEZXZpY2VTdWJqZWN0Lm5leHQoXG4gICAgICAgIGlkID09PSBcImRlZmF1bHRcIiAmJiBsb2NhbFRyYWNrLm1lZGlhU3RyZWFtVHJhY2subGFiZWwuc3RhcnRzV2l0aChcIkRlZmF1bHRcIikgPyBpZCA6IGFjdHVhbElkXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoYWN0aXZlRGV2aWNlU3ViamVjdC52YWx1ZSAhPT0gaWQpIHtcbiAgICAgIGxvZy53YXJuKFxuICAgICAgICBcImRldmljZSBzd2l0Y2ggc2tpcHBlZCwgcGxlYXNlIHByb3ZpZGUgZWl0aGVyIGEgcm9vbSBvciBhIGxvY2FsIHRyYWNrIHRvIHN3aXRjaCBvbi4gXCJcbiAgICAgICk7XG4gICAgICBhY3RpdmVEZXZpY2VTdWJqZWN0Lm5leHQoaWQpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByZWZpeENsYXNzKFwibWVkaWEtZGV2aWNlLXNlbGVjdFwiKTtcbiAgcmV0dXJuIHtcbiAgICBjbGFzc05hbWUsXG4gICAgYWN0aXZlRGV2aWNlT2JzZXJ2YWJsZSxcbiAgICBzZXRBY3RpdmVNZWRpYURldmljZVxuICB9O1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9kaXNjb25uZWN0QnV0dG9uLnRzXG5mdW5jdGlvbiBzZXR1cERpc2Nvbm5lY3RCdXR0b24ocm9vbSkge1xuICBjb25zdCBkaXNjb25uZWN0ID0gKHN0b3BUcmFja3MpID0+IHtcbiAgICByb29tLmRpc2Nvbm5lY3Qoc3RvcFRyYWNrcyk7XG4gIH07XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByZWZpeENsYXNzKFwiZGlzY29ubmVjdC1idXR0b25cIik7XG4gIHJldHVybiB7IGNsYXNzTmFtZSwgZGlzY29ubmVjdCB9O1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9jb25uZWN0aW9uUXVhbGl0eUluZGljYXRvci50c1xuZnVuY3Rpb24gc2V0dXBDb25uZWN0aW9uUXVhbGl0eUluZGljYXRvcihwYXJ0aWNpcGFudCkge1xuICBjb25zdCBjbGFzc05hbWUgPSBwcmVmaXhDbGFzcyhcImNvbm5lY3Rpb24tcXVhbGl0eVwiKTtcbiAgY29uc3QgY29ubmVjdGlvblF1YWxpdHlPYnNlcnZlciA9IGNyZWF0ZUNvbm5lY3Rpb25RdWFsaXR5T2JzZXJ2ZXIocGFydGljaXBhbnQpO1xuICByZXR1cm4geyBjbGFzc05hbWUsIGNvbm5lY3Rpb25RdWFsaXR5T2JzZXJ2ZXIgfTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvdHJhY2tNdXRlZEluZGljYXRvci50c1xuaW1wb3J0IHsgVHJhY2sgYXMgVHJhY2s5IH0gZnJvbSBcImxpdmVraXQtY2xpZW50XCI7XG5mdW5jdGlvbiBzZXR1cFRyYWNrTXV0ZWRJbmRpY2F0b3IodHJhY2tSZWYpIHtcbiAgbGV0IGNsYXNzRm9yU291cmNlID0gXCJ0cmFjay1tdXRlZC1pbmRpY2F0b3ItY2FtZXJhXCI7XG4gIHN3aXRjaCAodHJhY2tSZWYuc291cmNlKSB7XG4gICAgY2FzZSBUcmFjazkuU291cmNlLkNhbWVyYTpcbiAgICAgIGNsYXNzRm9yU291cmNlID0gXCJ0cmFjay1tdXRlZC1pbmRpY2F0b3ItY2FtZXJhXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFRyYWNrOS5Tb3VyY2UuTWljcm9waG9uZTpcbiAgICAgIGNsYXNzRm9yU291cmNlID0gXCJ0cmFjay1tdXRlZC1pbmRpY2F0b3ItbWljcm9waG9uZVwiO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGJyZWFrO1xuICB9XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByZWZpeENsYXNzKGNsYXNzRm9yU291cmNlKTtcbiAgY29uc3QgbWVkaWFNdXRlZE9ic2VydmVyID0gbXV0ZWRPYnNlcnZlcih0cmFja1JlZik7XG4gIHJldHVybiB7IGNsYXNzTmFtZSwgbWVkaWFNdXRlZE9ic2VydmVyIH07XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL3BhcnRpY2lwYW50TmFtZS50c1xuZnVuY3Rpb24gc2V0dXBQYXJ0aWNpcGFudE5hbWUocGFydGljaXBhbnQpIHtcbiAgY29uc3QgaW5mb09ic2VydmVyID0gcGFydGljaXBhbnRJbmZvT2JzZXJ2ZXIocGFydGljaXBhbnQpO1xuICByZXR1cm4geyBjbGFzc05hbWU6IFwibGstcGFydGljaXBhbnQtbmFtZVwiLCBpbmZvT2JzZXJ2ZXIgfTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvcGFydGljaXBhbnRUaWxlLnRzXG5mdW5jdGlvbiBzZXR1cFBhcnRpY2lwYW50VGlsZSgpIHtcbiAgY29uc3QgY2xhc3NOYW1lID0gcHJlZml4Q2xhc3MoXCJwYXJ0aWNpcGFudC10aWxlXCIpO1xuICByZXR1cm4ge1xuICAgIGNsYXNzTmFtZVxuICB9O1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9jaGF0LnRzXG5pbXBvcnQgeyBEYXRhUGFja2V0X0tpbmQgYXMgRGF0YVBhY2tldF9LaW5kMiwgUm9vbUV2ZW50IGFzIFJvb21FdmVudDQgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCBhcyBCZWhhdmlvclN1YmplY3QyLCBTdWJqZWN0IGFzIFN1YmplY3QzLCBzY2FuLCBtYXAgYXMgbWFwNiwgdGFrZVVudGlsIH0gZnJvbSBcInJ4anNcIjtcblxuLy8gc3JjL29ic2VydmFibGVzL2RhdGFDaGFubmVsLnRzXG5pbXBvcnQgeyBEYXRhUGFja2V0X0tpbmQgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IE9ic2VydmFibGUgYXMgT2JzZXJ2YWJsZTMsIGZpbHRlciBhcyBmaWx0ZXIyLCBtYXAgYXMgbWFwNSB9IGZyb20gXCJyeGpzXCI7XG52YXIgRGF0YVRvcGljID0ge1xuICBDSEFUOiBcImxrLWNoYXQtdG9waWNcIlxufTtcbmZ1bmN0aW9uIHNlbmRNZXNzYWdlKF8wLCBfMSwgXzIpIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKGxvY2FsUGFydGljaXBhbnQsIHBheWxvYWQsIHRvcGljLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGtpbmQsIGRlc3RpbmF0aW9uIH0gPSBvcHRpb25zO1xuICAgIHlpZWxkIGxvY2FsUGFydGljaXBhbnQucHVibGlzaERhdGEocGF5bG9hZCwga2luZCAhPSBudWxsID8ga2luZCA6IERhdGFQYWNrZXRfS2luZC5SRUxJQUJMRSwge1xuICAgICAgZGVzdGluYXRpb24sXG4gICAgICB0b3BpY1xuICAgIH0pO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHNldHVwRGF0YU1lc3NhZ2VIYW5kbGVyKHJvb20sIHRvcGljLCBvbk1lc3NhZ2UpIHtcbiAgY29uc3QgbWVzc2FnZU9ic2VydmFibGUgPSBjcmVhdGVEYXRhT2JzZXJ2ZXIocm9vbSkucGlwZShcbiAgICBmaWx0ZXIyKChbLCAsICwgbWVzc2FnZVRvcGljXSkgPT4gdG9waWMgPT09IHZvaWQgMCB8fCBtZXNzYWdlVG9waWMgPT09IHRvcGljKSxcbiAgICBtYXA1KChbcGF5bG9hZCwgcGFydGljaXBhbnQsICwgbWVzc2FnZVRvcGljXSkgPT4ge1xuICAgICAgY29uc3QgbXNnID0ge1xuICAgICAgICBwYXlsb2FkLFxuICAgICAgICB0b3BpYzogbWVzc2FnZVRvcGljLFxuICAgICAgICBmcm9tOiBwYXJ0aWNpcGFudFxuICAgICAgfTtcbiAgICAgIG9uTWVzc2FnZSA9PSBudWxsID8gdm9pZCAwIDogb25NZXNzYWdlKG1zZyk7XG4gICAgICByZXR1cm4gbXNnO1xuICAgIH0pXG4gICk7XG4gIGxldCBpc1NlbmRpbmdTdWJzY3JpYmVyO1xuICBjb25zdCBpc1NlbmRpbmdPYnNlcnZhYmxlID0gbmV3IE9ic2VydmFibGUzKChzdWJzY3JpYmVyKSA9PiB7XG4gICAgaXNTZW5kaW5nU3Vic2NyaWJlciA9IHN1YnNjcmliZXI7XG4gIH0pO1xuICBjb25zdCBzZW5kID0gKF8wLCAuLi5fMSkgPT4gX19hc3luYyh0aGlzLCBbXzAsIC4uLl8xXSwgZnVuY3Rpb24qIChwYXlsb2FkLCBvcHRpb25zID0ge30pIHtcbiAgICBpc1NlbmRpbmdTdWJzY3JpYmVyLm5leHQodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIHlpZWxkIHNlbmRNZXNzYWdlKHJvb20ubG9jYWxQYXJ0aWNpcGFudCwgcGF5bG9hZCwgdG9waWMsIG9wdGlvbnMpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpc1NlbmRpbmdTdWJzY3JpYmVyLm5leHQoZmFsc2UpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB7IG1lc3NhZ2VPYnNlcnZhYmxlLCBpc1NlbmRpbmdPYnNlcnZhYmxlLCBzZW5kIH07XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL2NoYXQudHNcbnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG52YXIgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xudmFyIHRvcGljU3ViamVjdE1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG52YXIgZW5jb2RlID0gKG1lc3NhZ2UpID0+IGVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZTogbWVzc2FnZS5tZXNzYWdlLCB0aW1lc3RhbXA6IG1lc3NhZ2UudGltZXN0YW1wIH0pKTtcbnZhciBkZWNvZGUgPSAobWVzc2FnZSkgPT4gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShtZXNzYWdlKSk7XG5mdW5jdGlvbiBzZXR1cENoYXQocm9vbSwgb3B0aW9ucykge1xuICB2YXIgX2EsIF9iO1xuICBjb25zdCBvbkRlc3Ryb3lPYnNlcnZhYmxlID0gbmV3IFN1YmplY3QzKCk7XG4gIGNvbnN0IHsgbWVzc2FnZURlY29kZXIsIG1lc3NhZ2VFbmNvZGVyLCBjaGFubmVsVG9waWMgfSA9IG9wdGlvbnMgIT0gbnVsbCA/IG9wdGlvbnMgOiB7fTtcbiAgY29uc3QgdG9waWMgPSBjaGFubmVsVG9waWMgIT0gbnVsbCA/IGNoYW5uZWxUb3BpYyA6IERhdGFUb3BpYy5DSEFUO1xuICBsZXQgbmVlZHNTZXR1cCA9IGZhbHNlO1xuICBpZiAoIXRvcGljU3ViamVjdE1hcC5oYXMocm9vbSkpIHtcbiAgICBuZWVkc1NldHVwID0gdHJ1ZTtcbiAgfVxuICBjb25zdCB0b3BpY01hcCA9IChfYSA9IHRvcGljU3ViamVjdE1hcC5nZXQocm9vbSkpICE9IG51bGwgPyBfYSA6IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IG1lc3NhZ2VTdWJqZWN0ID0gKF9iID0gdG9waWNNYXAuZ2V0KHRvcGljKSkgIT0gbnVsbCA/IF9iIDogbmV3IFN1YmplY3QzKCk7XG4gIHRvcGljTWFwLnNldCh0b3BpYywgbWVzc2FnZVN1YmplY3QpO1xuICB0b3BpY1N1YmplY3RNYXAuc2V0KHJvb20sIHRvcGljTWFwKTtcbiAgaWYgKG5lZWRzU2V0dXApIHtcbiAgICBjb25zdCB7IG1lc3NhZ2VPYnNlcnZhYmxlIH0gPSBzZXR1cERhdGFNZXNzYWdlSGFuZGxlcihyb29tLCB0b3BpYyk7XG4gICAgbWVzc2FnZU9ic2VydmFibGUucGlwZSh0YWtlVW50aWwob25EZXN0cm95T2JzZXJ2YWJsZSkpLnN1YnNjcmliZShtZXNzYWdlU3ViamVjdCk7XG4gIH1cbiAgY29uc3QgZmluYWxNZXNzYWdlRGVjb2RlciA9IG1lc3NhZ2VEZWNvZGVyICE9IG51bGwgPyBtZXNzYWdlRGVjb2RlciA6IGRlY29kZTtcbiAgY29uc3QgbWVzc2FnZXNPYnNlcnZhYmxlID0gbWVzc2FnZVN1YmplY3QucGlwZShcbiAgICBtYXA2KChtc2cpID0+IHtcbiAgICAgIGNvbnN0IHBhcnNlZE1lc3NhZ2UgPSBmaW5hbE1lc3NhZ2VEZWNvZGVyKG1zZy5wYXlsb2FkKTtcbiAgICAgIGNvbnN0IG5ld01lc3NhZ2UgPSBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwYXJzZWRNZXNzYWdlKSwgeyBmcm9tOiBtc2cuZnJvbSB9KTtcbiAgICAgIHJldHVybiBuZXdNZXNzYWdlO1xuICAgIH0pLFxuICAgIHNjYW4oKGFjYywgdmFsdWUpID0+IFsuLi5hY2MsIHZhbHVlXSwgW10pLFxuICAgIHRha2VVbnRpbChvbkRlc3Ryb3lPYnNlcnZhYmxlKVxuICApO1xuICBjb25zdCBpc1NlbmRpbmckID0gbmV3IEJlaGF2aW9yU3ViamVjdDIoZmFsc2UpO1xuICBjb25zdCBmaW5hbE1lc3NhZ2VFbmNvZGVyID0gbWVzc2FnZUVuY29kZXIgIT0gbnVsbCA/IG1lc3NhZ2VFbmNvZGVyIDogZW5jb2RlO1xuICBjb25zdCBzZW5kID0gKG1lc3NhZ2UpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IGVuY29kZWRNc2cgPSBmaW5hbE1lc3NhZ2VFbmNvZGVyKHsgbWVzc2FnZSwgdGltZXN0YW1wIH0pO1xuICAgIGlzU2VuZGluZyQubmV4dCh0cnVlKTtcbiAgICB0cnkge1xuICAgICAgeWllbGQgc2VuZE1lc3NhZ2Uocm9vbS5sb2NhbFBhcnRpY2lwYW50LCBlbmNvZGVkTXNnLCB0b3BpYywge1xuICAgICAgICBraW5kOiBEYXRhUGFja2V0X0tpbmQyLlJFTElBQkxFXG4gICAgICB9KTtcbiAgICAgIG1lc3NhZ2VTdWJqZWN0Lm5leHQoe1xuICAgICAgICBwYXlsb2FkOiBlbmNvZGVkTXNnLFxuICAgICAgICB0b3BpYyxcbiAgICAgICAgZnJvbTogcm9vbS5sb2NhbFBhcnRpY2lwYW50XG4gICAgICB9KTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaXNTZW5kaW5nJC5uZXh0KGZhbHNlKTtcbiAgICB9XG4gIH0pO1xuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIG9uRGVzdHJveU9ic2VydmFibGUubmV4dCgpO1xuICAgIG9uRGVzdHJveU9ic2VydmFibGUuY29tcGxldGUoKTtcbiAgICB0b3BpY1N1YmplY3RNYXAuY2xlYXIoKTtcbiAgfVxuICByb29tLm9uY2UoUm9vbUV2ZW50NC5EaXNjb25uZWN0ZWQsIGRlc3Ryb3kpO1xuICByZXR1cm4geyBtZXNzYWdlT2JzZXJ2YWJsZTogbWVzc2FnZXNPYnNlcnZhYmxlLCBpc1NlbmRpbmdPYnNlcnZhYmxlOiBpc1NlbmRpbmckLCBzZW5kIH07XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL3N0YXJ0QXVkaW8udHNcbmZ1bmN0aW9uIHNldHVwU3RhcnRBdWRpbygpIHtcbiAgY29uc3QgaGFuZGxlU3RhcnRBdWRpb1BsYXliYWNrID0gKHJvb20pID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBsb2cuaW5mbyhcIlN0YXJ0IEF1ZGlvIGZvciByb29tOiBcIiwgcm9vbSk7XG4gICAgeWllbGQgcm9vbS5zdGFydEF1ZGlvKCk7XG4gIH0pO1xuICBjb25zdCBjbGFzc05hbWUgPSBwcmVmaXhDbGFzcyhcInN0YXJ0LWF1ZGlvLWJ1dHRvblwiKTtcbiAgcmV0dXJuIHsgY2xhc3NOYW1lLCByb29tQXVkaW9QbGF5YmFja0FsbG93ZWRPYnNlcnZhYmxlLCBoYW5kbGVTdGFydEF1ZGlvUGxheWJhY2sgfTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvc3RhcnRWaWRlby50c1xuZnVuY3Rpb24gc2V0dXBTdGFydFZpZGVvKCkge1xuICBjb25zdCBoYW5kbGVTdGFydFZpZGVvUGxheWJhY2sgPSAocm9vbSkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGxvZy5pbmZvKFwiU3RhcnQgVmlkZW8gZm9yIHJvb206IFwiLCByb29tKTtcbiAgICB5aWVsZCByb29tLnN0YXJ0VmlkZW8oKTtcbiAgfSk7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByZWZpeENsYXNzKFwic3RhcnQtYXVkaW8tYnV0dG9uXCIpO1xuICByZXR1cm4geyBjbGFzc05hbWUsIHJvb21WaWRlb1BsYXliYWNrQWxsb3dlZE9ic2VydmFibGUsIGhhbmRsZVN0YXJ0VmlkZW9QbGF5YmFjayB9O1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9jaGF0VG9nZ2xlLnRzXG5mdW5jdGlvbiBzZXR1cENoYXRUb2dnbGUoKSB7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IFtwcmVmaXhDbGFzcyhcImJ1dHRvblwiKSwgcHJlZml4Q2xhc3MoXCJjaGF0LXRvZ2dsZVwiKV0uam9pbihcIiBcIik7XG4gIHJldHVybiB7IGNsYXNzTmFtZSB9O1xufVxuXG4vLyBzcmMvY29tcG9uZW50cy9mb2N1c1RvZ2dsZS50c1xuZnVuY3Rpb24gc2V0dXBGb2N1c1RvZ2dsZSgpIHtcbiAgY29uc3QgY2xhc3NOYW1lID0gW3ByZWZpeENsYXNzKFwiYnV0dG9uXCIpLCBwcmVmaXhDbGFzcyhcImZvY3VzLXRvZ2dsZS1idXR0b25cIildLmpvaW4oXCIgXCIpO1xuICByZXR1cm4geyBjbGFzc05hbWUgfTtcbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvY2xlYXJQaW5CdXR0b24udHNcbmZ1bmN0aW9uIHNldHVwQ2xlYXJQaW5CdXR0b24oKSB7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IFwibGstY2xlYXItcGluLWJ1dHRvbiBsay1idXR0b25cIjtcbiAgcmV0dXJuIHsgY2xhc3NOYW1lIH07XG59XG5cbi8vIHNyYy9jb21wb25lbnRzL3Jvb20udHNcbmZ1bmN0aW9uIHNldHVwTGl2ZUtpdFJvb20oKSB7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IFwibGstcm9vbS1jb250YWluZXJcIjtcbiAgcmV0dXJuIHsgY2xhc3NOYW1lIH07XG59XG5cbi8vIHNyYy9vYnNlcnZhYmxlcy90cmFjay50c1xuaW1wb3J0IHsgUm9vbUV2ZW50IGFzIFJvb21FdmVudDUsIFRyYWNrRXZlbnQgfSBmcm9tIFwibGl2ZWtpdC1jbGllbnRcIjtcbmltcG9ydCB7IG1hcCBhcyBtYXA3LCBPYnNlcnZhYmxlIGFzIE9ic2VydmFibGU0LCBzdGFydFdpdGggYXMgc3RhcnRXaXRoNSB9IGZyb20gXCJyeGpzXCI7XG5mdW5jdGlvbiB0cmFja09ic2VydmFibGUodHJhY2spIHtcbiAgY29uc3QgdHJhY2tPYnNlcnZlciA9IG9ic2VydmVUcmFja0V2ZW50cyhcbiAgICB0cmFjayxcbiAgICBUcmFja0V2ZW50Lk11dGVkLFxuICAgIFRyYWNrRXZlbnQuVW5tdXRlZCxcbiAgICBUcmFja0V2ZW50LlN1YnNjcmliZWQsXG4gICAgVHJhY2tFdmVudC5VbnN1YnNjcmliZWRcbiAgKTtcbiAgcmV0dXJuIHRyYWNrT2JzZXJ2ZXI7XG59XG5mdW5jdGlvbiBvYnNlcnZlVHJhY2tFdmVudHModHJhY2ssIC4uLmV2ZW50cykge1xuICBjb25zdCBvYnNlcnZhYmxlID0gbmV3IE9ic2VydmFibGU0KChzdWJzY3JpYmUpID0+IHtcbiAgICBjb25zdCBvblRyYWNrVXBkYXRlID0gKCkgPT4ge1xuICAgICAgc3Vic2NyaWJlLm5leHQodHJhY2spO1xuICAgIH07XG4gICAgZXZlbnRzLmZvckVhY2goKGV2dCkgPT4ge1xuICAgICAgdHJhY2sub24oZXZ0LCBvblRyYWNrVXBkYXRlKTtcbiAgICB9KTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgIGV2ZW50cy5mb3JFYWNoKChldnQpID0+IHtcbiAgICAgICAgdHJhY2sub2ZmKGV2dCwgb25UcmFja1VwZGF0ZSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgfSkucGlwZShzdGFydFdpdGg1KHRyYWNrKSk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuZnVuY3Rpb24gZ2V0VHJhY2tSZWZlcmVuY2VzKHJvb20sIHNvdXJjZXMsIG9ubHlTdWJzY3JpYmVkVHJhY2tzID0gdHJ1ZSkge1xuICBjb25zdCBsb2NhbFBhcnRpY2lwYW50ID0gcm9vbS5sb2NhbFBhcnRpY2lwYW50O1xuICBjb25zdCBhbGxQYXJ0aWNpcGFudHMgPSBbbG9jYWxQYXJ0aWNpcGFudCwgLi4uQXJyYXkuZnJvbShyb29tLnBhcnRpY2lwYW50cy52YWx1ZXMoKSldO1xuICBjb25zdCB0cmFja1JlZmVyZW5jZXMgPSBbXTtcbiAgYWxsUGFydGljaXBhbnRzLmZvckVhY2goKHBhcnRpY2lwYW50KSA9PiB7XG4gICAgc291cmNlcy5mb3JFYWNoKChzb3VyY2UpID0+IHtcbiAgICAgIGNvbnN0IHNvdXJjZVJlZmVyZW5jZXMgPSBBcnJheS5mcm9tKFxuICAgICAgICBwYXJ0aWNpcGFudC50cmFja3MudmFsdWVzKClcbiAgICAgICkuZmlsdGVyKFxuICAgICAgICAodHJhY2spID0+IHRyYWNrLnNvdXJjZSA9PT0gc291cmNlICYmIC8vIGVpdGhlciByZXR1cm4gYWxsIG9yIG9ubHkgdGhlIG9uZXMgdGhhdCBhcmUgc3Vic2NyaWJlZFxuICAgICAgICAoIW9ubHlTdWJzY3JpYmVkVHJhY2tzIHx8IHRyYWNrLnRyYWNrKVxuICAgICAgKS5tYXAoKHRyYWNrKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGFydGljaXBhbnQsXG4gICAgICAgICAgcHVibGljYXRpb246IHRyYWNrLFxuICAgICAgICAgIHNvdXJjZTogdHJhY2suc291cmNlXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHRyYWNrUmVmZXJlbmNlcy5wdXNoKC4uLnNvdXJjZVJlZmVyZW5jZXMpO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHsgdHJhY2tSZWZlcmVuY2VzLCBwYXJ0aWNpcGFudHM6IGFsbFBhcnRpY2lwYW50cyB9O1xufVxuZnVuY3Rpb24gdHJhY2tSZWZlcmVuY2VzT2JzZXJ2YWJsZShyb29tLCBzb3VyY2VzLCBvcHRpb25zKSB7XG4gIHZhciBfYSwgX2I7XG4gIGNvbnN0IGFkZGl0aW9uYWxSb29tRXZlbnRzID0gKF9hID0gb3B0aW9ucy5hZGRpdGlvbmFsUm9vbUV2ZW50cykgIT0gbnVsbCA/IF9hIDogYWxsUGFydGljaXBhbnRSb29tRXZlbnRzO1xuICBjb25zdCBvbmx5U3Vic2NyaWJlZFRyYWNrcyA9IChfYiA9IG9wdGlvbnMub25seVN1YnNjcmliZWQpICE9IG51bGwgPyBfYiA6IHRydWU7XG4gIGNvbnN0IHJvb21FdmVudHMgPSBBcnJheS5mcm9tKFxuICAgICgvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gICAgICBSb29tRXZlbnQ1LlBhcnRpY2lwYW50Q29ubmVjdGVkLFxuICAgICAgUm9vbUV2ZW50NS5QYXJ0aWNpcGFudERpc2Nvbm5lY3RlZCxcbiAgICAgIFJvb21FdmVudDUuQ29ubmVjdGlvblN0YXRlQ2hhbmdlZCxcbiAgICAgIFJvb21FdmVudDUuTG9jYWxUcmFja1B1Ymxpc2hlZCxcbiAgICAgIFJvb21FdmVudDUuTG9jYWxUcmFja1VucHVibGlzaGVkLFxuICAgICAgUm9vbUV2ZW50NS5UcmFja1B1Ymxpc2hlZCxcbiAgICAgIFJvb21FdmVudDUuVHJhY2tVbnB1Ymxpc2hlZCxcbiAgICAgIFJvb21FdmVudDUuVHJhY2tTdWJzY3JpcHRpb25TdGF0dXNDaGFuZ2VkLFxuICAgICAgLi4uYWRkaXRpb25hbFJvb21FdmVudHNcbiAgICBdKSkudmFsdWVzKClcbiAgKTtcbiAgY29uc3Qgb2JzZXJ2YWJsZSA9IG9ic2VydmVSb29tRXZlbnRzKHJvb20sIC4uLnJvb21FdmVudHMpLnBpcGUoXG4gICAgbWFwNygocm9vbTIpID0+IHtcbiAgICAgIGNvbnN0IGRhdGEgPSBnZXRUcmFja1JlZmVyZW5jZXMocm9vbTIsIHNvdXJjZXMsIG9ubHlTdWJzY3JpYmVkVHJhY2tzKTtcbiAgICAgIGxvZy5kZWJ1ZyhgVHJhY2tSZWZlcmVuY2VbXSB3YXMgdXBkYXRlZC4gKGxlbmd0aCAke2RhdGEudHJhY2tSZWZlcmVuY2VzLmxlbmd0aH0pYCwgZGF0YSk7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9KSxcbiAgICBzdGFydFdpdGg1KGdldFRyYWNrUmVmZXJlbmNlcyhyb29tLCBzb3VyY2VzLCBvbmx5U3Vic2NyaWJlZFRyYWNrcykpXG4gICk7XG4gIHJldHVybiBvYnNlcnZhYmxlO1xufVxuXG4vLyBzcmMvb2JzZXJ2YWJsZXMvZG9tLWV2ZW50LnRzXG5pbXBvcnQgeyBjb25jYXQgYXMgY29uY2F0MiwgZGlzdGluY3RVbnRpbENoYW5nZWQsIGZyb21FdmVudCwgbWFwIGFzIG1hcDgsIG9mLCBza2lwVW50aWwsIHRpbWVvdXQgfSBmcm9tIFwicnhqc1wiO1xuZnVuY3Rpb24gY3JlYXRlSW50ZXJhY3RpbmdPYnNlcnZhYmxlKGh0bWxFbGVtZW50LCBpbmFjdGl2ZUFmdGVyID0gMWUzKSB7XG4gIGlmIChodG1sRWxlbWVudCA9PT0gbnVsbClcbiAgICByZXR1cm4gb2YoZmFsc2UpO1xuICBjb25zdCBtb3ZlJCA9IGZyb21FdmVudChodG1sRWxlbWVudCwgXCJtb3VzZW1vdmVcIiwgeyBwYXNzaXZlOiB0cnVlIH0pLnBpcGUobWFwOCgoKSA9PiB0cnVlKSk7XG4gIGNvbnN0IG1vdmVBbmRTdG9wJCA9IG1vdmUkLnBpcGUoXG4gICAgdGltZW91dCh7XG4gICAgICBlYWNoOiBpbmFjdGl2ZUFmdGVyLFxuICAgICAgd2l0aDogKCkgPT4gY29uY2F0MihvZihmYWxzZSksIG1vdmVBbmRTdG9wJC5waXBlKHNraXBVbnRpbChtb3ZlJCkpKVxuICAgIH0pLFxuICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKClcbiAgKTtcbiAgcmV0dXJuIG1vdmVBbmRTdG9wJDtcbn1cblxuLy8gc3JjL3BlcnNpc3RlbnQtc3RvcmFnZS9sb2NhbC1zdG9yYWdlLWhlbHBlcnMudHNcbmZ1bmN0aW9uIHNhdmVUb0xvY2FsU3RvcmFnZShrZXksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgbG9nLmVycm9yKFwiTG9jYWwgc3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlLlwiKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nLmVycm9yKGBFcnJvciBzZXR0aW5nIGl0ZW0gdG8gbG9jYWwgc3RvcmFnZTogJHtlcnJvcn1gKTtcbiAgfVxufVxuZnVuY3Rpb24gbG9hZEZyb21Mb2NhbFN0b3JhZ2Uoa2V5KSB7XG4gIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgbG9nLmVycm9yKFwiTG9jYWwgc3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlLlwiKTtcbiAgICByZXR1cm4gdm9pZCAwO1xuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgaXRlbSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgaWYgKCFpdGVtKSB7XG4gICAgICBsb2cud2FybihgSXRlbSB3aXRoIGtleSAke2tleX0gZG9lcyBub3QgZXhpc3QgaW4gbG9jYWwgc3RvcmFnZS5gKTtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKGl0ZW0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZy5lcnJvcihgRXJyb3IgZ2V0dGluZyBpdGVtIGZyb20gbG9jYWwgc3RvcmFnZTogJHtlcnJvcn1gKTtcbiAgICByZXR1cm4gdm9pZCAwO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVMb2NhbFN0b3JhZ2VJbnRlcmZhY2Uoa2V5KSB7XG4gIHJldHVybiB7XG4gICAgbG9hZDogKCkgPT4gbG9hZEZyb21Mb2NhbFN0b3JhZ2Uoa2V5KSxcbiAgICBzYXZlOiAodmFsdWUpID0+IHNhdmVUb0xvY2FsU3RvcmFnZShrZXksIHZhbHVlKVxuICB9O1xufVxuXG4vLyBzcmMvcGVyc2lzdGVudC1zdG9yYWdlL3VzZXItY2hvaWNlcy50c1xudmFyIFVTRVJfQ0hPSUNFU19LRVkgPSBgJHtjc3NQcmVmaXh9LXVzZXItY2hvaWNlc2A7XG52YXIgZGVmYXVsdFVzZXJDaG9pY2VzID0ge1xuICB2aWRlb0VuYWJsZWQ6IHRydWUsXG4gIGF1ZGlvRW5hYmxlZDogdHJ1ZSxcbiAgdmlkZW9EZXZpY2VJZDogXCJcIixcbiAgYXVkaW9EZXZpY2VJZDogXCJcIixcbiAgdXNlcm5hbWU6IFwiXCIsXG4gIGUyZWU6IGZhbHNlLFxuICBzaGFyZWRQYXNzcGhyYXNlOiBcIlwiXG59O1xudmFyIHsgbG9hZCwgc2F2ZSB9ID0gY3JlYXRlTG9jYWxTdG9yYWdlSW50ZXJmYWNlKFVTRVJfQ0hPSUNFU19LRVkpO1xuZnVuY3Rpb24gc2F2ZVVzZXJDaG9pY2VzKHVzZXJDaG9pY2VzLCBwcmV2ZW50U2F2ZSA9IGZhbHNlKSB7XG4gIGlmIChwcmV2ZW50U2F2ZSA9PT0gdHJ1ZSkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBfYSA9IHVzZXJDaG9pY2VzLCB7IGUyZWUsIHNoYXJlZFBhc3NwaHJhc2UgfSA9IF9hLCB0b1NhdmUgPSBfX29ialJlc3QoX2EsIFtcImUyZWVcIiwgXCJzaGFyZWRQYXNzcGhyYXNlXCJdKTtcbiAgc2F2ZSh0b1NhdmUpO1xufVxuZnVuY3Rpb24gbG9hZFVzZXJDaG9pY2VzKGRlZmF1bHRzLCBwcmV2ZW50TG9hZCA9IGZhbHNlKSB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZztcbiAgY29uc3QgZmFsbGJhY2sgPSB7XG4gICAgdmlkZW9FbmFibGVkOiAoX2EgPSBkZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZGVmYXVsdHMudmlkZW9FbmFibGVkKSAhPSBudWxsID8gX2EgOiBkZWZhdWx0VXNlckNob2ljZXMudmlkZW9FbmFibGVkLFxuICAgIGF1ZGlvRW5hYmxlZDogKF9iID0gZGVmYXVsdHMgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRzLmF1ZGlvRW5hYmxlZCkgIT0gbnVsbCA/IF9iIDogZGVmYXVsdFVzZXJDaG9pY2VzLmF1ZGlvRW5hYmxlZCxcbiAgICB2aWRlb0RldmljZUlkOiAoX2MgPSBkZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZGVmYXVsdHMudmlkZW9EZXZpY2VJZCkgIT0gbnVsbCA/IF9jIDogZGVmYXVsdFVzZXJDaG9pY2VzLnZpZGVvRGV2aWNlSWQsXG4gICAgYXVkaW9EZXZpY2VJZDogKF9kID0gZGVmYXVsdHMgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRzLmF1ZGlvRGV2aWNlSWQpICE9IG51bGwgPyBfZCA6IGRlZmF1bHRVc2VyQ2hvaWNlcy5hdWRpb0RldmljZUlkLFxuICAgIHVzZXJuYW1lOiAoX2UgPSBkZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZGVmYXVsdHMudXNlcm5hbWUpICE9IG51bGwgPyBfZSA6IGRlZmF1bHRVc2VyQ2hvaWNlcy51c2VybmFtZSxcbiAgICBlMmVlOiAoX2YgPSBkZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZGVmYXVsdHMuZTJlZSkgIT0gbnVsbCA/IF9mIDogZGVmYXVsdFVzZXJDaG9pY2VzLmUyZWUsXG4gICAgc2hhcmVkUGFzc3BocmFzZTogKF9nID0gZGVmYXVsdHMgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRzLnNoYXJlZFBhc3NwaHJhc2UpICE9IG51bGwgPyBfZyA6IGRlZmF1bHRVc2VyQ2hvaWNlcy5zaGFyZWRQYXNzcGhyYXNlXG4gIH07XG4gIGlmIChwcmV2ZW50TG9hZCkge1xuICAgIHJldHVybiBmYWxsYmFjaztcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBtYXliZUxvYWRlZE9iamVjdCA9IGxvYWQoKTtcbiAgICBjb25zdCByZXN1bHQgPSBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgZmFsbGJhY2spLCBtYXliZUxvYWRlZE9iamVjdCAhPSBudWxsID8gbWF5YmVMb2FkZWRPYmplY3QgOiB7fSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuZXhwb3J0IHtcbiAgRGF0YVRvcGljLFxuICBHUklEX0xBWU9VVFMsXG4gIFBJTl9ERUZBVUxUX1NUQVRFLFxuICBXSURHRVRfREVGQVVMVF9TVEFURSxcbiAgYWN0aXZlU3BlYWtlck9ic2VydmVyLFxuICBhbGxQYXJ0aWNpcGFudEV2ZW50cyxcbiAgYWxsUGFydGljaXBhbnRSb29tRXZlbnRzLFxuICBhbGxSZW1vdGVQYXJ0aWNpcGFudEV2ZW50cyxcbiAgYWxsUmVtb3RlUGFydGljaXBhbnRSb29tRXZlbnRzLFxuICBhdHRhY2hJZlN1YnNjcmliZWQsXG4gIGNvbXB1dGVNZW51UG9zaXRpb24sXG4gIGNvbm5lY3RlZFBhcnRpY2lwYW50T2JzZXJ2ZXIsXG4gIGNvbm5lY3RlZFBhcnRpY2lwYW50c09ic2VydmVyLFxuICBjb25uZWN0aW9uU3RhdGVPYnNlcnZlcixcbiAgY3JlYXRlQWN0aXZlRGV2aWNlT2JzZXJ2YWJsZSxcbiAgY3JlYXRlQ29ubmVjdGlvblF1YWxpdHlPYnNlcnZlcixcbiAgY3JlYXRlRGF0YU9ic2VydmVyLFxuICBjcmVhdGVEZWZhdWx0R3JhbW1hcixcbiAgY3JlYXRlRW1haWxSZWdFeHAsXG4gIGNyZWF0ZUludGVyYWN0aW5nT2JzZXJ2YWJsZSxcbiAgY3JlYXRlSXNTcGVha2luZ09ic2VydmVyLFxuICBjcmVhdGVNZWRpYURldmljZU9ic2VydmVyLFxuICBjcmVhdGVUcmFja09ic2VydmVyLFxuICBjcmVhdGVVcmxSZWdFeHAsXG4gIGNzc1ByZWZpeCxcbiAgZW5jcnlwdGlvblN0YXR1c09ic2VydmFibGUsXG4gIGdldFNjcm9sbEJhcldpZHRoLFxuICBnZXRUcmFja0J5SWRlbnRpZmllcixcbiAgZ2V0VHJhY2tSZWZlcmVuY2VJZCxcbiAgZ2V0VHJhY2tSZWZlcmVuY2VTb3VyY2UsXG4gIGlzRXF1YWxUcmFja1JlZixcbiAgaXNMb2NhbCxcbiAgaXNNb2JpbGVCcm93c2VyLFxuICBpc1BhcnRpY2lwYW50U291cmNlUGlubmVkLFxuICBpc1BhcnRpY2lwYW50VHJhY2tSZWZlcmVuY2VQaW5uZWQsXG4gIGlzUGxhY2Vob2xkZXJSZXBsYWNlbWVudCxcbiAgaXNSZW1vdGUsXG4gIGlzU291cmNlV2l0T3B0aW9ucyxcbiAgaXNTb3VyY2VzV2l0aE9wdGlvbnMsXG4gIGlzVHJhY2tSZWZlcmVuY2UsXG4gIGlzVHJhY2tSZWZlcmVuY2VQaW5uZWQsXG4gIGlzVHJhY2tSZWZlcmVuY2VQbGFjZWhvbGRlcixcbiAgaXNXZWIsXG4gIGxvYWRVc2VyQ2hvaWNlcyxcbiAgbG9nLFxuICBtdXRlZE9ic2VydmVyLFxuICBvYnNlcnZlUGFydGljaXBhbnRFdmVudHMsXG4gIG9ic2VydmVQYXJ0aWNpcGFudE1lZGlhLFxuICBvYnNlcnZlUm9vbUV2ZW50cyxcbiAgb2JzZXJ2ZVRyYWNrRXZlbnRzLFxuICBwYXJ0aWNpcGFudEV2ZW50U2VsZWN0b3IsXG4gIHBhcnRpY2lwYW50SW5mb09ic2VydmVyLFxuICBwYXJ0aWNpcGFudFBlcm1pc3Npb25PYnNlcnZlcixcbiAgcm9vbUF1ZGlvUGxheWJhY2tBbGxvd2VkT2JzZXJ2YWJsZSxcbiAgcm9vbUV2ZW50U2VsZWN0b3IsXG4gIHJvb21JbmZvT2JzZXJ2ZXIsXG4gIHJvb21PYnNlcnZlcixcbiAgcm9vbVZpZGVvUGxheWJhY2tBbGxvd2VkT2JzZXJ2YWJsZSxcbiAgc2F2ZVVzZXJDaG9pY2VzLFxuICBzY3JlZW5TaGFyZU9ic2VydmVyLFxuICBzZWxlY3RHcmlkTGF5b3V0LFxuICBzZW5kTWVzc2FnZSxcbiAgc2V0RGlmZmVyZW5jZSxcbiAgc2V0TG9nTGV2ZWwsXG4gIHNldHVwQ2hhdCxcbiAgc2V0dXBDaGF0VG9nZ2xlLFxuICBzZXR1cENsZWFyUGluQnV0dG9uLFxuICBzZXR1cENvbm5lY3Rpb25RdWFsaXR5SW5kaWNhdG9yLFxuICBzZXR1cERhdGFNZXNzYWdlSGFuZGxlcixcbiAgc2V0dXBEZXZpY2VTZWxlY3RvcixcbiAgc2V0dXBEaXNjb25uZWN0QnV0dG9uLFxuICBzZXR1cEZvY3VzVG9nZ2xlLFxuICBzZXR1cExpdmVLaXRSb29tLFxuICBzZXR1cE1hbnVhbFRvZ2dsZSxcbiAgc2V0dXBNZWRpYVRvZ2dsZSxcbiAgc2V0dXBNZWRpYVRyYWNrLFxuICBzZXR1cFBhcnRpY2lwYW50TmFtZSxcbiAgc2V0dXBQYXJ0aWNpcGFudFRpbGUsXG4gIHNldHVwU3RhcnRBdWRpbyxcbiAgc2V0dXBTdGFydFZpZGVvLFxuICBzZXR1cFRyYWNrTXV0ZWRJbmRpY2F0b3IsXG4gIHNvcnRQYXJ0aWNpcGFudHMsXG4gIHNvcnRUcmFja1JlZmVyZW5jZXMsXG4gIHN1cHBvcnRzU2NyZWVuU2hhcmluZyxcbiAgdG9rZW5pemUsXG4gIHRyYWNrT2JzZXJ2YWJsZSxcbiAgdHJhY2tSZWZlcmVuY2VzT2JzZXJ2YWJsZSxcbiAgdXBkYXRlUGFnZXMsXG4gIHdhc0NsaWNrT3V0c2lkZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-react/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@livekit/components-react/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioConference: () => (/* binding */ AudioConference),\n/* harmony export */   AudioTrack: () => (/* binding */ AudioTrack),\n/* harmony export */   AudioVisualizer: () => (/* binding */ AudioVisualizer),\n/* harmony export */   CameraDisabledIcon: () => (/* binding */ CameraDisabledIcon_default),\n/* harmony export */   CameraIcon: () => (/* binding */ CameraIcon_default),\n/* harmony export */   CarouselLayout: () => (/* binding */ CarouselLayout),\n/* harmony export */   CarouselView: () => (/* binding */ CarouselView),\n/* harmony export */   Chat: () => (/* binding */ Chat),\n/* harmony export */   ChatEntry: () => (/* binding */ ChatEntry),\n/* harmony export */   ChatIcon: () => (/* binding */ ChatIcon_default),\n/* harmony export */   ChatToggle: () => (/* binding */ ChatToggle),\n/* harmony export */   Chevron: () => (/* binding */ Chevron_default),\n/* harmony export */   ClearPinButton: () => (/* binding */ ClearPinButton),\n/* harmony export */   ConnectionQualityIndicator: () => (/* binding */ ConnectionQualityIndicator),\n/* harmony export */   ConnectionState: () => (/* binding */ ConnectionState3),\n/* harmony export */   ConnectionStateToast: () => (/* binding */ ConnectionStateToast),\n/* harmony export */   ControlBar: () => (/* binding */ ControlBar),\n/* harmony export */   DisconnectButton: () => (/* binding */ DisconnectButton),\n/* harmony export */   FocusLayout: () => (/* binding */ FocusLayout),\n/* harmony export */   FocusLayoutContainer: () => (/* binding */ FocusLayoutContainer),\n/* harmony export */   FocusToggle: () => (/* binding */ FocusToggle),\n/* harmony export */   FocusToggleIcon: () => (/* binding */ FocusToggleIcon_default),\n/* harmony export */   GearIcon: () => (/* binding */ GearIcon_default),\n/* harmony export */   GridLayout: () => (/* binding */ GridLayout),\n/* harmony export */   LKFeatureContext: () => (/* binding */ LKFeatureContext),\n/* harmony export */   LayoutContext: () => (/* binding */ LayoutContext),\n/* harmony export */   LayoutContextProvider: () => (/* binding */ LayoutContextProvider),\n/* harmony export */   LeaveIcon: () => (/* binding */ LeaveIcon_default),\n/* harmony export */   LiveKitRoom: () => (/* binding */ LiveKitRoom),\n/* harmony export */   LockLockedIcon: () => (/* binding */ LockLockedIcon_default),\n/* harmony export */   MediaDeviceMenu: () => (/* binding */ MediaDeviceMenu),\n/* harmony export */   MediaDeviceSelect: () => (/* binding */ MediaDeviceSelect),\n/* harmony export */   MicDisabledIcon: () => (/* binding */ MicDisabledIcon_default),\n/* harmony export */   MicIcon: () => (/* binding */ MicIcon_default),\n/* harmony export */   ParticipantAudioTile: () => (/* binding */ ParticipantAudioTile),\n/* harmony export */   ParticipantContext: () => (/* binding */ ParticipantContext),\n/* harmony export */   ParticipantContextIfNeeded: () => (/* binding */ ParticipantContextIfNeeded),\n/* harmony export */   ParticipantLoop: () => (/* binding */ ParticipantLoop),\n/* harmony export */   ParticipantName: () => (/* binding */ ParticipantName),\n/* harmony export */   ParticipantPlaceholder: () => (/* binding */ ParticipantPlaceholder_default),\n/* harmony export */   ParticipantTile: () => (/* binding */ ParticipantTile),\n/* harmony export */   PreJoin: () => (/* binding */ PreJoin),\n/* harmony export */   QualityExcellentIcon: () => (/* binding */ QualityExcellentIcon_default),\n/* harmony export */   QualityGoodIcon: () => (/* binding */ QualityGoodIcon_default),\n/* harmony export */   QualityPoorIcon: () => (/* binding */ QualityPoorIcon_default),\n/* harmony export */   QualityUnknownIcon: () => (/* binding */ QualityUnknownIcon_default),\n/* harmony export */   RoomAudioRenderer: () => (/* binding */ RoomAudioRenderer),\n/* harmony export */   RoomContext: () => (/* binding */ RoomContext),\n/* harmony export */   RoomName: () => (/* binding */ RoomName),\n/* harmony export */   ScreenShareIcon: () => (/* binding */ ScreenShareIcon_default),\n/* harmony export */   ScreenShareStopIcon: () => (/* binding */ ScreenShareStopIcon_default),\n/* harmony export */   SpinnerIcon: () => (/* binding */ SpinnerIcon_default),\n/* harmony export */   StartAudio: () => (/* binding */ StartAudio),\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   TrackContext: () => (/* binding */ TrackContext),\n/* harmony export */   TrackLoop: () => (/* binding */ TrackLoop),\n/* harmony export */   TrackMutedIndicator: () => (/* binding */ TrackMutedIndicator),\n/* harmony export */   TrackRefContext: () => (/* binding */ TrackRefContext),\n/* harmony export */   TrackToggle: () => (/* binding */ TrackToggle),\n/* harmony export */   UnfocusToggleIcon: () => (/* binding */ UnfocusToggleIcon_default),\n/* harmony export */   VideoConference: () => (/* binding */ VideoConference),\n/* harmony export */   VideoTrack: () => (/* binding */ VideoTrack),\n/* harmony export */   formatChatMessageLinks: () => (/* binding */ formatChatMessageLinks),\n/* harmony export */   isTrackReference: () => (/* reexport safe */ _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReference),\n/* harmony export */   setLogLevel: () => (/* reexport safe */ _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setLogLevel),\n/* harmony export */   useAudioPlayback: () => (/* binding */ useAudioPlayback),\n/* harmony export */   useChat: () => (/* binding */ useChat),\n/* harmony export */   useChatToggle: () => (/* binding */ useChatToggle),\n/* harmony export */   useClearPinButton: () => (/* binding */ useClearPinButton),\n/* harmony export */   useConnectionQualityIndicator: () => (/* binding */ useConnectionQualityIndicator),\n/* harmony export */   useConnectionState: () => (/* binding */ useConnectionState),\n/* harmony export */   useCreateLayoutContext: () => (/* binding */ useCreateLayoutContext),\n/* harmony export */   useDataChannel: () => (/* binding */ useDataChannel),\n/* harmony export */   useDisconnectButton: () => (/* binding */ useDisconnectButton),\n/* harmony export */   useEnsureCreateLayoutContext: () => (/* binding */ useEnsureCreateLayoutContext),\n/* harmony export */   useEnsureLayoutContext: () => (/* binding */ useEnsureLayoutContext),\n/* harmony export */   useEnsureParticipant: () => (/* binding */ useEnsureParticipant),\n/* harmony export */   useEnsureRoom: () => (/* binding */ useEnsureRoom),\n/* harmony export */   useEnsureTrackRef: () => (/* binding */ useEnsureTrackRef),\n/* harmony export */   useEnsureTrackReference: () => (/* binding */ useEnsureTrackReference),\n/* harmony export */   useFacingMode: () => (/* binding */ useFacingMode),\n/* harmony export */   useFeatureContext: () => (/* binding */ useFeatureContext),\n/* harmony export */   useFocusToggle: () => (/* binding */ useFocusToggle),\n/* harmony export */   useGridLayout: () => (/* binding */ useGridLayout),\n/* harmony export */   useIsEncrypted: () => (/* binding */ useIsEncrypted),\n/* harmony export */   useIsMuted: () => (/* binding */ useIsMuted),\n/* harmony export */   useIsSpeaking: () => (/* binding */ useIsSpeaking),\n/* harmony export */   useLayoutContext: () => (/* binding */ useLayoutContext),\n/* harmony export */   useLiveKitRoom: () => (/* binding */ useLiveKitRoom),\n/* harmony export */   useLocalParticipant: () => (/* binding */ useLocalParticipant),\n/* harmony export */   useLocalParticipantPermissions: () => (/* binding */ useLocalParticipantPermissions),\n/* harmony export */   useMaybeLayoutContext: () => (/* binding */ useMaybeLayoutContext),\n/* harmony export */   useMaybeParticipantContext: () => (/* binding */ useMaybeParticipantContext),\n/* harmony export */   useMaybeRoomContext: () => (/* binding */ useMaybeRoomContext),\n/* harmony export */   useMaybeTrackContext: () => (/* binding */ useMaybeTrackContext),\n/* harmony export */   useMaybeTrackRefContext: () => (/* binding */ useMaybeTrackRefContext),\n/* harmony export */   useMediaDeviceSelect: () => (/* binding */ useMediaDeviceSelect),\n/* harmony export */   useMediaDevices: () => (/* binding */ useMediaDevices),\n/* harmony export */   useMediaTrack: () => (/* binding */ useMediaTrack),\n/* harmony export */   useMediaTrackByName: () => (/* binding */ useMediaTrackByName),\n/* harmony export */   usePagination: () => (/* binding */ usePagination),\n/* harmony export */   useParticipantContext: () => (/* binding */ useParticipantContext),\n/* harmony export */   useParticipantInfo: () => (/* binding */ useParticipantInfo),\n/* harmony export */   useParticipantPermissions: () => (/* binding */ useParticipantPermissions),\n/* harmony export */   useParticipantTile: () => (/* binding */ useParticipantTile),\n/* harmony export */   useParticipants: () => (/* binding */ useParticipants),\n/* harmony export */   usePersistentUserChoices: () => (/* binding */ usePersistentUserChoices),\n/* harmony export */   usePinnedTracks: () => (/* binding */ usePinnedTracks),\n/* harmony export */   usePreviewDevice: () => (/* binding */ usePreviewDevice),\n/* harmony export */   usePreviewTracks: () => (/* binding */ usePreviewTracks),\n/* harmony export */   useRemoteParticipant: () => (/* binding */ useRemoteParticipant),\n/* harmony export */   useRemoteParticipants: () => (/* binding */ useRemoteParticipants),\n/* harmony export */   useRoomContext: () => (/* binding */ useRoomContext),\n/* harmony export */   useRoomInfo: () => (/* binding */ useRoomInfo),\n/* harmony export */   useSortedParticipants: () => (/* binding */ useSortedParticipants),\n/* harmony export */   useSpeakingParticipants: () => (/* binding */ useSpeakingParticipants),\n/* harmony export */   useStartAudio: () => (/* binding */ useStartAudio),\n/* harmony export */   useStartVideo: () => (/* binding */ useStartVideo),\n/* harmony export */   useSwipe: () => (/* binding */ useSwipe),\n/* harmony export */   useToken: () => (/* binding */ useToken),\n/* harmony export */   useTrack: () => (/* binding */ useTrack),\n/* harmony export */   useTrackByName: () => (/* binding */ useTrackByName),\n/* harmony export */   useTrackContext: () => (/* binding */ useTrackContext),\n/* harmony export */   useTrackMutedIndicator: () => (/* binding */ useTrackMutedIndicator),\n/* harmony export */   useTrackRefContext: () => (/* binding */ useTrackRefContext),\n/* harmony export */   useTrackToggle: () => (/* binding */ useTrackToggle),\n/* harmony export */   useTracks: () => (/* binding */ useTracks),\n/* harmony export */   useVisualStableUpdate: () => (/* binding */ useVisualStableUpdate)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_hook_latest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-hook/latest */ \"(ssr)/./node_modules/@react-hook/latest/dist/esm/index.mjs\");\n/* harmony import */ var _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @livekit/components-core */ \"(ssr)/./node_modules/@livekit/components-core/dist/index.mjs\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n/* harmony import */ var usehooks_ts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! usehooks-ts */ \"(ssr)/./node_modules/usehooks-ts/dist/cjs/index.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/components/controls/ClearPinButton.tsx\n\n\n// src/hooks/useAudioPlayback.ts\n\n\n// src/hooks/internal/useResizeObserver.ts\n\n\nfunction useResizeObserver(target, callback) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = (0,_react_hook_latest__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(callback);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n    const targetEl = target.current;\n    if (!targetEl)\n      return;\n    function cb(entry, observer) {\n      if (didUnsubscribe)\n        return;\n      storedCallback.current(entry, observer);\n    }\n    resizeObserver == null ? void 0 : resizeObserver.subscribe(targetEl, cb);\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver == null ? void 0 : resizeObserver.unsubscribe(targetEl, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n  return resizeObserver == null ? void 0 : resizeObserver.observer;\n}\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries = [];\n  const callbacks = /* @__PURE__ */ new Map();\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  const observer = new ResizeObserver((entries, obs) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = /* @__PURE__ */ new Set();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target))\n            continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs == null ? void 0 : cbs.forEach((cb) => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n  return {\n    observer,\n    subscribe(target, callback) {\n      var _a;\n      observer.observe(target);\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target, callback) {\n      var _a;\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1)\n        cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    }\n  };\n}\nvar _resizeObserver;\nvar getResizeObserver = () => !_resizeObserver ? _resizeObserver = createResizeObserver() : _resizeObserver;\nvar useSize = (target) => {\n  const [size, setSize] = react__WEBPACK_IMPORTED_MODULE_0__.useState({ width: 0, height: 0 });\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    if (target.current) {\n      const { width, height } = target.current.getBoundingClientRect();\n      setSize({ width, height });\n    }\n  }, [target.current]);\n  const resizeCallback = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (entry) => setSize(entry.contentRect),\n    []\n  );\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n\n// src/hooks/internal/useObservableState.ts\n\nfunction useObservableState(observable, startWith) {\n  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(startWith);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (typeof window === \"undefined\" || !observable)\n      return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable]);\n  return state;\n}\n\n// src/hooks/internal/useMediaQuery.ts\n\nfunction useMediaQuery(query) {\n  const getMatches = (query2) => {\n    if (typeof window !== \"undefined\") {\n      return window.matchMedia(query2).matches;\n    }\n    return false;\n  };\n  const [matches, setMatches] = react__WEBPACK_IMPORTED_MODULE_0__.useState(getMatches(query));\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener(\"change\", handleChange);\n    }\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\n\n// src/hooks/useAudioPlayback.ts\n\n\n// src/context/layout-context.ts\n\n\n\n// src/context/chat-context.ts\nfunction chatReducer(state, action) {\n  if (action.msg === \"show_chat\") {\n    return __spreadProps(__spreadValues({}, state), { showChat: true, unreadMessages: 0 });\n  } else if (action.msg === \"hide_chat\") {\n    return __spreadProps(__spreadValues({}, state), { showChat: false });\n  } else if (action.msg === \"toggle_chat\") {\n    const newState = __spreadProps(__spreadValues({}, state), { showChat: !state.showChat });\n    if (newState.showChat === true) {\n      newState.unreadMessages = 0;\n    }\n    return newState;\n  } else if (action.msg === \"unread_msg\") {\n    return __spreadProps(__spreadValues({}, state), { unreadMessages: action.count });\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/pin-context.ts\nfunction pinReducer(state, action) {\n  if (action.msg === \"set_pin\") {\n    return [action.trackReference];\n  } else if (action.msg === \"clear_pin\") {\n    return [];\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/layout-context.ts\nvar LayoutContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nfunction useLayoutContext() {\n  const layoutContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useEnsureLayoutContext(layoutContext) {\n  const layout = useMaybeLayoutContext();\n  layoutContext != null ? layoutContext : layoutContext = layout;\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useCreateLayoutContext() {\n  const [pinState, pinDispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(pinReducer, _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(chatReducer, _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.WIDGET_DEFAULT_STATE);\n  return {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState }\n  };\n}\nfunction useEnsureCreateLayoutContext(layoutContext) {\n  const [pinState, pinDispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(pinReducer, _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(chatReducer, _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.WIDGET_DEFAULT_STATE);\n  return layoutContext != null ? layoutContext : {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState }\n  };\n}\nfunction useMaybeLayoutContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LayoutContext);\n}\n\n// src/context/participant-context.ts\n\n\n// src/context/track-reference-context.ts\n\nvar TrackRefContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(\n  void 0\n);\nvar TrackContext = TrackRefContext;\nfunction useTrackContext() {\n  return useTrackRefContext();\n}\nfunction useTrackRefContext() {\n  const trackReference = react__WEBPACK_IMPORTED_MODULE_0__.useContext(TrackRefContext);\n  if (!trackReference) {\n    throw Error(\"tried to access track context outside of track context provider\");\n  }\n  return trackReference;\n}\nfunction useMaybeTrackContext() {\n  return useMaybeTrackRefContext();\n}\nfunction useMaybeTrackRefContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(TrackRefContext);\n}\nfunction useEnsureTrackReference(track) {\n  return useEnsureTrackRef(track);\n}\nfunction useEnsureTrackRef(trackRef) {\n  const context = useMaybeTrackRefContext();\n  const ref = trackRef != null ? trackRef : context;\n  if (!ref) {\n    throw new Error(\n      \"No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly\"\n    );\n  }\n  return ref;\n}\n\n// src/context/participant-context.ts\nvar ParticipantContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nfunction useParticipantContext() {\n  const participant = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error(\"tried to access participant context outside of participant context provider\");\n  }\n  return participant;\n}\nfunction useMaybeParticipantContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ParticipantContext);\n}\nfunction useEnsureParticipant(participant) {\n  var _a;\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackRefContext();\n  const p = (_a = participant != null ? participant : context) != null ? _a : trackContext == null ? void 0 : trackContext.participant;\n  if (!p) {\n    throw new Error(\n      \"No participant provided, make sure you are inside a participant context or pass the participant explicitly\"\n    );\n  }\n  return p;\n}\n\n// src/context/room-context.ts\n\nvar RoomContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nfunction useRoomContext() {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RoomContext);\n  if (!ctx) {\n    throw Error(\"tried to access room context outside of livekit room component\");\n  }\n  return ctx;\n}\nfunction useMaybeRoomContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(RoomContext);\n}\nfunction useEnsureRoom(room) {\n  const context = useMaybeRoomContext();\n  const r = room != null ? room : context;\n  if (!r) {\n    throw new Error(\n      \"No room provided, make sure you are inside a Room context or pass the room explicitly\"\n    );\n  }\n  return r;\n}\n\n// src/context/feature-context.ts\n\nvar LKFeatureContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nfunction useFeatureContext(require2) {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(LKFeatureContext);\n  if (require2 === true) {\n    if (ctx) {\n      return ctx;\n    } else {\n      throw Error(\"tried to access feature context, but none is present\");\n    }\n  }\n  return ctx;\n}\n\n// src/hooks/useAudioPlayback.ts\nfunction useAudioPlayback(room) {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => __async(this, null, function* () {\n    yield roomEnsured.startAudio();\n  }), [roomEnsured]);\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.roomAudioPlaybackAllowedObservable)(roomEnsured),\n    [roomEnsured]\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  return { canPlayAudio, startAudio };\n}\n\n// src/hooks/useClearPinButton.ts\n\n\n\n// src/mergeProps.ts\n\nfunction chain(...callbacks) {\n  return (...args) => {\n    for (const callback of callbacks) {\n      if (typeof callback === \"function\") {\n        callback(...args);\n      }\n    }\n  };\n}\nfunction mergeProps(...args) {\n  const result = __spreadValues({}, args[0]);\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n      if (typeof a === \"function\" && typeof b === \"function\" && // This is a lot faster than a regex.\n      key[0] === \"o\" && key[1] === \"n\" && key.charCodeAt(2) >= /* 'A' */\n      65 && key.charCodeAt(2) <= /* 'Z' */\n      90) {\n        result[key] = chain(a, b);\n      } else if ((key === \"className\" || key === \"UNSAFE_className\") && typeof a === \"string\" && typeof b === \"string\") {\n        result[key] = (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(a, b);\n      } else {\n        result[key] = b !== void 0 ? b : a;\n      }\n    }\n  }\n  return result;\n}\n\n// src/hooks/useClearPinButton.ts\nfunction useClearPinButton(props) {\n  const { state, dispatch } = useLayoutContext().pin;\n  const buttonProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const { className } = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupClearPinButton)();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !(state == null ? void 0 : state.length),\n      onClick: () => {\n        if (dispatch)\n          dispatch({ msg: \"clear_pin\" });\n      }\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n  return { buttonProps };\n}\n\n// src/hooks/useConnectionQualityIndicator.ts\n\n\n\nfunction useConnectionQualityIndicator(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const { className, connectionQualityObserver } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupConnectionQualityIndicator)(p),\n    [p]\n  );\n  const quality = useObservableState(connectionQualityObserver, livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionQuality.Unknown);\n  return { className, quality };\n}\n\n// src/hooks/useConnectionStatus.ts\n\n\nfunction useConnectionState(room) {\n  const r = useEnsureRoom(room);\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.connectionStateObserver)(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n\n// src/hooks/useDataChannel.ts\n\n\nfunction useDataChannel(topicOrCallback, callback) {\n  const onMessage = typeof topicOrCallback === \"function\" ? topicOrCallback : callback;\n  const topic = typeof topicOrCallback === \"string\" ? topicOrCallback : void 0;\n  const room = useRoomContext();\n  const { send, messageObservable, isSendingObservable } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupDataMessageHandler)(room, topic, onMessage),\n    [room, topic, onMessage]\n  );\n  const message = useObservableState(messageObservable, void 0);\n  const isSending = useObservableState(isSendingObservable, false);\n  return {\n    message,\n    send,\n    isSending\n  };\n}\n\n// src/hooks/useDisconnectButton.ts\n\n\n\nfunction useDisconnectButton(props) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const buttonProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const { className, disconnect } = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupDisconnectButton)(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => {\n        var _a;\n        return disconnect((_a = props.stopTracks) != null ? _a : true);\n      },\n      disabled: connectionState === livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Disconnected\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n  return { buttonProps };\n}\n\n// src/hooks/useFacingMode.ts\n\nfunction useFacingMode(trackReference) {\n  if (trackReference.publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.LocalTrackPublication) {\n    const localTrack = trackReference.publication.track;\n    if (localTrack) {\n      const { facingMode } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.facingModeFromLocalTrack)(localTrack);\n      return facingMode;\n    }\n  }\n  return \"undefined\";\n}\n\n// src/hooks/useFocusToggle.ts\n\n\nfunction useFocusToggle({ trackRef, trackSource, participant, props }) {\n  const p = useEnsureParticipant(participant);\n  if (!trackRef && !trackSource) {\n    throw new Error(\"trackRef or trackSource must be defined.\");\n  }\n  const layoutContext = useMaybeLayoutContext();\n  const { className } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupFocusToggle)(), []);\n  const inFocus = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    if (trackRef) {\n      return (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReferencePinned)(trackRef, layoutContext == null ? void 0 : layoutContext.pin.state);\n    } else if (trackSource) {\n      const track = p.getTrack(trackSource);\n      if ((layoutContext == null ? void 0 : layoutContext.pin.state) && track) {\n        return (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReferencePinned)(\n          { participant: p, source: trackSource, publication: track },\n          layoutContext.pin.state\n        );\n      } else {\n        return false;\n      }\n    } else {\n      throw new Error(\"trackRef or trackSource and participant must be defined.\");\n    }\n  }, [trackRef, layoutContext == null ? void 0 : layoutContext.pin.state, p, trackSource]);\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: (event) => {\n        var _a, _b, _c, _d, _e;\n        (_a = props.onClick) == null ? void 0 : _a.call(props, event);\n        if (trackRef) {\n          if (inFocus) {\n            (_c = layoutContext == null ? void 0 : (_b = layoutContext.pin).dispatch) == null ? void 0 : _c.call(_b, {\n              msg: \"clear_pin\"\n            });\n          } else {\n            (_e = layoutContext == null ? void 0 : (_d = layoutContext.pin).dispatch) == null ? void 0 : _e.call(_d, {\n              msg: \"set_pin\",\n              trackReference: trackRef\n            });\n          }\n        } else if (trackSource) {\n          const track = p.getTrack(trackSource);\n          if ((layoutContext == null ? void 0 : layoutContext.pin.dispatch) && track) {\n            if (inFocus) {\n              layoutContext.pin.dispatch({\n                msg: \"clear_pin\"\n              });\n            } else {\n              layoutContext.pin.dispatch({\n                msg: \"set_pin\",\n                trackReference: {\n                  participant: p,\n                  publication: track,\n                  source: track.source\n                }\n              });\n            }\n          }\n        }\n      }\n    }),\n    [props, className, trackRef, trackSource, inFocus, layoutContext == null ? void 0 : layoutContext.pin, p]\n  );\n  return { mergedProps, inFocus };\n}\n\n// src/hooks/useGridLayout.ts\n\n\nfunction useGridLayout(gridElement, trackCount) {\n  const { width, height } = useSize(gridElement);\n  const layout = width > 0 && height > 0 ? (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.selectGridLayout)(_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.GRID_LAYOUTS, trackCount, width, height) : _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.GRID_LAYOUTS[0];\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty(\"--lk-col-count\", layout == null ? void 0 : layout.columns.toString());\n      gridElement.current.style.setProperty(\"--lk-row-count\", layout == null ? void 0 : layout.rows.toString());\n    }\n  }, [gridElement, layout]);\n  return {\n    layout\n  };\n}\n\n// src/hooks/useIsMuted.ts\n\n\nfunction useIsMuted(sourceOrTrackRef, options = {}) {\n  var _a, _b;\n  const passedParticipant = typeof sourceOrTrackRef === \"string\" ? options.participant : sourceOrTrackRef.participant;\n  const p = useEnsureParticipant(passedParticipant);\n  const ref = typeof sourceOrTrackRef === \"string\" ? { participant: p, source: sourceOrTrackRef } : sourceOrTrackRef;\n  const [isMuted, setIsMuted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    !!(((_a = ref.publication) == null ? void 0 : _a.isMuted) || ((_b = p.getTrack(ref.source)) == null ? void 0 : _b.isMuted))\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const listener = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.mutedObserver)(ref).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [(0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getTrackReferenceId)(ref)]);\n  return isMuted;\n}\n\n// src/hooks/useIsSpeaking.ts\n\n\nfunction useIsSpeaking(participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.createIsSpeakingObserver)(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n  return isSpeaking;\n}\n\n// src/hooks/useLiveKitRoom.ts\n\n\n\nvar defaultRoomProps = {\n  connect: true,\n  audio: false,\n  video: false\n};\nfunction useLiveKitRoom(props) {\n  const _a = __spreadValues(__spreadValues({}, defaultRoomProps), props), {\n    token,\n    serverUrl,\n    options,\n    room: passedRoom,\n    connectOptions,\n    connect,\n    audio,\n    video,\n    screen,\n    onConnected,\n    onDisconnected,\n    onError,\n    onMediaDeviceFailure,\n    onEncryptionError,\n    simulateParticipants\n  } = _a, rest = __objRest(_a, [\n    \"token\",\n    \"serverUrl\",\n    \"options\",\n    \"room\",\n    \"connectOptions\",\n    \"connect\",\n    \"audio\",\n    \"video\",\n    \"screen\",\n    \"onConnected\",\n    \"onDisconnected\",\n    \"onError\",\n    \"onMediaDeviceFailure\",\n    \"onEncryptionError\",\n    \"simulateParticipants\"\n  ]);\n  if (options && passedRoom) {\n    _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\n      \"when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.\"\n    );\n  }\n  const [room, setRoom] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setRoom(passedRoom != null ? passedRoom : new livekit_client__WEBPACK_IMPORTED_MODULE_4__.Room(options));\n  }, [passedRoom]);\n  const htmlProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const { className } = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupLiveKitRoom)();\n    return mergeProps(rest, { className });\n  }, [rest]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!room)\n      return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"trying to publish local tracks\");\n      Promise.all([\n        localP.setMicrophoneEnabled(!!audio, typeof audio !== \"boolean\" ? audio : void 0),\n        localP.setCameraEnabled(!!video, typeof video !== \"boolean\" ? video : void 0),\n        localP.setScreenShareEnabled(!!screen, typeof screen !== \"boolean\" ? screen : void 0)\n      ]).catch((e) => {\n        _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    };\n    const handleMediaDeviceError = (e) => {\n      const mediaDeviceFailure = livekit_client__WEBPACK_IMPORTED_MODULE_4__.MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure == null ? void 0 : onMediaDeviceFailure(mediaDeviceFailure);\n    };\n    const handleEncryptionError = (e) => {\n      onEncryptionError == null ? void 0 : onEncryptionError(e);\n    };\n    room.on(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.SignalConnected, onSignalConnected).on(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.MediaDevicesError, handleMediaDeviceError).on(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.EncryptionError, handleEncryptionError);\n    return () => {\n      room.off(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.SignalConnected, onSignalConnected).off(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.MediaDevicesError, handleMediaDeviceError).off(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.EncryptionError, handleEncryptionError);\n    };\n  }, [room, audio, video, screen, onError, onEncryptionError, onMediaDeviceFailure]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!room)\n      return;\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true\n        }\n      });\n      return;\n    }\n    if (!token) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"no token yet\");\n      return;\n    }\n    if (!serverUrl) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\"no livekit url provided\");\n      onError == null ? void 0 : onError(Error(\"no livekit url provided\"));\n      return;\n    }\n    if (connect) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"connecting\");\n      room.connect(serverUrl, token, connectOptions).catch((e) => {\n        _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    } else {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"disconnecting because connect is false\");\n      room.disconnect();\n    }\n  }, [\n    connect,\n    token,\n    JSON.stringify(connectOptions),\n    room,\n    onError,\n    serverUrl,\n    simulateParticipants\n  ]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!room)\n      return;\n    const connectionStateChangeListener = (state) => {\n      switch (state) {\n        case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Disconnected:\n          if (onDisconnected)\n            onDisconnected();\n          break;\n        case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Connected:\n          if (onConnected)\n            onConnected();\n          break;\n        default:\n          break;\n      }\n    };\n    room.on(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!room)\n      return;\n    return () => {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.info(\"disconnecting on onmount\");\n      room.disconnect();\n    };\n  }, [room]);\n  return { room, htmlProps };\n}\n\n// src/hooks/useLocalParticipant.ts\n\n\nfunction useLocalParticipant(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = react__WEBPACK_IMPORTED_MODULE_0__.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [isCameraEnabled, setIsCameraEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [lastMicrophoneError, setLastMicrophoneError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    localParticipant.lastMicrophoneError\n  );\n  const [lastCameraError, setLastCameraError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(localParticipant.lastCameraError);\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [microphoneTrack, setMicrophoneTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    void 0\n  );\n  const [cameraTrack, setCameraTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0);\n  const handleUpdate = (media) => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLastMicrophoneError(media.participant.lastMicrophoneError);\n    setLastCameraError(media.participant.lastCameraError);\n    setLocalParticipant(media.participant);\n  };\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const listener = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.observeParticipantMedia)(localParticipant).subscribe(handleUpdate);\n    return () => listener.unsubscribe();\n  }, [localParticipant]);\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    lastMicrophoneError,\n    lastCameraError,\n    localParticipant\n  };\n}\n\n// src/hooks/useLocalParticipantPermissions.ts\n\n\nfunction useLocalParticipantPermissions() {\n  const room = useRoomContext();\n  const permissionObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.participantPermissionObserver)(room.localParticipant),\n    [room]\n  );\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n\n// src/hooks/useMediaDeviceSelect.ts\n\n\nfunction useMediaDeviceSelect({\n  kind,\n  room,\n  track,\n  requestPermissions,\n  onError\n}) {\n  const roomContext = useMaybeRoomContext();\n  const deviceObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.createMediaDeviceObserver)(kind, onError, requestPermissions),\n    [kind, requestPermissions, onError]\n  );\n  const devices = useObservableState(deviceObserver, []);\n  const [currentDeviceId, setCurrentDeviceId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"\");\n  const { className, activeDeviceObservable, setActiveMediaDevice } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupDeviceSelector)(kind, room != null ? room : roomContext, track),\n    [kind, room, roomContext, track]\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe((deviceId) => {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.info(\"setCurrentDeviceId\", deviceId);\n      if (deviceId)\n        setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener == null ? void 0 : listener.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n  return { devices, className, activeDeviceId: currentDeviceId, setActiveMediaDevice };\n}\n\n// src/hooks/useMediaDevices.ts\n\n\nfunction useMediaDevices({ kind }) {\n  const deviceObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.createMediaDeviceObserver)(kind), [kind]);\n  const devices = useObservableState(deviceObserver, []);\n  return devices;\n}\n\n// src/hooks/useMediaTrackBySourceOrName.ts\n\n\n\n\n// src/utils.ts\n\n\nfunction isProp(prop) {\n  return prop !== void 0;\n}\nfunction mergeProps2(...props) {\n  return mergeProps(...props.filter(isProp));\n}\nfunction cloneSingleChild(children, props, key) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children)) {\n      return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, __spreadProps(__spreadValues({}, props), { key }));\n    }\n    return child;\n  });\n}\nfunction warnAboutMissingStyles(el) {\n  var _a, _b;\n  if (\n    // eslint-disable-next-line turbo/no-undeclared-env-vars\n    (((_a = process == null ? void 0 : process.env) == null ? void 0 : _a.NODE_ENV) === \"dev\" || ((_b = process == null ? void 0 : process.env) == null ? void 0 : _b.NODE_ENV) === \"development\") && typeof window !== \"undefined\"\n  ) {\n    const target = el != null ? el : document.querySelector(\".lk-room-container\");\n    if (target && !getComputedStyle(target).getPropertyValue(\"--lk-has-imported-styles\")) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\n        \"It looks like you're not using the `@livekit/components-styles package`. To render the UI with the default styling, please import it in your layout or page.\"\n      );\n    }\n  }\n}\n\n// src/hooks/useMediaTrackBySourceOrName.ts\nfunction useMediaTrackBySourceOrName(observerOptions, options = {}) {\n  var _a;\n  const [publication, setPublication] = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getTrackByIdentifier)(observerOptions));\n  const [isMuted, setMuted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(publication == null ? void 0 : publication.isMuted);\n  const [isSubscribed, setSubscribed] = react__WEBPACK_IMPORTED_MODULE_0__.useState(publication == null ? void 0 : publication.isSubscribed);\n  const [track, setTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState(publication == null ? void 0 : publication.track);\n  const [orientation, setOrientation] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"landscape\");\n  const previousElement = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  const { className, trackObserver } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupMediaTrack)(observerOptions);\n  }, [\n    (_a = observerOptions.participant.sid) != null ? _a : observerOptions.participant.identity,\n    observerOptions.source,\n    (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReference)(observerOptions) && observerOptions.publication.trackSid\n  ]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication2) => {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"update track\", publication2);\n      setPublication(publication2);\n      setMuted(publication2 == null ? void 0 : publication2.isMuted);\n      setSubscribed(publication2 == null ? void 0 : publication2.isSubscribed);\n      setTrack(publication2 == null ? void 0 : publication2.track);\n    });\n    return () => subscription == null ? void 0 : subscription.unsubscribe();\n  }, [trackObserver]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a2, _b;\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (((_a2 = options.element) == null ? void 0 : _a2.current) && !((0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isLocal)(observerOptions.participant) && (track == null ? void 0 : track.kind) === \"audio\")) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = (_b = options.element) == null ? void 0 : _b.current;\n    return () => {\n      if (previousElement.current) {\n        track == null ? void 0 : track.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a2, _b;\n    if (typeof ((_a2 = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _a2.width) === \"number\" && typeof ((_b = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _b.height) === \"number\") {\n      const orientation_ = publication.dimensions.width > publication.dimensions.height ? \"landscape\" : \"portrait\";\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps2(options.props, __spreadValues({\n      className,\n      \"data-lk-local-participant\": observerOptions.participant.isLocal,\n      \"data-lk-source\": publication == null ? void 0 : publication.source\n    }, (publication == null ? void 0 : publication.kind) === \"video\" && { \"data-lk-orientation\": orientation }))\n  };\n}\n\n// src/hooks/useMediaTrack.ts\nfunction useMediaTrack(source, participant, options = {}) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ source, participant: p }, options);\n}\n\n// src/hooks/useMediaTrackByName.ts\nfunction useMediaTrackByName(name, participant, options = {}) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ name, participant: p }, options);\n}\n\n// src/hooks/usePagination.ts\n\n\n// src/hooks/useVisualStableUpdate.ts\n\n\nfunction useVisualStableUpdate(trackReferences, maxItemsOnPage, options = {}) {\n  const lastTrackRefs = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n  const lastMaxItemsOnPage = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n  const sortedTrackRefs = typeof options.customSortFunction === \"function\" ? options.customSortFunction(trackReferences) : (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.sortTrackReferences)(trackReferences);\n  let updatedTrackRefs = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.updatePages)(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.error(\"Error while running updatePages(): \", error);\n    }\n  }\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n  return updatedTrackRefs;\n}\n\n// src/hooks/usePagination.ts\nfunction usePagination(itemPerPage, trackReferences) {\n  const [currentPage, setCurrentPage] = react__WEBPACK_IMPORTED_MODULE_0__.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n  const changePage = (direction) => {\n    setCurrentPage((state) => {\n      if (direction === \"next\") {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const goToPage = (num) => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n  const tracksOnPage = updatedTrackReferences.slice(firstItemIndex, lastItemIndex);\n  return {\n    totalPageCount,\n    nextPage: () => changePage(\"next\"),\n    prevPage: () => changePage(\"previous\"),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: tracksOnPage,\n    currentPage\n  };\n}\n\n// src/hooks/useParticipantInfo.ts\n\n\nfunction useParticipantInfo(props = {}) {\n  const p = useEnsureParticipant(props.participant);\n  const infoObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.participantInfoObserver)(p), [p]);\n  const { identity, name, metadata } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata\n  });\n  return { identity, name, metadata };\n}\n\n// src/hooks/useParticipantPermissions.ts\n\n\nfunction useParticipantPermissions(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.participantPermissionObserver)(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n\n// src/hooks/useParticipantTile.ts\n\n\n\nfunction useParticipantTile({\n  trackRef,\n  participant,\n  source,\n  publication,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps\n}) {\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const p = useEnsureParticipant(participant);\n  const trackReference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a, _b, _c, _d, _e, _f;\n    const _source = (_b = (_a = trackRef == null ? void 0 : trackRef.source) != null ? _a : maybeTrackRef == null ? void 0 : maybeTrackRef.source) != null ? _b : source;\n    if (_source === void 0) {\n      throw new Error(\n        \"Missing track `source`, provided it via `trackRef`, `source` property or via `TrackRefContext`.\"\n      );\n    }\n    return {\n      participant: (_d = (_c = trackRef == null ? void 0 : trackRef.participant) != null ? _c : maybeTrackRef == null ? void 0 : maybeTrackRef.participant) != null ? _d : p,\n      publication: (_f = (_e = trackRef == null ? void 0 : trackRef.publication) != null ? _e : maybeTrackRef == null ? void 0 : maybeTrackRef.publication) != null ? _f : publication,\n      source: _source\n    };\n  }, [\n    trackRef == null ? void 0 : trackRef.participant,\n    trackRef == null ? void 0 : trackRef.source,\n    trackRef == null ? void 0 : trackRef.publication,\n    maybeTrackRef == null ? void 0 : maybeTrackRef.participant,\n    maybeTrackRef == null ? void 0 : maybeTrackRef.source,\n    maybeTrackRef == null ? void 0 : maybeTrackRef.publication,\n    p,\n    source,\n    publication\n  ]);\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const { className } = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupParticipantTile)();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: (event) => {\n        var _a, _b;\n        (_a = htmlProps.onClick) == null ? void 0 : _a.call(htmlProps, event);\n        if (typeof onParticipantClick === \"function\") {\n          const track = (_b = trackReference.publication) != null ? _b : trackReference.participant.getTrack(trackReference.source);\n          onParticipantClick({ participant: trackReference.participant, track });\n        }\n      }\n    });\n  }, [\n    htmlProps,\n    onParticipantClick,\n    trackReference.publication,\n    trackReference.source,\n    trackReference.participant\n  ]);\n  const isVideoMuted = useIsMuted(livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera, { participant: trackReference.participant });\n  const isAudioMuted = useIsMuted(livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone, {\n    participant: trackReference.participant\n  });\n  const isSpeaking = useIsSpeaking(trackReference.participant);\n  const facingMode = useFacingMode(trackReference);\n  return {\n    elementProps: __spreadValues({\n      \"data-lk-audio-muted\": isAudioMuted,\n      \"data-lk-video-muted\": isVideoMuted,\n      \"data-lk-speaking\": disableSpeakingIndicator === true ? false : isSpeaking,\n      \"data-lk-local-participant\": trackReference.participant.isLocal,\n      \"data-lk-source\": trackReference.source,\n      \"data-lk-facing-mode\": facingMode\n    }, mergedProps)\n  };\n}\n\n// src/hooks/useRemoteParticipants.ts\n\n\nfunction useRemoteParticipants(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const listener = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.connectedParticipantsObserver)(room, {\n      additionalRoomEvents: options.updateOnlyOn\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n}\n\n// src/hooks/useParticipants.ts\nfunction useParticipants(options = {}) {\n  const remoteParticipants = useRemoteParticipants(options);\n  const { localParticipant } = useLocalParticipant(options);\n  return [localParticipant, ...remoteParticipants];\n}\n\n// src/hooks/usePinnedTracks.ts\n\nfunction usePinnedTracks(layoutContext) {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    if ((layoutContext == null ? void 0 : layoutContext.pin.state) !== void 0 && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n\n// src/hooks/useRemoteParticipant.ts\n\n\nfunction useRemoteParticipant(identity, options = {}) {\n  const room = useRoomContext();\n  const [updateOnlyOn] = react__WEBPACK_IMPORTED_MODULE_0__.useState(options.updateOnlyOn);\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.connectedParticipantObserver)(room, identity, { additionalEvents: updateOnlyOn }),\n    [room, identity, updateOnlyOn]\n  );\n  const participant = useObservableState(\n    observable,\n    room.getParticipantByIdentity(identity)\n  );\n  return participant;\n}\n\n// src/hooks/useRoomInfo.ts\n\n\nfunction useRoomInfo(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.roomInfoObserver)(room), [room]);\n  const { name, metadata } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata\n  });\n  return { name, metadata };\n}\n\n// src/hooks/useSortedParticipants.ts\n\n\n\n// src/hooks/useSpeakingParticipants.ts\n\n\nfunction useSpeakingParticipants() {\n  const room = useRoomContext();\n  const speakerObserver = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.activeSpeakerObserver)(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n}\n\n// src/hooks/useSortedParticipants.ts\nfunction useSortedParticipants(participants) {\n  const [sortedParticipants, setSortedParticipants] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.sortParticipants)(participants)\n  );\n  const activeSpeakers = useSpeakingParticipants();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setSortedParticipants((0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.sortParticipants)(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n\n// src/hooks/useStartAudio.ts\n\n\nfunction useStartAudio({ room, props }) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomAudioPlaybackAllowedObservable: roomAudioPlaybackAllowedObservable2, handleStartAudioPlayback } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupStartAudio)(),\n    []\n  );\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => roomAudioPlaybackAllowedObservable2(roomEnsured),\n    [roomEnsured, roomAudioPlaybackAllowedObservable2]\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: () => {\n        handleStartAudioPlayback(roomEnsured);\n      },\n      style: { display: canPlayAudio ? \"none\" : \"block\" }\n    }),\n    [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured]\n  );\n  return { mergedProps, canPlayAudio };\n}\n\n// src/hooks/useStartVideo.ts\n\n\nfunction useStartVideo({ room, props }) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupStartVideo)(),\n    []\n  );\n  const observable = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => roomVideoPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomVideoPlaybackAllowedObservable]\n  );\n  const { canPlayVideo } = useObservableState(observable, {\n    canPlayVideo: roomEnsured.canPlaybackVideo\n  });\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: () => {\n        handleStartVideoPlayback(roomEnsured);\n      },\n      style: { display: canPlayVideo ? \"none\" : \"block\" }\n    }),\n    [props, className, canPlayVideo, handleStartVideoPlayback, roomEnsured]\n  );\n  return { mergedProps, canPlayVideo };\n}\n\n// src/hooks/useSwipe.ts\n\nfunction useSwipe(element, options = {}) {\n  var _a;\n  const touchStart = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const touchEnd = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const minSwipeDistance = (_a = options.minSwipeDistance) != null ? _a : 50;\n  const onTouchStart = (event) => {\n    touchEnd.current = null;\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n  const onTouchMove = (event) => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n  const onTouchEnd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n    if (isLeftSwipe && options.onLeftSwipe)\n      options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe)\n      options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener(\"touchstart\", onTouchStart, { passive: true });\n      elementCopy.addEventListener(\"touchmove\", onTouchMove, { passive: true });\n      elementCopy.addEventListener(\"touchend\", onTouchEnd, { passive: true });\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener(\"touchstart\", onTouchStart);\n        elementCopy.removeEventListener(\"touchmove\", onTouchMove);\n        elementCopy.removeEventListener(\"touchend\", onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n\n// src/hooks/useChatToggle.ts\n\n\nfunction useChatToggle({ props }) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const { className } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupChatToggle)(), []);\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch)\n          dispatch({ msg: \"toggle_chat\" });\n      },\n      \"aria-pressed\": (state == null ? void 0 : state.showChat) ? \"true\" : \"false\",\n      \"data-lk-unread-msgs\": state ? state.unreadMessages < 10 ? state.unreadMessages.toFixed(0) : \"9+\" : \"0\"\n    });\n  }, [props, className, dispatch, state]);\n  return { mergedProps };\n}\n\n// src/hooks/useToken.ts\n\n\nfunction useToken(tokenEndpoint, roomName, options = {}) {\n  const [token, setToken] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a;\n    if (tokenEndpoint === void 0) {\n      throw Error(\"token endpoint needs to be defined\");\n    }\n    if (((_a = options.userInfo) == null ? void 0 : _a.identity) === void 0) {\n      return;\n    }\n    const tokenFetcher = () => __async(this, null, function* () {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"fetching token\");\n      const params = new URLSearchParams(__spreadProps(__spreadValues({}, options.userInfo), { roomName }));\n      const res = yield fetch(`${tokenEndpoint}?${params.toString()}`);\n      const { accessToken } = yield res.json();\n      setToken(accessToken);\n    });\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, options]);\n  return token;\n}\n\n// src/hooks/useTrackMutedIndicator.ts\n\n\nfunction useTrackMutedIndicator(trackRefOrSource, options = {}) {\n  var _a, _b, _c, _d;\n  let ref = useMaybeTrackRefContext();\n  const p = (_b = (_a = useMaybeParticipantContext()) != null ? _a : options.participant) != null ? _b : ref == null ? void 0 : ref.participant;\n  if (typeof trackRefOrSource === \"string\") {\n    if (!p) {\n      throw Error(`Participant missing, either provide it via context or pass it in directly`);\n    }\n    ref = { participant: p, source: trackRefOrSource };\n  } else if (trackRefOrSource) {\n    ref = trackRefOrSource;\n  } else {\n    throw Error(`No track reference found, either provide it via context or pass it in directly`);\n  }\n  const { className, mediaMutedObserver } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupTrackMutedIndicator)(ref),\n    [(0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getTrackReferenceId)(ref)]\n  );\n  const isMuted = useObservableState(\n    mediaMutedObserver,\n    !!(((_c = ref.publication) == null ? void 0 : _c.isMuted) || ((_d = ref.participant.getTrack(ref.source)) == null ? void 0 : _d.isMuted))\n  );\n  return { isMuted, className };\n}\n\n// src/hooks/useTrackToggle.ts\n\n\nfunction useTrackToggle(_a) {\n  var _b = _a, {\n    source,\n    onChange,\n    initialState,\n    captureOptions\n  } = _b, rest = __objRest(_b, [\n    \"source\",\n    \"onChange\",\n    \"initialState\",\n    \"captureOptions\"\n  ]);\n  var _a2;\n  const room = useMaybeRoomContext();\n  const track = (_a2 = room == null ? void 0 : room.localParticipant) == null ? void 0 : _a2.getTrack(source);\n  const userInteractionRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  const { toggle, className, pendingObserver, enabledObserver } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => room ? (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupMediaToggle)(source, room, captureOptions) : (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupManualToggle)(),\n    [room, source, JSON.stringify(captureOptions)]\n  );\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState != null ? initialState : !!(track == null ? void 0 : track.isEnabled));\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    onChange == null ? void 0 : onChange(enabled, userInteractionRef.current);\n  }, [enabled, onChange]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (initialState !== void 0) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"forcing initial toggle state\", source, initialState);\n      toggle(initialState);\n    }\n  }, []);\n  const newProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => mergeProps(rest, { className }), [rest, className]);\n  const clickHandler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (evt) => {\n      var _a3;\n      userInteractionRef.current = true;\n      toggle();\n      (_a3 = rest.onClick) == null ? void 0 : _a3.call(rest, evt);\n    },\n    [rest, toggle]\n  );\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: __spreadProps(__spreadValues({}, newProps), {\n      \"aria-pressed\": enabled,\n      \"data-lk-source\": source,\n      \"data-lk-enabled\": enabled,\n      disabled: pending,\n      onClick: clickHandler\n    })\n  };\n}\n\n// src/hooks/useTracks.ts\n\n\n\nfunction useTracks(sources = [\n  livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera,\n  livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone,\n  livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare,\n  livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShareAudio,\n  livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Unknown\n], options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n  const [participants, setParticipants] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n  const sources_ = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return sources.map((s) => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isSourceWitOptions)(s) ? s.source : s);\n  }, [JSON.stringify(sources)]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const subscription = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.trackReferencesObservable)(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed\n    }).subscribe(({ trackReferences: trackReferences2, participants: participants2 }) => {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"setting track bundles\", trackReferences2, participants2);\n      setTrackReferences(trackReferences2);\n      setParticipants(participants2);\n    });\n    return () => subscription.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn), JSON.stringify(sources)]);\n  const maybeTrackReferences = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    if ((0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isSourcesWithOptions)(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders = Array.from(trackReferences);\n      participants.forEach((participant) => {\n        var _a;\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = (_a = requirePlaceholder.get(participant.identity)) != null ? _a : [];\n          sourcesToAddPlaceholder.forEach((placeholderSource) => {\n            if (trackReferences.find(\n              ({ participant: p, publication }) => participant.identity === p.identity && publication.source === placeholderSource\n            )) {\n              return;\n            }\n            _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\n              `Add ${placeholderSource} placeholder for participant ${participant.identity}.`\n            );\n            const placeholder = {\n              participant,\n              source: placeholderSource\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n  return maybeTrackReferences;\n}\nfunction difference(setA, setB) {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\nfunction requiredPlaceholders(sources, participants) {\n  const placeholderMap = /* @__PURE__ */ new Map();\n  if ((0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isSourcesWithOptions)(sources)) {\n    const sourcesThatNeedPlaceholder = sources.filter((sourceWithOption) => sourceWithOption.withPlaceholder).map((sourceWithOption) => sourceWithOption.source);\n    participants.forEach((participant) => {\n      const sourcesOfSubscribedTracks = participant.getTracks().map((pub) => {\n        var _a;\n        return (_a = pub.track) == null ? void 0 : _a.source;\n      }).filter((trackSource) => trackSource !== void 0);\n      const placeholderNeededForThisParticipant = Array.from(\n        difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks))\n      );\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n\n// src/hooks/useTrack.ts\nfunction useTrack(trackRef, options = {}) {\n  return useMediaTrackBySourceOrName(trackRef, options);\n}\n\n// src/hooks/useTrackByName.ts\nfunction useTrackByName(trackRef, options = {}) {\n  const ref = useEnsureTrackRef(trackRef);\n  return useMediaTrackBySourceOrName(ref, options);\n}\n\n// src/hooks/useChat.ts\n\n\nfunction useChat(options) {\n  const room = useRoomContext();\n  const [setup, setSetup] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  const isSending = useObservableState(setup == null ? void 0 : setup.isSendingObservable, false);\n  const chatMessages = useObservableState(setup == null ? void 0 : setup.messageObservable, []);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const setupChatReturn = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupChat)(room, options);\n    setSetup(setupChatReturn);\n  }, [room, options]);\n  return { send: setup == null ? void 0 : setup.send, chatMessages, isSending };\n}\n\n// src/hooks/usePersistentUserChoices.ts\n\n\nfunction usePersistentUserChoices(options = {}) {\n  var _a;\n  const [userChoices, setSettings] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.loadUserChoices)(options.defaults, (_a = options.preventLoad) != null ? _a : false)\n  );\n  const saveAudioInputEnabled = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((isEnabled) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { audioEnabled: isEnabled }));\n  }, []);\n  const saveVideoInputEnabled = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((isEnabled) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { videoEnabled: isEnabled }));\n  }, []);\n  const saveAudioInputDeviceId = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((deviceId) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { audioDeviceId: deviceId }));\n  }, []);\n  const saveVideoInputDeviceId = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((deviceId) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { videoDeviceId: deviceId }));\n  }, []);\n  const saveUsername = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((username) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { username }));\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a2;\n    (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.saveUserChoices)(userChoices, (_a2 = options.preventSave) != null ? _a2 : false);\n  }, [userChoices, options.preventSave]);\n  return {\n    userChoices,\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n    saveUsername\n  };\n}\n\n// src/hooks/useIsEncrypted.ts\n\n\n\nfunction useIsEncrypted(participant) {\n  const p = useEnsureParticipant(participant);\n  const room = useEnsureRoom();\n  const observer = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.encryptionStatusObservable)(room, p), [room, p]);\n  const isEncrypted = useObservableState(\n    observer,\n    p instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.LocalParticipant ? p.isE2EEEnabled : p.isEncrypted\n  );\n  return isEncrypted;\n}\n\n// src/components/controls/ClearPinButton.tsx\nfunction ClearPinButton(props) {\n  const { buttonProps } = useClearPinButton(props);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, buttonProps), props.children);\n}\n\n// src/components/ConnectionState.tsx\n\nfunction ConnectionState3(_a) {\n  var _b = _a, { room } = _b, props = __objRest(_b, [\"room\"]);\n  const connectionState = useConnectionState(room);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, props), connectionState);\n}\n\n// src/components/controls/ChatToggle.tsx\n\nfunction ChatToggle(props) {\n  const { mergedProps } = useChatToggle({ props });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, mergedProps), props.children);\n}\n\n// src/components/controls/DisconnectButton.tsx\n\nfunction DisconnectButton(props) {\n  const { buttonProps } = useDisconnectButton(props);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, buttonProps), props.children);\n}\n\n// src/components/controls/FocusToggle.tsx\n\n\n// src/assets/icons/CameraDisabledIcon.tsx\n\nvar SvgCameraDisabledIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" }));\nvar CameraDisabledIcon_default = SvgCameraDisabledIcon;\n\n// src/assets/icons/CameraIcon.tsx\n\nvar SvgCameraIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" }));\nvar CameraIcon_default = SvgCameraIcon;\n\n// src/assets/icons/ChatIcon.tsx\n\nvar SvgChatIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 18, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar ChatIcon_default = SvgChatIcon;\n\n// src/assets/icons/Chevron.tsx\n\nvar SvgChevron = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentcolor\",\n    fillRule: \"evenodd\",\n    d: \"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar Chevron_default = SvgChevron;\n\n// src/assets/icons/FocusToggleIcon.tsx\n\nvar SvgFocusToggleIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.5 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\" })));\nvar FocusToggleIcon_default = SvgFocusToggleIcon;\n\n// src/assets/icons/GearIcon.tsx\n\nvar SvgGearIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar GearIcon_default = SvgGearIcon;\n\n// src/assets/icons/LeaveIcon.tsx\n\nvar SvgLeaveIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar LeaveIcon_default = SvgLeaveIcon;\n\n// src/assets/icons/LockLockedIcon.tsx\n\nvar SvgLockLockedIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentcolor\",\n    fillRule: \"evenodd\",\n    d: \"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar LockLockedIcon_default = SvgLockLockedIcon;\n\n// src/assets/icons/MicDisabledIcon.tsx\n\nvar SvgMicDisabledIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\" }));\nvar MicDisabledIcon_default = SvgMicDisabledIcon;\n\n// src/assets/icons/MicIcon.tsx\n\nvar SvgMicIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fillRule: \"evenodd\",\n    d: \"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\" }));\nvar MicIcon_default = SvgMicIcon;\n\n// src/assets/icons/QualityExcellentIcon.tsx\n\nvar SvgQualityExcellentIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }));\nvar QualityExcellentIcon_default = SvgQualityExcellentIcon;\n\n// src/assets/icons/QualityGoodIcon.tsx\n\nvar SvgQualityGoodIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" })));\nvar QualityGoodIcon_default = SvgQualityGoodIcon;\n\n// src/assets/icons/QualityPoorIcon.tsx\n\nvar SvgQualityPoorIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" })));\nvar QualityPoorIcon_default = SvgQualityPoorIcon;\n\n// src/assets/icons/QualityUnknownIcon.tsx\n\nvar SvgQualityUnknownIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" })));\nvar QualityUnknownIcon_default = SvgQualityUnknownIcon;\n\n// src/assets/icons/ScreenShareIcon.tsx\n\nvar SvgScreenShareIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar ScreenShareIcon_default = SvgScreenShareIcon;\n\n// src/assets/icons/ScreenShareStopIcon.tsx\n\nvar SvgScreenShareStopIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { fill: \"currentColor\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fillRule: \"evenodd\",\n    d: \"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\",\n    clipRule: \"evenodd\"\n  }\n)));\nvar ScreenShareStopIcon_default = SvgScreenShareStopIcon;\n\n// src/assets/icons/SpinnerIcon.tsx\n\nvar SvgSpinnerIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.7\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.6\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.5\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.4\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.9\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.3\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.8\n  }\n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.2\n  }\n));\nvar SpinnerIcon_default = SvgSpinnerIcon;\n\n// src/assets/icons/UnfocusToggleIcon.tsx\n\nvar SvgUnfocusToggleIcon = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", { stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.5 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\" })));\nvar UnfocusToggleIcon_default = SvgUnfocusToggleIcon;\n\n// src/components/controls/FocusToggle.tsx\nfunction FocusToggle(_a) {\n  var _b = _a, { trackRef, trackSource, participant } = _b, props = __objRest(_b, [\"trackRef\", \"trackSource\", \"participant\"]);\n  const trackRefFromContext = useMaybeTrackRefContext();\n  const { mergedProps, inFocus } = useFocusToggle({\n    trackRef: trackRef != null ? trackRef : trackRefFromContext,\n    trackSource,\n    participant,\n    props\n  });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutContext.Consumer, null, (layoutContext) => layoutContext !== void 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, mergedProps), props.children ? props.children : inFocus ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(UnfocusToggleIcon_default, null) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusToggleIcon_default, null)));\n}\n\n// src/components/controls/MediaDeviceSelect.tsx\n\n\nfunction MediaDeviceSelect(_a) {\n  var _b = _a, {\n    kind,\n    initialSelection,\n    onActiveDeviceChange,\n    onDeviceListChange,\n    onDeviceSelectError,\n    exactMatch,\n    track,\n    requestPermissions,\n    onError\n  } = _b, props = __objRest(_b, [\n    \"kind\",\n    \"initialSelection\",\n    \"onActiveDeviceChange\",\n    \"onDeviceListChange\",\n    \"onDeviceSelectError\",\n    \"exactMatch\",\n    \"track\",\n    \"requestPermissions\",\n    \"onError\"\n  ]);\n  const room = useMaybeRoomContext();\n  const handleError = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (e) => {\n      if (room) {\n        room.emit(livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.MediaDevicesError, e);\n      }\n      onError == null ? void 0 : onError(e);\n    },\n    [room, onError]\n  );\n  const { devices, activeDeviceId, setActiveMediaDevice, className } = useMediaDeviceSelect({\n    kind,\n    room,\n    track,\n    requestPermissions,\n    onError: handleError\n  });\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (initialSelection !== void 0) {\n      setActiveMediaDevice(initialSelection);\n    }\n  }, [setActiveMediaDevice]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (typeof onDeviceListChange === \"function\") {\n      onDeviceListChange(devices);\n    }\n  }, [onDeviceListChange, devices]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (activeDeviceId && activeDeviceId !== \"\") {\n      onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(activeDeviceId);\n    }\n  }, [activeDeviceId]);\n  const handleActiveDeviceChange = (deviceId) => __async(this, null, function* () {\n    try {\n      yield setActiveMediaDevice(deviceId, { exact: exactMatch });\n    } catch (e) {\n      if (e instanceof Error) {\n        onDeviceSelectError == null ? void 0 : onDeviceSelectError(e);\n      } else {\n        throw e;\n      }\n    }\n  });\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps2(props, { className }, { className: \"lk-list\" }),\n    [className, props]\n  );\n  function isActive(deviceId, activeDeviceId2, index) {\n    return deviceId === activeDeviceId2 || index === 0 && activeDeviceId2 === \"default\";\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", __spreadValues({}, mergedProps), devices.map((device, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"li\",\n    {\n      key: device.deviceId,\n      id: device.deviceId,\n      \"data-lk-active\": isActive(device.deviceId, activeDeviceId, index),\n      \"aria-selected\": isActive(device.deviceId, activeDeviceId, index),\n      role: \"option\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: \"lk-button\", onClick: () => handleActiveDeviceChange(device.deviceId) }, device.label)\n  )));\n}\n\n// src/components/controls/StartAudio.tsx\n\nfunction StartAudio(_a) {\n  var _b = _a, { label = \"Allow Audio\" } = _b, props = __objRest(_b, [\"label\"]);\n  const room = useRoomContext();\n  const { mergedProps } = useStartAudio({ room, props });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, mergedProps), label);\n}\n\n// src/components/controls/TrackToggle.tsx\n\n\n// src/assets/icons/util.tsx\n\n\nfunction getSourceIcon(source, enabled) {\n  switch (source) {\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone:\n      return enabled ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MicIcon_default, null) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MicDisabledIcon_default, null);\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera:\n      return enabled ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CameraIcon_default, null) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CameraDisabledIcon_default, null);\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare:\n      return enabled ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScreenShareStopIcon_default, null) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScreenShareIcon_default, null);\n    default:\n      return void 0;\n  }\n}\nfunction getConnectionQualityIcon(quality) {\n  switch (quality) {\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionQuality.Excellent:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QualityExcellentIcon_default, null);\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionQuality.Good:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QualityGoodIcon_default, null);\n    case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionQuality.Poor:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QualityPoorIcon_default, null);\n    default:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QualityUnknownIcon_default, null);\n  }\n}\n\n// src/components/controls/TrackToggle.tsx\nfunction TrackToggle(_a) {\n  var _b = _a, { showIcon } = _b, props = __objRest(_b, [\"showIcon\"]);\n  const { buttonProps, enabled } = useTrackToggle(props);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({}, buttonProps), (showIcon != null ? showIcon : true) && getSourceIcon(props.source, enabled), props.children);\n}\n\n// src/components/layout/FocusLayout.tsx\n\n\n// src/components/participant/ParticipantTile.tsx\n\n\n\n\n// src/components/participant/ConnectionQualityIndicator.tsx\n\nfunction ConnectionQualityIndicator(props) {\n  var _a;\n  const { className, quality } = useConnectionQualityIndicator(props);\n  const elementProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return __spreadProps(__spreadValues({}, mergeProps2(props, { className })), { \"data-lk-quality\": quality });\n  }, [quality, props, className]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, elementProps), (_a = props.children) != null ? _a : getConnectionQualityIcon(quality));\n}\n\n// src/components/participant/ParticipantName.tsx\n\n\nfunction ParticipantName(_a) {\n  var _b = _a, { participant } = _b, props = __objRest(_b, [\"participant\"]);\n  const p = useEnsureParticipant(participant);\n  const { className, infoObserver } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.setupParticipantName)(p);\n  }, [p]);\n  const { identity, name } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata\n  });\n  const mergedProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return mergeProps2(props, { className, \"data-lk-participant-name\": name });\n  }, [props, className, name]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({}, mergedProps), name !== \"\" ? name : identity, props.children);\n}\n\n// src/components/participant/TrackMutedIndicator.tsx\n\nfunction TrackMutedIndicator(_a) {\n  var _b = _a, {\n    source,\n    participant,\n    trackRef,\n    show = \"always\"\n  } = _b, props = __objRest(_b, [\n    \"source\",\n    \"participant\",\n    \"trackRef\",\n    \"show\"\n  ]);\n  var _a2, _b2;\n  const { className, isMuted } = useTrackMutedIndicator(trackRef != null ? trackRef : source, { participant });\n  const showIndicator = show === \"always\" || show === \"muted\" && isMuted || show === \"unmuted\" && !isMuted;\n  const htmlProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps2(props, {\n      className\n    }),\n    [className, props]\n  );\n  if (!showIndicator) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadProps(__spreadValues({}, htmlProps), { \"data-lk-muted\": isMuted }), (_b2 = props.children) != null ? _b2 : getSourceIcon((_a2 = trackRef == null ? void 0 : trackRef.source) != null ? _a2 : source, !isMuted));\n}\n\n// src/assets/images/ParticipantPlaceholder.tsx\n\nvar SvgParticipantPlaceholder = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n  \"svg\",\n  __spreadValues({\n    width: 320,\n    height: 320,\n    viewBox: \"0 0 320 320\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props),\n  /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"path\",\n    {\n      d: \"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\",\n      fill: \"white\",\n      fillOpacity: 0.25\n    }\n  ),\n  /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"path\",\n    {\n      d: \"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\",\n      fill: \"white\",\n      fillOpacity: 0.25\n    }\n  )\n);\nvar ParticipantPlaceholder_default = SvgParticipantPlaceholder;\n\n// src/components/participant/VideoTrack.tsx\n\n\n\nfunction VideoTrack(_a) {\n  var _b = _a, {\n    onTrackClick,\n    onClick,\n    onSubscriptionStatusChanged,\n    trackRef,\n    name,\n    publication,\n    source,\n    participant: p,\n    manageSubscription\n  } = _b, props = __objRest(_b, [\n    \"onTrackClick\",\n    \"onClick\",\n    \"onSubscriptionStatusChanged\",\n    \"trackRef\",\n    \"name\",\n    \"publication\",\n    \"source\",\n    \"participant\",\n    \"manageSubscription\"\n  ]);\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j;\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const _name = (_d = (_c = (_a2 = trackRef == null ? void 0 : trackRef.publication) == null ? void 0 : _a2.trackName) != null ? _c : (_b2 = maybeTrackRef == null ? void 0 : maybeTrackRef.publication) == null ? void 0 : _b2.trackName) != null ? _d : name;\n  const _source = (_f = (_e = trackRef == null ? void 0 : trackRef.source) != null ? _e : maybeTrackRef == null ? void 0 : maybeTrackRef.source) != null ? _f : source;\n  const _publication = (_h = (_g = trackRef == null ? void 0 : trackRef.publication) != null ? _g : maybeTrackRef == null ? void 0 : maybeTrackRef.publication) != null ? _h : publication;\n  const _participant = (_j = (_i = trackRef == null ? void 0 : trackRef.participant) != null ? _i : maybeTrackRef == null ? void 0 : maybeTrackRef.participant) != null ? _j : p;\n  if (_source === void 0) {\n    throw new Error(\"VideoTrack: You must provide a trackRef or source property.\");\n  }\n  const participant = useEnsureParticipant(_participant);\n  const mediaEl = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const intersectionEntry = usehooks_ts__WEBPACK_IMPORTED_MODULE_5__.useIntersectionObserver(mediaEl, {});\n  const debouncedIntersectionEntry = usehooks_ts__WEBPACK_IMPORTED_MODULE_5__.useDebounce(intersectionEntry, 3e3);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (manageSubscription && _publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.RemoteTrackPublication && (debouncedIntersectionEntry == null ? void 0 : debouncedIntersectionEntry.isIntersecting) === false && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === false) {\n      _publication.setSubscribed(false);\n    }\n  }, [debouncedIntersectionEntry, _publication, manageSubscription]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (manageSubscription && _publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.RemoteTrackPublication && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === true) {\n      _publication.setSubscribed(true);\n    }\n  }, [intersectionEntry, _publication, manageSubscription]);\n  const {\n    elementProps,\n    publication: pub,\n    isSubscribed\n  } = useMediaTrackBySourceOrName(\n    { participant, name: _name, source: _source, publication: _publication },\n    {\n      element: mediaEl,\n      props\n    }\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n  const clickHandler = (evt) => {\n    onClick == null ? void 0 : onClick(evt);\n    onTrackClick == null ? void 0 : onTrackClick({ participant, track: pub });\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", __spreadProps(__spreadValues({ ref: mediaEl }, elementProps), { muted: true, onClick: clickHandler }));\n}\n\n// src/components/participant/AudioTrack.tsx\n\n\n\nfunction AudioTrack(_a) {\n  var _b = _a, {\n    trackRef,\n    onSubscriptionStatusChanged,\n    volume,\n    source,\n    name,\n    publication,\n    participant: p\n  } = _b, props = __objRest(_b, [\n    \"trackRef\",\n    \"onSubscriptionStatusChanged\",\n    \"volume\",\n    \"source\",\n    \"name\",\n    \"publication\",\n    \"participant\"\n  ]);\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j;\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const _name = (_d = (_c = (_a2 = trackRef == null ? void 0 : trackRef.publication) == null ? void 0 : _a2.trackName) != null ? _c : (_b2 = maybeTrackRef == null ? void 0 : maybeTrackRef.publication) == null ? void 0 : _b2.trackName) != null ? _d : name;\n  const _source = (_f = (_e = trackRef == null ? void 0 : trackRef.source) != null ? _e : maybeTrackRef == null ? void 0 : maybeTrackRef.source) != null ? _f : source;\n  const _publication = (_h = (_g = trackRef == null ? void 0 : trackRef.publication) != null ? _g : maybeTrackRef == null ? void 0 : maybeTrackRef.publication) != null ? _h : publication;\n  const _participant = (_j = (_i = trackRef == null ? void 0 : trackRef.participant) != null ? _i : maybeTrackRef == null ? void 0 : maybeTrackRef.participant) != null ? _j : p;\n  if (_source === void 0) {\n    throw new Error(\"The AudioTrack component expects a trackRef or source property.\");\n  }\n  const mediaEl = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const participant = useEnsureParticipant(_participant);\n  const {\n    elementProps,\n    isSubscribed,\n    track,\n    publication: pub\n  } = useMediaTrackBySourceOrName(\n    { source: _source, name: _name, participant, publication: _publication },\n    {\n      element: mediaEl,\n      props\n    }\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (track === void 0 || volume === void 0) {\n      return;\n    }\n    if (track instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.RemoteAudioTrack) {\n      track.setVolume(volume);\n    } else {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\"Volume can only be set on remote audio tracks.\");\n    }\n  }, [volume, track]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (pub === void 0 || props.muted === void 0) {\n      return;\n    }\n    if (pub instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.RemoteTrackPublication) {\n      pub.setEnabled(!props.muted);\n    } else {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\"Can only call setEnabled on remote track publications.\");\n    }\n  }, [props.muted, pub, track]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"audio\", __spreadValues({ ref: mediaEl }, elementProps));\n}\n\n// src/components/participant/ParticipantTile.tsx\nfunction ParticipantContextIfNeeded(props) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantContext.Provider, { value: props.participant }, props.children) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, props.children);\n}\nfunction TrackRefContextIfNeeded(props) {\n  const hasContext = !!useMaybeTrackRefContext();\n  return props.trackRef && !hasContext ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackRefContext.Provider, { value: props.trackRef }, props.children) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, props.children);\n}\nfunction ParticipantTile(_a) {\n  var _b = _a, {\n    trackRef,\n    participant,\n    children,\n    source = livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera,\n    onParticipantClick,\n    publication,\n    disableSpeakingIndicator\n  } = _b, htmlProps = __objRest(_b, [\n    \"trackRef\",\n    \"participant\",\n    \"children\",\n    \"source\",\n    \"onParticipantClick\",\n    \"publication\",\n    \"disableSpeakingIndicator\"\n  ]);\n  var _a2, _b2;\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const p = useEnsureParticipant(participant);\n  const trackReference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a3, _b3, _c, _d, _e, _f;\n    return {\n      participant: (_b3 = (_a3 = trackRef == null ? void 0 : trackRef.participant) != null ? _a3 : maybeTrackRef == null ? void 0 : maybeTrackRef.participant) != null ? _b3 : p,\n      source: (_d = (_c = trackRef == null ? void 0 : trackRef.source) != null ? _c : maybeTrackRef == null ? void 0 : maybeTrackRef.source) != null ? _d : source,\n      publication: (_f = (_e = trackRef == null ? void 0 : trackRef.publication) != null ? _e : maybeTrackRef == null ? void 0 : maybeTrackRef.publication) != null ? _f : publication\n    };\n  }, [maybeTrackRef, p, publication, source, trackRef]);\n  const { elementProps } = useParticipantTile({\n    participant: trackReference.participant,\n    htmlProps,\n    source: trackReference.source,\n    publication: trackReference.publication,\n    disableSpeakingIndicator,\n    onParticipantClick\n  });\n  const isEncrypted = useIsEncrypted(p);\n  const layoutContext = useMaybeLayoutContext();\n  const autoManageSubscription = (_a2 = useFeatureContext()) == null ? void 0 : _a2.autoSubscription;\n  const handleSubscribe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (subscribed) => {\n      if (trackReference.source && !subscribed && layoutContext && layoutContext.pin.dispatch && (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReferencePinned)(trackReference, layoutContext.pin.state)) {\n        layoutContext.pin.dispatch({ msg: \"clear_pin\" });\n      }\n    },\n    [trackReference, layoutContext]\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ style: { position: \"relative\" } }, elementProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackRefContextIfNeeded, { trackRef: trackReference }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantContextIfNeeded, { participant: trackReference.participant }, children != null ? children : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReference)(trackReference) && (((_b2 = trackReference.publication) == null ? void 0 : _b2.kind) === \"video\" || trackReference.source === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera || trackReference.source === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    VideoTrack,\n    {\n      trackRef: trackReference,\n      onSubscriptionStatusChanged: handleSubscribe,\n      manageSubscription: autoManageSubscription\n    }\n  ) : (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReference)(trackReference) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    AudioTrack,\n    {\n      trackRef: trackReference,\n      onSubscriptionStatusChanged: handleSubscribe\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-participant-placeholder\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantPlaceholder_default, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-participant-metadata\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-participant-metadata-item\" }, trackReference.source === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, isEncrypted && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LockLockedIcon_default, { style: { marginRight: \"0.25rem\" } }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    TrackMutedIndicator,\n    {\n      source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone,\n      show: \"muted\"\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantName, null)) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScreenShareIcon_default, { style: { marginRight: \"0.25rem\" } }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantName, null, \"'s screen\"))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConnectionQualityIndicator, { className: \"lk-participant-metadata-item\" }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusToggle, { trackRef: trackReference }))));\n}\n\n// src/components/layout/FocusLayout.tsx\nfunction FocusLayoutContainer(props) {\n  const elementProps = mergeProps2(props, { className: \"lk-focus-layout\" });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, elementProps), props.children);\n}\nfunction FocusLayout(_a) {\n  var _b = _a, { trackRef, track } = _b, htmlProps = __objRest(_b, [\"trackRef\", \"track\"]);\n  const trackReference = trackRef != null ? trackRef : track;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantTile, __spreadValues(__spreadValues({}, trackReference), htmlProps));\n}\n\n// src/components/layout/GridLayout.tsx\n\n\n// src/components/TrackLoop.tsx\n\n\nfunction TrackLoop(_a) {\n  var _b = _a, { tracks } = _b, props = __objRest(_b, [\"tracks\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, tracks.map((trackReference) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      TrackRefContext.Provider,\n      {\n        value: trackReference,\n        key: (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getTrackReferenceId)(trackReference)\n      },\n      cloneSingleChild(props.children)\n    );\n  }));\n}\n\n// src/components/controls/PaginationControl.tsx\n\n\nfunction PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement\n}) {\n  const [interactive, setInteractive] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    let subscription;\n    if (connectedElement) {\n      subscription = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.createInteractingObservable)(connectedElement.current, 2e3).subscribe(\n        setInteractive\n      );\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-pagination-control\", \"data-lk-user-interaction\": interactive }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: \"lk-button\", onClick: prevPage }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Chevron_default, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: \"lk-pagination-count\" }, `${currentPage} of ${totalPageCount}`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: \"lk-button\", onClick: nextPage }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Chevron_default, null)));\n}\n\n// src/components/controls/PaginationIndicator.tsx\n\nfunction PaginationIndicator({ totalPageCount, currentPage }) {\n  const bubbles = new Array(totalPageCount).fill(\"\").map((_, index) => {\n    if (index + 1 === currentPage) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { \"data-lk-active\": true, key: index });\n    } else {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { key: index });\n    }\n  });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-pagination-indicator\" }, bubbles);\n}\n\n// src/components/layout/GridLayout.tsx\nfunction GridLayout(_a) {\n  var _b = _a, { tracks } = _b, props = __objRest(_b, [\"tracks\"]);\n  const gridEl = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  const elementProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => mergeProps2(props, { className: \"lk-grid-layout\" }),\n    [props]\n  );\n  const { layout } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage\n  });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ ref: gridEl, \"data-lk-pagination\": pagination.totalPageCount > 1 }, elementProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackLoop, { tracks: pagination.tracks }, props.children), tracks.length > layout.maxTiles && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    PaginationIndicator,\n    {\n      totalPageCount: pagination.totalPageCount,\n      currentPage: pagination.currentPage\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PaginationControl, __spreadValues({ pagesContainer: gridEl }, pagination))));\n}\n\n// src/components/layout/CarouselLayout.tsx\n\n\nvar MIN_HEIGHT = 130;\nvar MIN_WIDTH = 140;\nvar MIN_VISIBLE_TILES = 1;\nvar ASPECT_RATIO = 16 / 10;\nvar ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\nvar CarouselView = CarouselLayout;\nfunction CarouselLayout(_a) {\n  var _b = _a, { tracks, orientation } = _b, props = __objRest(_b, [\"tracks\", \"orientation\"]);\n  const asideEl = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const [prevTiles, setPrevTiles] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n  const { width, height } = useSize(asideEl);\n  const carouselOrientation = orientation ? orientation : height >= width ? \"vertical\" : \"horizontal\";\n  const tileSpan = carouselOrientation === \"vertical\" ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT) : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)();\n  const tilesThatFit = carouselOrientation === \"vertical\" ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES) : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty(\"--lk-max-visible-tiles\", maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"aside\", __spreadValues({ key: carouselOrientation, className: \"lk-carousel\", ref: asideEl }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackLoop, { tracks: sortedTiles }, props.children));\n}\n\n// src/components/layout/LayoutContextProvider.tsx\n\n\nfunction LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children\n}) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"PinState Updated\", { state: layoutContextValue.pin.state });\n    if (onPinChange && layoutContextValue.pin.state)\n      onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"Widget Updated\", { widgetState: layoutContextValue.widget.state });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutContext.Provider, { value: layoutContextValue }, children);\n}\n\n// src/components/LiveKitRoom.tsx\n\nfunction LiveKitRoom(props) {\n  const { room, htmlProps } = useLiveKitRoom(props);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, htmlProps), room && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RoomContext.Provider, { value: room }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LKFeatureContext.Provider, { value: props.featureFlags }, props.children)));\n}\n\n// src/components/participant/AudioVisualizer.tsx\n\n\nfunction AudioVisualizer(_a) {\n  var _b = _a, { participant, trackRef } = _b, props = __objRest(_b, [\"participant\", \"trackRef\"]);\n  var _a2, _b2;\n  const [volumeBars, setVolumeBars] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n  const svgWidth = 200;\n  const svgHeight = 90;\n  const barWidth = 6;\n  const barSpacing = 4;\n  const volMultiplier = 50;\n  const barCount = 7;\n  const p = (_a2 = useMaybeParticipantContext()) != null ? _a2 : participant;\n  let ref = (_b2 = useMaybeTrackRefContext()) != null ? _b2 : trackRef;\n  if (!ref) {\n    if (!p) {\n      throw Error(`Participant missing, provide it directly or within a context`);\n    }\n    ref = { participant: p, source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone };\n  }\n  const { track } = useTrack(ref);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!track || !(track instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.LocalAudioTrack || track instanceof livekit_client__WEBPACK_IMPORTED_MODULE_4__.RemoteAudioTrack)) {\n      return;\n    }\n    const { analyser, cleanup } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.createAudioAnalyser)(track, {\n      smoothingTimeConstant: 0.8,\n      fftSize: 64\n    });\n    const dataArray = new Uint8Array(analyser.frequencyBinCount);\n    const calculateBars = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const sums = new Array(barCount).fill(0);\n      dataArray.slice(1);\n      const binSize = 6;\n      for (let i = 0; i < barCount / 2; i += 1) {\n        const id = Math.floor(barCount / 2 - i);\n        for (let k = 0; k < binSize; k += 1) {\n          sums[id] += Math.pow(dataArray[i * binSize + k] / 255, 2);\n        }\n        sums[id] /= binSize;\n      }\n      for (let i = 0; i < barCount / 2; i += 1) {\n        const id = Math.floor(barCount / 2 + i);\n        if (sums[id] !== 0) {\n          continue;\n        }\n        for (let k = 0; k < binSize; k += 1) {\n          sums[id] += Math.pow(dataArray[i * binSize + k] / 255, 2);\n        }\n        sums[id] /= binSize;\n      }\n      return sums.map((s) => s * volMultiplier);\n    };\n    const calcInterval = setInterval(() => {\n      const bars = calculateBars();\n      setVolumeBars(bars);\n    }, 100);\n    return () => {\n      clearInterval(calcInterval);\n      cleanup();\n    };\n  }, [track]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"svg\",\n    __spreadProps(__spreadValues({\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: `0 0 ${svgWidth} ${svgHeight}`\n    }, props), {\n      className: \"lk-audio-visualizer\"\n    }),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\" }),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      \"g\",\n      {\n        style: {\n          transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`\n        }\n      },\n      volumeBars.map((vol, idx) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        \"rect\",\n        {\n          key: idx,\n          x: idx * (barWidth + barSpacing),\n          y: svgHeight / 2 - vol / 2,\n          width: barWidth,\n          height: vol\n        }\n      ))\n    )\n  );\n}\n\n// src/components/ParticipantLoop.tsx\n\nfunction ParticipantLoop(_a) {\n  var _b = _a, { participants } = _b, props = __objRest(_b, [\"participants\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, participants.map((participant) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantContext.Provider, { value: participant, key: participant.identity }, cloneSingleChild(props.children))));\n}\n\n// src/components/RoomAudioRenderer.tsx\n\n\n\nfunction RoomAudioRenderer({ volume, muted }) {\n  const tracks = useTracks(\n    [livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone, livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShareAudio, livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Unknown],\n    {\n      updateOnlyOn: [],\n      onlySubscribed: false\n    }\n  ).filter((ref) => !(0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isLocal)(ref.participant) && ref.publication.kind === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Kind.Audio);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    for (const track of tracks) {\n      track.publication.setSubscribed(true);\n    }\n  }, [tracks]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: { display: \"none\" } }, tracks.map((trackRef) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    AudioTrack,\n    {\n      key: (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.getTrackReferenceId)(trackRef),\n      trackRef,\n      volume,\n      muted\n    }\n  )));\n}\n\n// src/components/RoomName.tsx\n\nfunction RoomName(_a) {\n  var _b = _a, {\n    childrenPosition = \"before\",\n    children\n  } = _b, htmlAttributes = __objRest(_b, [\n    \"childrenPosition\",\n    \"children\"\n  ]);\n  const { name } = useRoomInfo();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({}, htmlAttributes), childrenPosition === \"before\" && children, name, childrenPosition === \"after\" && children);\n}\n\n// src/components/Toast.tsx\n\nfunction Toast(props) {\n  const htmlProps = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => mergeProps2(props, { className: \"lk-toast\" }), [props]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, htmlProps), props.children);\n}\n\n// src/components/participant/ParticipantAudioTile.tsx\n\n\nfunction ParticipantAudioTile(_a) {\n  var _b = _a, {\n    participant,\n    children,\n    source,\n    publication,\n    disableSpeakingIndicator,\n    onParticipantClick\n  } = _b, htmlProps = __objRest(_b, [\n    \"participant\",\n    \"children\",\n    \"source\",\n    \"publication\",\n    \"disableSpeakingIndicator\",\n    \"onParticipantClick\"\n  ]);\n  const p = useEnsureParticipant(participant);\n  const { elementProps } = useParticipantTile({\n    participant: p,\n    htmlProps,\n    disableSpeakingIndicator,\n    source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone,\n    publication,\n    onParticipantClick\n  });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ style: { position: \"relative\" } }, elementProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantContextIfNeeded, { participant: p }, children != null ? children : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioTrack, { source: source != null ? source : livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioVisualizer, null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-participant-metadata\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-participant-metadata-item\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackMutedIndicator, { source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantName, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConnectionQualityIndicator, { className: \"lk-participant-metadata-item\" })))));\n}\n\n// src/components/ConnectionStateToast.tsx\n\n\nfunction ConnectionStateToast(props) {\n  const [notification, setNotification] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0);\n  const state = useConnectionState(props.room);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    switch (state) {\n      case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Reconnecting:\n        setNotification(\n          /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SpinnerIcon_default, { className: \"lk-spinner\" }), \" Reconnecting\")\n        );\n        break;\n      case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Connecting:\n        setNotification(\n          /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SpinnerIcon_default, { className: \"lk-spinner\" }), \" Connecting\")\n        );\n        break;\n      case livekit_client__WEBPACK_IMPORTED_MODULE_4__.ConnectionState.Disconnected:\n        setNotification(/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, \"Disconnected\"));\n        break;\n      default:\n        setNotification(void 0);\n        break;\n    }\n  }, [state]);\n  return notification ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Toast, { className: \"lk-toast-connection-state\" }, notification) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n}\n\n// src/components/ChatEntry.tsx\n\n\nfunction ChatEntry(_a) {\n  var _b = _a, {\n    entry,\n    hideName = false,\n    hideTimestamp = false,\n    messageFormatter\n  } = _b, props = __objRest(_b, [\n    \"entry\",\n    \"hideName\",\n    \"hideTimestamp\",\n    \"messageFormatter\"\n  ]);\n  var _a2, _b2, _c, _d;\n  const formattedMessage = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return messageFormatter ? messageFormatter(entry.message) : entry.message;\n  }, [entry.message, messageFormatter]);\n  const time = new Date(entry.timestamp);\n  const locale = navigator ? navigator.language : \"en-US\";\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"li\",\n    __spreadValues({\n      className: \"lk-chat-entry\",\n      title: time.toLocaleTimeString(locale, { timeStyle: \"full\" }),\n      \"data-lk-message-origin\": ((_a2 = entry.from) == null ? void 0 : _a2.isLocal) ? \"local\" : \"remote\"\n    }, props),\n    (!hideTimestamp || !hideName) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: \"lk-meta-data\" }, !hideName && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", { className: \"lk-participant-name\" }, (_d = (_b2 = entry.from) == null ? void 0 : _b2.name) != null ? _d : (_c = entry.from) == null ? void 0 : _c.identity), !hideTimestamp && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: \"lk-timestamp\" }, time.toLocaleTimeString(locale, { timeStyle: \"short\" }))),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: \"lk-message-body\" }, formattedMessage)\n  );\n}\nfunction formatChatMessageLinks(message) {\n  return (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.tokenize)(message, (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.createDefaultGrammar)()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href = tok.type === `url` ? /^http(s?):\\/\\//.test(content) ? content : `https://${content}` : `mailto:${content}`;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", { className: \"lk-chat-link\", key: i, href, target: \"_blank\", rel: \"noreferrer\" }, content);\n    }\n  });\n}\n\n// src/prefabs/Chat.tsx\n\nfunction Chat(_a) {\n  var _b = _a, {\n    messageFormatter,\n    messageDecoder,\n    messageEncoder,\n    channelTopic\n  } = _b, props = __objRest(_b, [\n    \"messageFormatter\",\n    \"messageDecoder\",\n    \"messageEncoder\",\n    \"channelTopic\"\n  ]);\n  const inputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const ulRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const chatOptions = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return { messageDecoder, messageEncoder, channelTopic };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n  const { send, chatMessages, isSending } = useChat(chatOptions);\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  function handleSubmit(event) {\n    return __async(this, null, function* () {\n      event.preventDefault();\n      if (inputRef.current && inputRef.current.value.trim() !== \"\") {\n        if (send) {\n          yield send(inputRef.current.value);\n          inputRef.current.value = \"\";\n          inputRef.current.focus();\n        }\n      }\n    });\n  }\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a2;\n    if (ulRef) {\n      (_a2 = ulRef.current) == null ? void 0 : _a2.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a2, _b2, _c, _d, _e;\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n    if (((_a2 = layoutContext.widget.state) == null ? void 0 : _a2.showChat) && chatMessages.length > 0 && lastReadMsgAt.current !== ((_b2 = chatMessages[chatMessages.length - 1]) == null ? void 0 : _b2.timestamp)) {\n      lastReadMsgAt.current = (_c = chatMessages[chatMessages.length - 1]) == null ? void 0 : _c.timestamp;\n      return;\n    }\n    const unreadMessageCount = chatMessages.filter(\n      (msg) => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current\n    ).length;\n    const { widget } = layoutContext;\n    if (unreadMessageCount > 0 && ((_d = widget.state) == null ? void 0 : _d.unreadMessages) !== unreadMessageCount) {\n      (_e = widget.dispatch) == null ? void 0 : _e.call(widget, { msg: \"unread_msg\", count: unreadMessageCount });\n    }\n  }, [chatMessages, layoutContext == null ? void 0 : layoutContext.widget]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadProps(__spreadValues({}, props), { className: \"lk-chat\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", { className: \"lk-list lk-chat-messages\", ref: ulRef }, props.children ? chatMessages.map(\n    (msg, idx) => cloneSingleChild(props.children, {\n      entry: msg,\n      key: idx,\n      messageFormatter\n    })\n  ) : chatMessages.map((msg, idx, allMsg) => {\n    const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n    const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 6e4;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      ChatEntry,\n      {\n        key: idx,\n        hideName,\n        hideTimestamp: hideName === false ? false : hideTimestamp,\n        entry: msg,\n        messageFormatter\n      }\n    );\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"form\", { className: \"lk-chat-form\", onSubmit: handleSubmit }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"input\",\n    {\n      className: \"lk-form-control lk-chat-form-input\",\n      disabled: isSending,\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Enter a message...\"\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { type: \"submit\", className: \"lk-button lk-chat-form-button\", disabled: isSending }, \"Send\")));\n}\n\n// src/prefabs/PreJoin.tsx\n\n\n\n// src/prefabs/MediaDeviceMenu.tsx\n\n\n\nfunction MediaDeviceMenu(_a) {\n  var _b = _a, {\n    kind,\n    initialSelection,\n    onActiveDeviceChange,\n    tracks,\n    requestPermissions = false\n  } = _b, props = __objRest(_b, [\n    \"kind\",\n    \"initialSelection\",\n    \"onActiveDeviceChange\",\n    \"tracks\",\n    \"requestPermissions\"\n  ]);\n  const [isOpen, setIsOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [devices, setDevices] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n  const [updateRequired, setUpdateRequired] = react__WEBPACK_IMPORTED_MODULE_0__.useState(true);\n  const handleActiveDeviceChange = (kind2, deviceId) => {\n    _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"handle device change\");\n    setIsOpen(false);\n    onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(kind2, deviceId);\n  };\n  const button = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const tooltip = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.computeMenuPosition)(button.current, tooltip.current).then(({ x, y }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n  const handleClickOutside = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (event) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.wasClickOutside)(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button]\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    window.addEventListener(\"resize\", () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n      window.removeEventListener(\"resize\", () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"button\",\n    __spreadProps(__spreadValues({\n      className: \"lk-button lk-button-menu\",\n      \"aria-pressed\": isOpen\n    }, props), {\n      onClick: () => setIsOpen(!isOpen),\n      ref: button\n    }),\n    props.children\n  ), !props.disabled && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"div\",\n    {\n      className: \"lk-device-menu\",\n      ref: tooltip,\n      style: { visibility: isOpen ? \"visible\" : \"hidden\" }\n    },\n    kind ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      MediaDeviceSelect,\n      {\n        initialSelection,\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(kind, deviceId),\n        onDeviceListChange: setDevices,\n        kind,\n        track: tracks == null ? void 0 : tracks[kind],\n        requestPermissions\n      }\n    ) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-device-menu-heading\" }, \"Audio inputs\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      MediaDeviceSelect,\n      {\n        kind: \"audioinput\",\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(\"audioinput\", deviceId),\n        onDeviceListChange: setDevices,\n        track: tracks == null ? void 0 : tracks.audioinput,\n        requestPermissions\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-device-menu-heading\" }, \"Video inputs\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      MediaDeviceSelect,\n      {\n        kind: \"videoinput\",\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(\"videoinput\", deviceId),\n        onDeviceListChange: setDevices,\n        track: tracks == null ? void 0 : tracks.videoinput,\n        requestPermissions\n      }\n    ))\n  ));\n}\n\n// src/prefabs/PreJoin.tsx\n\n\n// src/hooks/useWarnAboutMissingStyles.ts\n\nfunction useWarnAboutMissingStyles() {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n\n// src/prefabs/PreJoin.tsx\nvar DEFAULT_USER_CHOICES = {\n  username: \"\",\n  videoEnabled: true,\n  audioEnabled: true,\n  videoDeviceId: \"default\",\n  audioDeviceId: \"default\",\n  e2ee: false,\n  sharedPassphrase: \"\"\n};\nfunction usePreviewTracks(options, onError) {\n  const [tracks, setTracks] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    let trackPromise = void 0;\n    let needsCleanup = false;\n    if (options.audio || options.video) {\n      trackPromise = (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.createLocalTracks)(options);\n      trackPromise.then((tracks2) => {\n        if (needsCleanup) {\n          tracks2.forEach((tr) => tr.stop());\n        } else {\n          setTracks(tracks2);\n        }\n      }).catch(onError);\n    }\n    return () => {\n      needsCleanup = true;\n      trackPromise == null ? void 0 : trackPromise.then(\n        (tracks2) => tracks2.forEach((track) => {\n          track.stop();\n        })\n      );\n    };\n  }, [JSON.stringify(options)]);\n  return tracks;\n}\nfunction usePreviewDevice(enabled, deviceId, kind) {\n  const [deviceError, setDeviceError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n  const [isCreatingTrack, setIsCreatingTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    void 0\n  );\n  const [localTrack, setLocalTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  const [localDeviceId, setLocalDeviceId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(deviceId);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n  const createTrack = (deviceId2, kind2) => __async(this, null, function* () {\n    try {\n      const track = kind2 === \"videoinput\" ? yield (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.createLocalVideoTrack)({\n        deviceId: deviceId2,\n        resolution: livekit_client__WEBPACK_IMPORTED_MODULE_4__.VideoPresets.h720.resolution\n      }) : yield (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.createLocalAudioTrack)({ deviceId: deviceId2 });\n      const newDeviceId = yield track.getDeviceId();\n      if (newDeviceId && deviceId2 !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  });\n  const switchDevice = (track, id) => __async(this, null, function* () {\n    yield track.setDeviceId(id);\n    prevDeviceId.current = id;\n  });\n  const prevDeviceId = react__WEBPACK_IMPORTED_MODULE_0__.useRef(localDeviceId);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"creating track\", kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(localTrack.mediaStreamTrack));\n    } else if ((selectedDevice == null ? void 0 : selectedDevice.deviceId) && prevDeviceId.current !== (selectedDevice == null ? void 0 : selectedDevice.deviceId)) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setSelectedDevice(devices.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError\n  };\n}\nfunction PreJoin(_a) {\n  var _b = _a, {\n    defaults = {},\n    onValidate,\n    onSubmit,\n    onError,\n    debug,\n    joinLabel = \"Join Room\",\n    micLabel = \"Microphone\",\n    camLabel = \"Camera\",\n    userLabel = \"Username\",\n    showE2EEOptions = false,\n    persistUserChoices = true\n  } = _b, htmlProps = __objRest(_b, [\n    \"defaults\",\n    \"onValidate\",\n    \"onSubmit\",\n    \"onError\",\n    \"debug\",\n    \"joinLabel\",\n    \"micLabel\",\n    \"camLabel\",\n    \"userLabel\",\n    \"showE2EEOptions\",\n    \"persistUserChoices\"\n  ]);\n  var _a2, _b2;\n  const [userChoices, setUserChoices] = react__WEBPACK_IMPORTED_MODULE_0__.useState(DEFAULT_USER_CHOICES);\n  const partialDefaults = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, defaults.audioDeviceId !== void 0 && { audioDeviceId: defaults.audioDeviceId }), defaults.videoDeviceId !== void 0 && { videoDeviceId: defaults.videoDeviceId }), defaults.audioEnabled !== void 0 && { audioEnabled: defaults.audioEnabled }), defaults.videoEnabled !== void 0 && { videoEnabled: defaults.videoEnabled }), defaults.username !== void 0 && { username: defaults.username });\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername\n  } = usePersistentUserChoices({\n    defaults: partialDefaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices\n  });\n  const [audioEnabled, setAudioEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialUserChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialUserChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    initialUserChoices.audioDeviceId\n  );\n  const [videoDeviceId, setVideoDeviceId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    initialUserChoices.videoDeviceId\n  );\n  const [username, setUsername] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialUserChoices.username);\n  const [e2ee, setE2ee] = react__WEBPACK_IMPORTED_MODULE_0__.useState((_a2 = defaults.e2ee) != null ? _a2 : DEFAULT_USER_CHOICES.e2ee);\n  const [sharedPassphrase, setSharedPassphrase] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\n    (_b2 = defaults.sharedPassphrase) != null ? _b2 : DEFAULT_USER_CHOICES.sharedPassphrase\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n  const tracks = usePreviewTracks(\n    {\n      audio: audioEnabled ? { deviceId: initialUserChoices.audioDeviceId } : false,\n      video: videoEnabled ? { deviceId: initialUserChoices.videoDeviceId } : false\n    },\n    onError\n  );\n  const videoEl = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const videoTrack = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => tracks == null ? void 0 : tracks.filter((track) => track.kind === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Kind.Video)[0],\n    [tracks]\n  );\n  const facingMode = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    if (videoTrack) {\n      const { facingMode: facingMode2 } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_4__.facingModeFromLocalTrack)(videoTrack);\n      return facingMode2;\n    } else {\n      return \"undefined\";\n    }\n  }, [videoTrack]);\n  const audioTrack = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => tracks == null ? void 0 : tracks.filter((track) => track.kind === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Kind.Audio)[0],\n    [tracks]\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n    return () => {\n      videoTrack == null ? void 0 : videoTrack.detach();\n    };\n  }, [videoTrack]);\n  const [isValid, setIsValid] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  const handleValidation = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (values) => {\n      if (typeof onValidate === \"function\") {\n        return onValidate(values);\n      } else {\n        return values.username !== \"\";\n      }\n    },\n    [onValidate]\n  );\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId,\n      e2ee,\n      sharedPassphrase\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [\n    username,\n    videoEnabled,\n    handleValidation,\n    audioEnabled,\n    audioDeviceId,\n    videoDeviceId,\n    sharedPassphrase,\n    e2ee\n  ]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === \"function\") {\n        onSubmit(userChoices);\n      }\n    } else {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.warn(\"Validation failed with: \", userChoices);\n    }\n  }\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ className: \"lk-prejoin\" }, htmlProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-video-container\" }, videoTrack && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", { ref: videoEl, width: \"1280\", height: \"720\", \"data-lk-facing-mode\": facingMode }), (!videoTrack || !videoEnabled) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-camera-off-note\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantPlaceholder_default, null))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group-container\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group audio\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    TrackToggle,\n    {\n      initialState: audioEnabled,\n      source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone,\n      onChange: (enabled) => setAudioEnabled(enabled)\n    },\n    micLabel\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MediaDeviceMenu,\n    {\n      initialSelection: audioDeviceId,\n      kind: \"audioinput\",\n      disabled: !audioTrack,\n      tracks: { audioinput: audioTrack },\n      onActiveDeviceChange: (_, id) => setAudioDeviceId(id)\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group video\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    TrackToggle,\n    {\n      initialState: videoEnabled,\n      source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera,\n      onChange: (enabled) => setVideoEnabled(enabled)\n    },\n    camLabel\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MediaDeviceMenu,\n    {\n      initialSelection: videoDeviceId,\n      kind: \"videoinput\",\n      disabled: !videoTrack,\n      tracks: { videoinput: videoTrack },\n      onActiveDeviceChange: (_, id) => setVideoDeviceId(id)\n    }\n  )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"form\", { className: \"lk-username-container\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"input\",\n    {\n      className: \"lk-form-control\",\n      id: \"username\",\n      name: \"username\",\n      type: \"text\",\n      defaultValue: username,\n      placeholder: userLabel,\n      onChange: (inputEl) => setUsername(inputEl.target.value),\n      autoComplete: \"off\"\n    }\n  ), showE2EEOptions && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: { display: \"flex\", flexDirection: \"column\", gap: \"1rem\" } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: { display: \"flex\", flexDirection: \"row\", gap: \"1rem\" } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"input\",\n    {\n      id: \"use-e2ee\",\n      type: \"checkbox\",\n      checked: e2ee,\n      onChange: (ev) => setE2ee(ev.target.checked)\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"label\", { htmlFor: \"use-e2ee\" }, \"Enable end-to-end encryption\")), e2ee && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: { display: \"flex\", flexDirection: \"row\", gap: \"1rem\" } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"label\", { htmlFor: \"passphrase\" }, \"Passphrase\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"input\",\n    {\n      id: \"passphrase\",\n      type: \"password\",\n      value: sharedPassphrase,\n      onChange: (ev) => setSharedPassphrase(ev.target.value)\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"button\",\n    {\n      className: \"lk-button lk-join-button\",\n      type: \"submit\",\n      onClick: handleSubmit,\n      disabled: !isValid\n    },\n    joinLabel\n  )), debug && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", null, \"User Choices:\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", { className: \"lk-list\", style: { overflow: \"hidden\", maxWidth: \"15rem\" } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", null, \"Username: \", `${userChoices.username}`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", null, \"Video Enabled: \", `${userChoices.videoEnabled}`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", null, \"Audio Enabled: \", `${userChoices.audioEnabled}`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", null, \"Video Device: \", `${userChoices.videoDeviceId}`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", null, \"Audio Device: \", `${userChoices.audioDeviceId}`))));\n}\n\n// src/prefabs/VideoConference.tsx\n\n\n\n\n// src/prefabs/ControlBar.tsx\n\n\n\n\n// src/components/controls/StartMediaButton.tsx\n\nfunction StartMediaButton(_a) {\n  var _b = _a, { label } = _b, props = __objRest(_b, [\"label\"]);\n  const room = useRoomContext();\n  const { mergedProps: audioProps, canPlayAudio } = useStartAudio({ room, props });\n  const { mergedProps, canPlayVideo } = useStartVideo({ room, props: audioProps });\n  const _a2 = mergedProps, { style } = _a2, restProps = __objRest(_a2, [\"style\"]);\n  style.display = canPlayAudio && canPlayVideo ? \"none\" : \"block\";\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", __spreadValues({ style }, restProps), label != null ? label : `Start ${!canPlayAudio ? \"Audio\" : \"Video\"}`);\n}\n\n// src/prefabs/ControlBar.tsx\nfunction ControlBar(_a) {\n  var _b = _a, {\n    variation,\n    controls,\n    saveUserChoices: saveUserChoices2 = true\n  } = _b, props = __objRest(_b, [\n    \"variation\",\n    \"controls\",\n    \"saveUserChoices\"\n  ]);\n  var _a2, _b2, _c, _d, _e;\n  const [isChatOpen, setIsChatOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a3, _b3;\n    if (((_a3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a3.showChat) !== void 0) {\n      setIsChatOpen((_b3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _b3.showChat);\n    }\n  }, [(_a2 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a2.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1e3 : 760}px)`);\n  const defaultVariation = isTooLittleSpace ? \"minimal\" : \"verbose\";\n  variation != null ? variation : variation = defaultVariation;\n  const visibleControls = __spreadValues({ leave: true }, controls);\n  const localPermissions = useLocalParticipantPermissions();\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    (_b2 = visibleControls.camera) != null ? _b2 : visibleControls.camera = localPermissions.canPublish;\n    (_c = visibleControls.microphone) != null ? _c : visibleControls.microphone = localPermissions.canPublish;\n    (_d = visibleControls.screenShare) != null ? _d : visibleControls.screenShare = localPermissions.canPublish;\n    (_e = visibleControls.chat) != null ? _e : visibleControls.chat = localPermissions.canPublishData && (controls == null ? void 0 : controls.chat);\n  }\n  const showIcon = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => variation === \"minimal\" || variation === \"verbose\",\n    [variation]\n  );\n  const showText = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => variation === \"textOnly\" || variation === \"verbose\",\n    [variation]\n  );\n  const browserSupportsScreenSharing = (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.supportsScreenSharing)();\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const onScreenShareChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (enabled) => {\n      setIsScreenShareEnabled(enabled);\n    },\n    [setIsScreenShareEnabled]\n  );\n  const htmlProps = mergeProps2({ className: \"lk-control-bar\" }, props);\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId\n  } = usePersistentUserChoices({ preventSave: !saveUserChoices2 });\n  const microphoneOnChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (enabled, isUserInitiated) => isUserInitiated ? saveAudioInputEnabled(enabled) : null,\n    [saveAudioInputEnabled]\n  );\n  const cameraOnChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (enabled, isUserInitiated) => isUserInitiated ? saveVideoInputEnabled(enabled) : null,\n    [saveVideoInputEnabled]\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, htmlProps), visibleControls.microphone && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    TrackToggle,\n    {\n      source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Microphone,\n      showIcon,\n      onChange: microphoneOnChange\n    },\n    showText && \"Microphone\"\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MediaDeviceMenu,\n    {\n      kind: \"audioinput\",\n      onActiveDeviceChange: (_kind, deviceId) => saveAudioInputDeviceId(deviceId != null ? deviceId : \"\")\n    }\n  ))), visibleControls.camera && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TrackToggle, { source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera, showIcon, onChange: cameraOnChange }, showText && \"Camera\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MediaDeviceMenu,\n    {\n      kind: \"videoinput\",\n      onActiveDeviceChange: (_kind, deviceId) => saveVideoInputDeviceId(deviceId != null ? deviceId : \"\")\n    }\n  ))), visibleControls.screenShare && browserSupportsScreenSharing && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    TrackToggle,\n    {\n      source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare,\n      captureOptions: { audio: true, selfBrowserSurface: \"include\" },\n      showIcon,\n      onChange: onScreenShareChange\n    },\n    showText && (isScreenShareEnabled ? \"Stop screen share\" : \"Share screen\")\n  ), visibleControls.chat && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ChatToggle, null, showIcon && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ChatIcon_default, null), showText && \"Chat\"), visibleControls.leave && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DisconnectButton, null, showIcon && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LeaveIcon_default, null), showText && \"Leave\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StartMediaButton, null));\n}\n\n// src/prefabs/VideoConference.tsx\nfunction VideoConference(_a) {\n  var _b = _a, {\n    chatMessageFormatter,\n    chatMessageDecoder,\n    chatMessageEncoder\n  } = _b, props = __objRest(_b, [\n    \"chatMessageFormatter\",\n    \"chatMessageDecoder\",\n    \"chatMessageEncoder\"\n  ]);\n  var _a2, _b2;\n  const [widgetState, setWidgetState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    showChat: false,\n    unreadMessages: 0\n  });\n  const lastAutoFocusedScreenShareTrack = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const tracks = useTracks(\n    [\n      { source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.Camera, withPlaceholder: true },\n      { source: livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare, withPlaceholder: false }\n    ],\n    { updateOnlyOn: [livekit_client__WEBPACK_IMPORTED_MODULE_4__.RoomEvent.ActiveSpeakersChanged], onlySubscribed: false }\n  );\n  const widgetUpdate = (state) => {\n    _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"updating widget state\", state);\n    setWidgetState(state);\n  };\n  const layoutContext = useCreateLayoutContext();\n  const screenShareTracks = tracks.filter(_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isTrackReference).filter((track) => track.publication.source === livekit_client__WEBPACK_IMPORTED_MODULE_4__.Track.Source.ScreenShare);\n  const focusTrack = (_a2 = usePinnedTracks(layoutContext)) == null ? void 0 : _a2[0];\n  const carouselTracks = tracks.filter((track) => !(0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isEqualTrackRef)(track, focusTrack));\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var _a3, _b3, _c, _d;\n    if (screenShareTracks.some((track) => track.publication.isSubscribed) && lastAutoFocusedScreenShareTrack.current === null) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"Auto set screen share focus:\", { newScreenShareTrack: screenShareTracks[0] });\n      (_b3 = (_a3 = layoutContext.pin).dispatch) == null ? void 0 : _b3.call(_a3, { msg: \"set_pin\", trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (lastAutoFocusedScreenShareTrack.current && !screenShareTracks.some(\n      (track) => {\n        var _a4, _b4;\n        return track.publication.trackSid === ((_b4 = (_a4 = lastAutoFocusedScreenShareTrack.current) == null ? void 0 : _a4.publication) == null ? void 0 : _b4.trackSid);\n      }\n    )) {\n      _livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.log.debug(\"Auto clearing screen share focus.\");\n      (_d = (_c = layoutContext.pin).dispatch) == null ? void 0 : _d.call(_c, { msg: \"clear_pin\" });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n  }, [\n    screenShareTracks.map((ref) => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`).join(),\n    (_b2 = focusTrack == null ? void 0 : focusTrack.publication) == null ? void 0 : _b2.trackSid\n  ]);\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ className: \"lk-video-conference\" }, props), (0,_livekit_components_core__WEBPACK_IMPORTED_MODULE_2__.isWeb)() && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    LayoutContextProvider,\n    {\n      value: layoutContext,\n      onWidgetChange: widgetUpdate\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-video-conference-inner\" }, !focusTrack ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-grid-layout-wrapper\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GridLayout, { tracks }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantTile, null))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-focus-layout-wrapper\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusLayoutContainer, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselLayout, { tracks: carouselTracks }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantTile, null)), focusTrack && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusLayout, { trackRef: focusTrack }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControlBar, { controls: { chat: true } })),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      Chat,\n      {\n        style: { display: widgetState.showChat ? \"grid\" : \"none\" },\n        messageFormatter: chatMessageFormatter,\n        messageEncoder: chatMessageEncoder,\n        messageDecoder: chatMessageDecoder\n      }\n    )\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RoomAudioRenderer, null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConnectionStateToast, null));\n}\n\n// src/prefabs/AudioConference.tsx\n\nfunction AudioConference(_a) {\n  var props = __objRest(_a, []);\n  const [widgetState, setWidgetState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    showChat: false,\n    unreadMessages: 0\n  });\n  const participants = useParticipants();\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutContextProvider, { onWidgetChange: setWidgetState }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({ className: \"lk-audio-conference\" }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"lk-audio-conference-stage\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantLoop, { participants }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ParticipantAudioTile, null))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    ControlBar,\n    {\n      controls: { microphone: true, screenShare: false, camera: false, chat: true }\n    }\n  ), widgetState.showChat && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Chat, null)));\n}\n\n// src/index.ts\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-react/dist/index.mjs\n");

/***/ })

};
;