/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@prisma";
exports.ids = ["vendor-chunks/@prisma"];
exports.modules = {

/***/ "(ssr)/./node_modules/@prisma/client/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@prisma/client/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\n  ...__webpack_require__(/*! .prisma/client/index */ \"(ssr)/./node_modules/.prisma/client/index.js\"),\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByaXNtYS9jbGllbnQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxLQUFLLG1CQUFPLENBQUMsMEVBQXNCO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVhbS1jaGF0LWFwcGxpY2F0aW9uLy4vbm9kZV9tb2R1bGVzL0BwcmlzbWEvY2xpZW50L2luZGV4LmpzPzAwNjIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIC4uLnJlcXVpcmUoJy5wcmlzbWEvY2xpZW50L2luZGV4JyksXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@prisma/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@prisma/client/runtime/library.js":
/*!********************************************************!*\
  !*** ./node_modules/@prisma/client/runtime/library.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar Au=Object.create;var Kr=Object.defineProperty;var Ru=Object.getOwnPropertyDescriptor;var Mu=Object.getOwnPropertyNames;var Su=Object.getPrototypeOf,Iu=Object.prototype.hasOwnProperty;var Q=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Tt=(e,t)=>{for(var r in t)Kr(e,r,{get:t[r],enumerable:!0})},Ko=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of Mu(t))!Iu.call(e,i)&&i!==r&&Kr(e,i,{get:()=>t[i],enumerable:!(n=Ru(t,i))||n.enumerable});return e};var F=(e,t,r)=>(r=e!=null?Au(Su(e)):{},Ko(t||!e||!e.__esModule?Kr(r,\"default\",{value:e,enumerable:!0}):r,e)),ku=e=>Ko(Kr({},\"__esModule\",{value:!0}),e);var es=Q((Hg,Xo)=>{\"use strict\";var Ct=1e3,At=Ct*60,Rt=At*60,ct=Rt*24,Fu=ct*7,Ou=ct*365.25;Xo.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return Du(e);if(r===\"number\"&&isFinite(e))return t.long?Lu(e):Nu(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))};function Du(e){if(e=String(e),!(e.length>100)){var t=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]),n=(t[2]||\"ms\").toLowerCase();switch(n){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return r*Ou;case\"weeks\":case\"week\":case\"w\":return r*Fu;case\"days\":case\"day\":case\"d\":return r*ct;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return r*Rt;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return r*At;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return r*Ct;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return r;default:return}}}}function Nu(e){var t=Math.abs(e);return t>=ct?Math.round(e/ct)+\"d\":t>=Rt?Math.round(e/Rt)+\"h\":t>=At?Math.round(e/At)+\"m\":t>=Ct?Math.round(e/Ct)+\"s\":e+\"ms\"}function Lu(e){var t=Math.abs(e);return t>=ct?Gr(e,t,ct,\"day\"):t>=Rt?Gr(e,t,Rt,\"hour\"):t>=At?Gr(e,t,At,\"minute\"):t>=Ct?Gr(e,t,Ct,\"second\"):e+\" ms\"}function Gr(e,t,r,n){var i=t>=r*1.5;return Math.round(e/r)+\" \"+n+(i?\"s\":\"\")}});var di=Q((Wg,ts)=>{\"use strict\";function $u(e){r.debug=r,r.default=r,r.coerce=l,r.disable=o,r.enable=i,r.enabled=s,r.humanize=es(),r.destroy=u,Object.keys(e).forEach(c=>{r[c]=e[c]}),r.names=[],r.skips=[],r.formatters={};function t(c){let p=0;for(let d=0;d<c.length;d++)p=(p<<5)-p+c.charCodeAt(d),p|=0;return r.colors[Math.abs(p)%r.colors.length]}r.selectColor=t;function r(c){let p,d=null,f,y;function g(...T){if(!g.enabled)return;let A=g,R=Number(new Date),E=R-(p||R);A.diff=E,A.prev=p,A.curr=R,p=R,T[0]=r.coerce(T[0]),typeof T[0]!=\"string\"&&T.unshift(\"%O\");let S=0;T[0]=T[0].replace(/%([a-zA-Z%])/g,(ee,ut)=>{if(ee===\"%%\")return\"%\";S++;let K=r.formatters[ut];if(typeof K==\"function\"){let ne=T[S];ee=K.call(A,ne),T.splice(S,1),S--}return ee}),r.formatArgs.call(A,T),(A.log||r.log).apply(A,T)}return g.namespace=c,g.useColors=r.useColors(),g.color=r.selectColor(c),g.extend=n,g.destroy=r.destroy,Object.defineProperty(g,\"enabled\",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(f!==r.namespaces&&(f=r.namespaces,y=r.enabled(c)),y),set:T=>{d=T}}),typeof r.init==\"function\"&&r.init(g),g}function n(c,p){let d=r(this.namespace+(typeof p>\"u\"?\":\":p)+c);return d.log=this.log,d}function i(c){r.save(c),r.namespaces=c,r.names=[],r.skips=[];let p,d=(typeof c==\"string\"?c:\"\").split(/[\\s,]+/),f=d.length;for(p=0;p<f;p++)d[p]&&(c=d[p].replace(/\\*/g,\".*?\"),c[0]===\"-\"?r.skips.push(new RegExp(\"^\"+c.slice(1)+\"$\")):r.names.push(new RegExp(\"^\"+c+\"$\")))}function o(){let c=[...r.names.map(a),...r.skips.map(a).map(p=>\"-\"+p)].join(\",\");return r.enable(\"\"),c}function s(c){if(c[c.length-1]===\"*\")return!0;let p,d;for(p=0,d=r.skips.length;p<d;p++)if(r.skips[p].test(c))return!1;for(p=0,d=r.names.length;p<d;p++)if(r.names[p].test(c))return!0;return!1}function a(c){return c.toString().substring(2,c.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}function l(c){return c instanceof Error?c.stack||c.message:c}function u(){console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\")}return r.enable(r.load()),r}ts.exports=$u});var rs=Q((he,Jr)=>{\"use strict\";he.formatArgs=ju;he.save=Vu;he.load=Bu;he.useColors=qu;he.storage=Uu();he.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"))}})();he.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"];function qu(){return typeof window<\"u\"&&window.process&&(window.process.type===\"renderer\"||window.process.__nwjs)?!0:typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)?!1:typeof document<\"u\"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<\"u\"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)}function ju(e){if(e[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+e[0]+(this.useColors?\"%c \":\" \")+\"+\"+Jr.exports.humanize(this.diff),!this.useColors)return;let t=\"color: \"+this.color;e.splice(1,0,t,\"color: inherit\");let r=0,n=0;e[0].replace(/%[a-zA-Z%]/g,i=>{i!==\"%%\"&&(r++,i===\"%c\"&&(n=r))}),e.splice(n,0,t)}he.log=console.debug||console.log||(()=>{});function Vu(e){try{e?he.storage.setItem(\"debug\",e):he.storage.removeItem(\"debug\")}catch{}}function Bu(){let e;try{e=he.storage.getItem(\"debug\")}catch{}return!e&&typeof process<\"u\"&&\"env\"in process&&(e=process.env.DEBUG),e}function Uu(){try{return localStorage}catch{}}Jr.exports=di()(he);var{formatters:Ku}=Jr.exports;Ku.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var mi=Q((zg,ns)=>{\"use strict\";ns.exports=(e,t=process.argv)=>{let r=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\",n=t.indexOf(r+e),i=t.indexOf(\"--\");return n!==-1&&(i===-1||n<i)}});var yi=Q((Yg,os)=>{\"use strict\";var Qu=__webpack_require__(/*! os */ \"os\"),is=__webpack_require__(/*! tty */ \"tty\"),Pe=mi(),{env:J}=process,He;Pe(\"no-color\")||Pe(\"no-colors\")||Pe(\"color=false\")||Pe(\"color=never\")?He=0:(Pe(\"color\")||Pe(\"colors\")||Pe(\"color=true\")||Pe(\"color=always\"))&&(He=1);\"FORCE_COLOR\"in J&&(J.FORCE_COLOR===\"true\"?He=1:J.FORCE_COLOR===\"false\"?He=0:He=J.FORCE_COLOR.length===0?1:Math.min(parseInt(J.FORCE_COLOR,10),3));function fi(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function gi(e,t){if(He===0)return 0;if(Pe(\"color=16m\")||Pe(\"color=full\")||Pe(\"color=truecolor\"))return 3;if(Pe(\"color=256\"))return 2;if(e&&!t&&He===void 0)return 0;let r=He||0;if(J.TERM===\"dumb\")return r;if(process.platform===\"win32\"){let n=Qu.release().split(\".\");return Number(n[0])>=10&&Number(n[2])>=10586?Number(n[2])>=14931?3:2:1}if(\"CI\"in J)return[\"TRAVIS\",\"CIRCLECI\",\"APPVEYOR\",\"GITLAB_CI\",\"GITHUB_ACTIONS\",\"BUILDKITE\"].some(n=>n in J)||J.CI_NAME===\"codeship\"?1:r;if(\"TEAMCITY_VERSION\"in J)return/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(J.TEAMCITY_VERSION)?1:0;if(J.COLORTERM===\"truecolor\")return 3;if(\"TERM_PROGRAM\"in J){let n=parseInt((J.TERM_PROGRAM_VERSION||\"\").split(\".\")[0],10);switch(J.TERM_PROGRAM){case\"iTerm.app\":return n>=3?3:2;case\"Apple_Terminal\":return 2}}return/-256(color)?$/i.test(J.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(J.TERM)||\"COLORTERM\"in J?1:r}function Gu(e){let t=gi(e,e&&e.isTTY);return fi(t)}os.exports={supportsColor:Gu,stdout:fi(gi(!0,is.isatty(1))),stderr:fi(gi(!0,is.isatty(2)))}});var as=Q((te,Wr)=>{\"use strict\";var Ju=__webpack_require__(/*! tty */ \"tty\"),Hr=__webpack_require__(/*! util */ \"util\");te.init=ec;te.log=Yu;te.formatArgs=Wu;te.save=Zu;te.load=Xu;te.useColors=Hu;te.destroy=Hr.deprecate(()=>{},\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");te.colors=[6,2,3,4,5,1];try{let e=yi();e&&(e.stderr||e).level>=2&&(te.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}te.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(i,o)=>o.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function Hu(){return\"colors\"in te.inspectOpts?!!te.inspectOpts.colors:Ju.isatty(process.stderr.fd)}function Wu(e){let{namespace:t,useColors:r}=this;if(r){let n=this.color,i=\"\\x1B[3\"+(n<8?n:\"8;5;\"+n),o=`  ${i};1m${t} \\x1B[0m`;e[0]=o+e[0].split(`\n`).join(`\n`+o),e.push(i+\"m+\"+Wr.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zu()+t+\" \"+e[0]}function zu(){return te.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function Yu(...e){return process.stderr.write(Hr.format(...e)+`\n`)}function Zu(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function Xu(){return process.env.DEBUG}function ec(e){e.inspectOpts={};let t=Object.keys(te.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=te.inspectOpts[t[r]]}Wr.exports=di()(te);var{formatters:ss}=Wr.exports;ss.o=function(e){return this.inspectOpts.colors=this.useColors,Hr.inspect(e,this.inspectOpts).split(`\n`).map(t=>t.trim()).join(\" \")};ss.O=function(e){return this.inspectOpts.colors=this.useColors,Hr.inspect(e,this.inspectOpts)}});var ls=Q((Zg,hi)=>{\"use strict\";typeof process>\"u\"||process.type===\"renderer\"||false===!0||process.__nwjs?hi.exports=rs():hi.exports=as()});var bs=Q((Fy,_i)=>{\"use strict\";var M=_i.exports;_i.exports.default=M;var D=\"\\x1B[\",er=\"\\x1B]\",It=\"\\x07\",rn=\";\",hs=process.env.TERM_PROGRAM===\"Apple_Terminal\";M.cursorTo=(e,t)=>{if(typeof e!=\"number\")throw new TypeError(\"The `x` argument is required\");return typeof t!=\"number\"?D+(e+1)+\"G\":D+(t+1)+\";\"+(e+1)+\"H\"};M.cursorMove=(e,t)=>{if(typeof e!=\"number\")throw new TypeError(\"The `x` argument is required\");let r=\"\";return e<0?r+=D+-e+\"D\":e>0&&(r+=D+e+\"C\"),t<0?r+=D+-t+\"A\":t>0&&(r+=D+t+\"B\"),r};M.cursorUp=(e=1)=>D+e+\"A\";M.cursorDown=(e=1)=>D+e+\"B\";M.cursorForward=(e=1)=>D+e+\"C\";M.cursorBackward=(e=1)=>D+e+\"D\";M.cursorLeft=D+\"G\";M.cursorSavePosition=hs?\"\\x1B7\":D+\"s\";M.cursorRestorePosition=hs?\"\\x1B8\":D+\"u\";M.cursorGetPosition=D+\"6n\";M.cursorNextLine=D+\"E\";M.cursorPrevLine=D+\"F\";M.cursorHide=D+\"?25l\";M.cursorShow=D+\"?25h\";M.eraseLines=e=>{let t=\"\";for(let r=0;r<e;r++)t+=M.eraseLine+(r<e-1?M.cursorUp():\"\");return e&&(t+=M.cursorLeft),t};M.eraseEndLine=D+\"K\";M.eraseStartLine=D+\"1K\";M.eraseLine=D+\"2K\";M.eraseDown=D+\"J\";M.eraseUp=D+\"1J\";M.eraseScreen=D+\"2J\";M.scrollUp=D+\"S\";M.scrollDown=D+\"T\";M.clearScreen=\"\\x1Bc\";M.clearTerminal=process.platform===\"win32\"?`${M.eraseScreen}${D}0f`:`${M.eraseScreen}${D}3J${D}H`;M.beep=It;M.link=(e,t)=>[er,\"8\",rn,rn,t,It,e,er,\"8\",rn,rn,It].join(\"\");M.image=(e,t={})=>{let r=`${er}1337;File=inline=1`;return t.width&&(r+=`;width=${t.width}`),t.height&&(r+=`;height=${t.height}`),t.preserveAspectRatio===!1&&(r+=\";preserveAspectRatio=0\"),r+\":\"+e.toString(\"base64\")+It};M.iTerm={setCwd:(e=process.cwd())=>`${er}50;CurrentDir=${e}${It}`,annotation:(e,t={})=>{let r=`${er}1337;`,n=typeof t.x<\"u\",i=typeof t.y<\"u\";if((n||i)&&!(n&&i&&typeof t.length<\"u\"))throw new Error(\"`x`, `y` and `length` must be defined when `x` or `y` is defined\");return e=e.replace(/\\|/g,\"\"),r+=t.isHidden?\"AddHiddenAnnotation=\":\"AddAnnotation=\",t.length>0?r+=(n?[e,t.length,t.x,t.y]:[t.length,e]).join(\"|\"):r+=e,r+It}}});var Es=Q((Oy,ws)=>{\"use strict\";var ac=yi(),kt=mi();function xs(e){if(/^\\d{3,4}$/.test(e)){let r=/(\\d{1,2})(\\d{2})/.exec(e);return{major:0,minor:parseInt(r[1],10),patch:parseInt(r[2],10)}}let t=(e||\"\").split(\".\").map(r=>parseInt(r,10));return{major:t[0],minor:t[1],patch:t[2]}}function Ti(e){let{env:t}=process;if(\"FORCE_HYPERLINK\"in t)return!(t.FORCE_HYPERLINK.length>0&&parseInt(t.FORCE_HYPERLINK,10)===0);if(kt(\"no-hyperlink\")||kt(\"no-hyperlinks\")||kt(\"hyperlink=false\")||kt(\"hyperlink=never\"))return!1;if(kt(\"hyperlink=true\")||kt(\"hyperlink=always\")||\"NETLIFY\"in t)return!0;if(!ac.supportsColor(e)||e&&!e.isTTY||process.platform===\"win32\"||\"CI\"in t||\"TEAMCITY_VERSION\"in t)return!1;if(\"TERM_PROGRAM\"in t){let r=xs(t.TERM_PROGRAM_VERSION);switch(t.TERM_PROGRAM){case\"iTerm.app\":return r.major===3?r.minor>=1:r.major>3;case\"WezTerm\":return r.major>=20200620;case\"vscode\":return r.major>1||r.major===1&&r.minor>=72}}if(\"VTE_VERSION\"in t){if(t.VTE_VERSION===\"0.50.0\")return!1;let r=xs(t.VTE_VERSION);return r.major>0||r.minor>=50}return!1}ws.exports={supportsHyperlink:Ti,stdout:Ti(process.stdout),stderr:Ti(process.stderr)}});var vs=Q((Dy,tr)=>{\"use strict\";var lc=bs(),Ci=Es(),Ps=(e,t,{target:r=\"stdout\",...n}={})=>Ci[r]?lc.link(e,t):n.fallback===!1?e:typeof n.fallback==\"function\"?n.fallback(e,t):`${e} (\\u200B${t}\\u200B)`;tr.exports=(e,t,r={})=>Ps(e,t,r);tr.exports.stderr=(e,t,r={})=>Ps(e,t,{target:\"stderr\",...r});tr.exports.isSupported=Ci.stdout;tr.exports.stderr.isSupported=Ci.stderr});var Fs=Q((Xy,vc)=>{vc.exports={name:\"dotenv\",version:\"16.0.3\",description:\"Loads environment variables from .env file\",main:\"lib/main.js\",types:\"lib/main.d.ts\",exports:{\".\":{require:\"./lib/main.js\",types:\"./lib/main.d.ts\",default:\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},scripts:{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",lint:\"standard\",\"lint-readme\":\"standard-markdown\",pretest:\"npm run lint && npm run dts-check\",test:\"tap tests/*.js --100 -Rspec\",prerelease:\"npm test\",release:\"standard-version\"},repository:{type:\"git\",url:\"git://github.com/motdotla/dotenv.git\"},keywords:[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],readmeFilename:\"README.md\",license:\"BSD-2-Clause\",devDependencies:{\"@types/node\":\"^17.0.9\",decache:\"^4.6.1\",dtslint:\"^3.7.0\",sinon:\"^12.0.1\",standard:\"^16.0.4\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.3.2\",tap:\"^15.1.6\",tar:\"^6.1.11\",typescript:\"^4.5.4\"},engines:{node:\">=12\"}}});var Ds=Q((eh,ln)=>{\"use strict\";var _c=__webpack_require__(/*! fs */ \"fs\"),Os=__webpack_require__(/*! path */ \"path\"),Tc=__webpack_require__(/*! os */ \"os\"),Cc=Fs(),Ac=Cc.version,Rc=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg;function Mc(e){let t={},r=e.toString();r=r.replace(/\\r\\n?/mg,`\n`);let n;for(;(n=Rc.exec(r))!=null;){let i=n[1],o=n[2]||\"\";o=o.trim();let s=o[0];o=o.replace(/^(['\"`])([\\s\\S]*)\\1$/mg,\"$2\"),s==='\"'&&(o=o.replace(/\\\\n/g,`\n`),o=o.replace(/\\\\r/g,\"\\r\")),t[i]=o}return t}function Si(e){console.log(`[dotenv@${Ac}][DEBUG] ${e}`)}function Sc(e){return e[0]===\"~\"?Os.join(Tc.homedir(),e.slice(1)):e}function Ic(e){let t=Os.resolve(process.cwd(),\".env\"),r=\"utf8\",n=!!(e&&e.debug),i=!!(e&&e.override);e&&(e.path!=null&&(t=Sc(e.path)),e.encoding!=null&&(r=e.encoding));try{let o=an.parse(_c.readFileSync(t,{encoding:r}));return Object.keys(o).forEach(function(s){Object.prototype.hasOwnProperty.call(process.env,s)?(i===!0&&(process.env[s]=o[s]),n&&Si(i===!0?`\"${s}\" is already defined in \\`process.env\\` and WAS overwritten`:`\"${s}\" is already defined in \\`process.env\\` and was NOT overwritten`)):process.env[s]=o[s]}),{parsed:o}}catch(o){return n&&Si(`Failed to load ${t} ${o.message}`),{error:o}}}var an={config:Ic,parse:Mc};ln.exports.config=an.config;ln.exports.parse=an.parse;ln.exports=an});var Vs=Q((ah,js)=>{\"use strict\";js.exports=e=>{let t=e.match(/^[ \\t]*(?=\\S)/gm);return t?t.reduce((r,n)=>Math.min(r,n.length),1/0):0}});var Us=Q((lh,Bs)=>{\"use strict\";var Dc=Vs();Bs.exports=e=>{let t=Dc(e);if(t===0)return e;let r=new RegExp(`^[ \\\\t]{${t}}`,\"gm\");return e.replace(r,\"\")}});var Ks=Q((uh,Nc)=>{Nc.exports={name:\"@prisma/engines-version\",version:\"5.7.1-1.0ca5ccbcfa6bdc81c003cf549abe4269f59c41e5\",main:\"index.js\",types:\"index.d.ts\",license:\"Apache-2.0\",author:\"Tim Suchanek <suchanek@prisma.io>\",prisma:{enginesVersion:\"0ca5ccbcfa6bdc81c003cf549abe4269f59c41e5\"},repository:{type:\"git\",url:\"https://github.com/prisma/engines-wrapper.git\",directory:\"packages/engines-version\"},devDependencies:{\"@types/node\":\"18.19.3\",typescript:\"4.9.5\"},files:[\"index.js\",\"index.d.ts\"],scripts:{build:\"tsc -d\"}}});var Fi=Q(cn=>{\"use strict\";Object.defineProperty(cn,\"__esModule\",{value:!0});cn.enginesVersion=void 0;cn.enginesVersion=Ks().prisma.enginesVersion});var $i=Q((Mh,Js)=>{\"use strict\";Js.exports=(e,t=1,r)=>{if(r={indent:\" \",includeEmptyLines:!1,...r},typeof e!=\"string\")throw new TypeError(`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof e}\\``);if(typeof t!=\"number\")throw new TypeError(`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof t}\\``);if(typeof r.indent!=\"string\")throw new TypeError(`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof r.indent}\\``);if(t===0)return e;let n=r.includeEmptyLines?/^/gm:/^(?!\\s*$)/gm;return e.replace(n,r.indent.repeat(t))}});var Ys=Q((kh,zs)=>{\"use strict\";zs.exports=({onlyFirst:e=!1}={})=>{let t=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");return new RegExp(t,e?void 0:\"g\")}});var Bi=Q((Fh,Zs)=>{\"use strict\";var Gc=Ys();Zs.exports=e=>typeof e==\"string\"?e.replace(Gc(),\"\"):e});var Xs=Q((Nh,dn)=>{\"use strict\";dn.exports=(e={})=>{let t;if(e.repoUrl)t=e.repoUrl;else if(e.user&&e.repo)t=`https://github.com/${e.user}/${e.repo}`;else throw new Error(\"You need to specify either the `repoUrl` option or both the `user` and `repo` options\");let r=new URL(`${t}/issues/new`),n=[\"body\",\"title\",\"labels\",\"template\",\"milestone\",\"assignee\",\"projects\"];for(let i of n){let o=e[i];if(o!==void 0){if(i===\"labels\"||i===\"projects\"){if(!Array.isArray(o))throw new TypeError(`The \\`${i}\\` option should be an array`);o=o.join(\",\")}r.searchParams.set(i,o)}}return r.toString()};dn.exports.default=dn.exports});var Do=Q((w_,Ol)=>{\"use strict\";Ol.exports=function(){function e(t,r,n,i,o){return t<r||n<r?t>n?n+1:t+1:i===o?r:r+1}return function(t,r){if(t===r)return 0;if(t.length>r.length){var n=t;t=r,r=n}for(var i=t.length,o=r.length;i>0&&t.charCodeAt(i-1)===r.charCodeAt(o-1);)i--,o--;for(var s=0;s<i&&t.charCodeAt(s)===r.charCodeAt(s);)s++;if(i-=s,o-=s,i===0||o<3)return o;var a=0,l,u,c,p,d,f,y,g,T,A,R,E,S=[];for(l=0;l<i;l++)S.push(l+1),S.push(t.charCodeAt(s+l));for(var we=S.length-1;a<o-3;)for(T=r.charCodeAt(s+(u=a)),A=r.charCodeAt(s+(c=a+1)),R=r.charCodeAt(s+(p=a+2)),E=r.charCodeAt(s+(d=a+3)),f=a+=4,l=0;l<we;l+=2)y=S[l],g=S[l+1],u=e(y,u,c,T,g),c=e(u,c,p,A,g),p=e(c,p,d,R,g),f=e(p,d,f,E,g),S[l]=f,d=p,p=c,c=u,u=y;for(;a<o;)for(T=r.charCodeAt(s+(u=a)),f=++a,l=0;l<we;l+=2)y=S[l],S[l]=f=e(y,u,f,T,S[l+1]),u=y;return f}}()});var Ng={};Tt(Ng,{DMMF:()=>Ee,DMMFClass:()=>Qr,Debug:()=>bi,Decimal:()=>Ne,Extensions:()=>li,MetricsClient:()=>Dt,NotFoundError:()=>Be,ObjectEnumValue:()=>ke,PrismaClientInitializationError:()=>k,PrismaClientKnownRequestError:()=>H,PrismaClientRustPanicError:()=>be,PrismaClientUnknownRequestError:()=>W,PrismaClientValidationError:()=>se,Public:()=>ui,Sql:()=>me,Types:()=>ci,defineDmmfProperty:()=>ta,detectRuntime:()=>xl,empty:()=>na,getPrismaClient:()=>_u,itxClientDenyList:()=>Ji,join:()=>ra,makeStrictEnum:()=>Tu,objectEnumNames:()=>Wc,objectEnumValues:()=>fn,raw:()=>Zi,sqltag:()=>Xi,warnEnvConflicts:()=>Cu,warnOnce:()=>lr});module.exports=ku(Ng);var li={};Tt(li,{defineExtension:()=>Qo,getExtensionContext:()=>Go});function Qo(e){return typeof e==\"function\"?e:t=>t.$extends(e)}function Go(e){return e}var ui={};Tt(ui,{validator:()=>Jo});function Jo(...e){return t=>t}var ci={};Tt(ci,{Extensions:()=>Ho,Public:()=>Wo,Result:()=>zo,Utils:()=>Yo});var Ho={};var Wo={};var zo={};var Yo={};var Je=(e,t)=>{let r={};for(let n of e){let i=n[t];r[i]=n}return r};function Zo(e){return e.substring(0,1).toLowerCase()+e.substring(1)}var Qr=class{constructor(t){this.document=t;this.compositeNames=new Set(this.datamodel.types.map(r=>r.name)),this.typeAndModelMap=this.buildTypeModelMap(),this.mappingsMap=this.buildMappingsMap(),this.outputTypeMap=this.buildMergedOutputTypeMap(),this.rootFieldMap=this.buildRootFieldMap(),this.inputTypesByName=this.buildInputTypesMap()}get datamodel(){return this.document.datamodel}get mappings(){return this.document.mappings}get schema(){return this.document.schema}get inputObjectTypes(){return this.schema.inputObjectTypes}get outputObjectTypes(){return this.schema.outputObjectTypes}isComposite(t){return this.compositeNames.has(t)}getOtherOperationNames(){return[Object.values(this.mappings.otherOperations.write),Object.values(this.mappings.otherOperations.read)].flat()}hasEnumInNamespace(t,r){return this.schema.enumTypes[r]?.find(n=>n.name===t)!==void 0}resolveInputObjectType(t){return this.inputTypesByName.get(pi(t.type,t.namespace))}resolveOutputObjectType(t){if(t.location===\"outputObjectTypes\")return this.outputObjectTypes[t.namespace??\"prisma\"].find(r=>r.name===t.type)}buildModelMap(){return Je(this.datamodel.models,\"name\")}buildTypeMap(){return Je(this.datamodel.types,\"name\")}buildTypeModelMap(){return{...this.buildTypeMap(),...this.buildModelMap()}}buildMappingsMap(){return Je(this.mappings.modelOperations,\"model\")}buildMergedOutputTypeMap(){return{model:Je(this.schema.outputObjectTypes.model,\"name\"),prisma:Je(this.schema.outputObjectTypes.prisma,\"name\")}}buildRootFieldMap(){return{...Je(this.outputTypeMap.prisma.Query.fields,\"name\"),...Je(this.outputTypeMap.prisma.Mutation.fields,\"name\")}}buildInputTypesMap(){let t=new Map;for(let r of this.inputObjectTypes.prisma)t.set(pi(r.name,\"prisma\"),r);if(!this.inputObjectTypes.model)return t;for(let r of this.inputObjectTypes.model)t.set(pi(r.name,\"model\"),r);return t}};function pi(e,t){return t?`${t}.${e}`:e}var Ee;(t=>{let e;(E=>(E.findUnique=\"findUnique\",E.findUniqueOrThrow=\"findUniqueOrThrow\",E.findFirst=\"findFirst\",E.findFirstOrThrow=\"findFirstOrThrow\",E.findMany=\"findMany\",E.create=\"create\",E.createMany=\"createMany\",E.update=\"update\",E.updateMany=\"updateMany\",E.upsert=\"upsert\",E.delete=\"delete\",E.deleteMany=\"deleteMany\",E.groupBy=\"groupBy\",E.count=\"count\",E.aggregate=\"aggregate\",E.findRaw=\"findRaw\",E.aggregateRaw=\"aggregateRaw\"))(e=t.ModelAction||(t.ModelAction={}))})(Ee||(Ee={}));var zr=F(ls()),tc=100,Zt=[];typeof process<\"u\"&&typeof process.stderr?.write!=\"function\"&&(zr.default.log=console.debug??console.log);function rc(e){let t=(0,zr.default)(e),r=Object.assign((...n)=>(t.log=r.log,n.length!==0&&Zt.push([e,...n]),Zt.length>tc&&Zt.shift(),t(\"\",...n)),t);return r}var bi=Object.assign(rc,zr.default);function us(e=7500){let t=Zt.map(r=>r.map(n=>typeof n==\"string\"?n:JSON.stringify(n)).join(\" \")).join(`\n`);return t.length<e?t:t.slice(-e)}function cs(){Zt.length=0}var $=bi;var xi,ps,ds,ms,fs=!0;typeof process<\"u\"&&({FORCE_COLOR:xi,NODE_DISABLE_COLORS:ps,NO_COLOR:ds,TERM:ms}=process.env||{},fs=process.stdout&&process.stdout.isTTY);var nc={enabled:!ps&&ds==null&&ms!==\"dumb\"&&(xi!=null&&xi!==\"0\"||fs)};function q(e,t){let r=new RegExp(`\\\\x1b\\\\[${t}m`,\"g\"),n=`\\x1B[${e}m`,i=`\\x1B[${t}m`;return function(o){return!nc.enabled||o==null?o:n+(~(\"\"+o).indexOf(i)?o.replace(r,i+n):o)+i}}var ey=q(0,0),pe=q(1,22),We=q(2,22),ty=q(3,23),ue=q(4,24),ry=q(7,27),ny=q(8,28),iy=q(9,29),oy=q(30,39),ve=q(31,39),pt=q(32,39),Re=q(33,39),Mt=q(34,39),sy=q(35,39),ze=q(36,39),ay=q(37,39),Yr=q(90,39),ly=q(90,39),uy=q(40,49),cy=q(41,49),py=q(42,49),dy=q(43,49),my=q(44,49),fy=q(45,49),gy=q(46,49),yy=q(47,49);var gs=F(__webpack_require__(/*! fs */ \"fs\"));function wi(){let e=process.env.PRISMA_QUERY_ENGINE_LIBRARY;if(!(e&&gs.default.existsSync(e))&&process.arch===\"ia32\")throw new Error('The default query engine type (Node-API, \"library\") is currently not supported for 32bit Node. Please set `engineType = \"binary\"` in the \"generator\" block of your \"schema.prisma\" file (or use the environment variables \"PRISMA_CLIENT_ENGINE_TYPE=binary\" and/or \"PRISMA_CLI_QUERY_ENGINE_TYPE=binary\".)')}var Zr=\"libquery_engine\";function Xr(e,t){let r=t===\"url\";return e.includes(\"windows\")?r?\"query_engine.dll.node\":`query_engine-${e}.dll.node`:e.includes(\"darwin\")?r?`${Zr}.dylib.node`:`${Zr}-${e}.dylib.node`:r?`${Zr}.so.node`:`${Zr}-${e}.so.node`}var As=F(__webpack_require__(/*! child_process */ \"child_process\")),Ai=F(__webpack_require__(/*! fs/promises */ \"fs/promises\")),on=F(__webpack_require__(/*! os */ \"os\"));var Ve=Symbol.for(\"@ts-pattern/matcher\"),ic=Symbol.for(\"@ts-pattern/isVariadic\"),tn=\"@ts-pattern/anonymous-select-key\",Ei=e=>!!(e&&typeof e==\"object\"),en=e=>e&&!!e[Ve],Ie=(e,t,r)=>{if(en(e)){let n=e[Ve](),{matched:i,selections:o}=n.match(t);return i&&o&&Object.keys(o).forEach(s=>r(s,o[s])),i}if(Ei(e)){if(!Ei(t))return!1;if(Array.isArray(e)){if(!Array.isArray(t))return!1;let n=[],i=[],o=[];for(let s of e.keys()){let a=e[s];en(a)&&a[ic]?o.push(a):o.length?i.push(a):n.push(a)}if(o.length){if(o.length>1)throw new Error(\"Pattern error: Using `...P.array(...)` several times in a single pattern is not allowed.\");if(t.length<n.length+i.length)return!1;let s=t.slice(0,n.length),a=i.length===0?[]:t.slice(-i.length),l=t.slice(n.length,i.length===0?1/0:-i.length);return n.every((u,c)=>Ie(u,s[c],r))&&i.every((u,c)=>Ie(u,a[c],r))&&(o.length===0||Ie(o[0],l,r))}return e.length===t.length&&e.every((s,a)=>Ie(s,t[a],r))}return Object.keys(e).every(n=>{let i=e[n];return(n in t||en(o=i)&&o[Ve]().matcherType===\"optional\")&&Ie(i,t[n],r);var o})}return Object.is(t,e)},Xe=e=>{var t,r,n;return Ei(e)?en(e)?(t=(r=(n=e[Ve]()).getSelectionKeys)==null?void 0:r.call(n))!=null?t:[]:Array.isArray(e)?Xt(e,Xe):Xt(Object.values(e),Xe):[]},Xt=(e,t)=>e.reduce((r,n)=>r.concat(t(n)),[]);function _e(e){return Object.assign(e,{optional:()=>oc(e),and:t=>B(e,t),or:t=>sc(e,t),select:t=>t===void 0?ys(e):ys(t,e)})}function oc(e){return _e({[Ve]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return t===void 0?(Xe(e).forEach(i=>n(i,void 0)),{matched:!0,selections:r}):{matched:Ie(e,t,n),selections:r}},getSelectionKeys:()=>Xe(e),matcherType:\"optional\"})})}function B(...e){return _e({[Ve]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return{matched:e.every(i=>Ie(i,t,n)),selections:r}},getSelectionKeys:()=>Xt(e,Xe),matcherType:\"and\"})})}function sc(...e){return _e({[Ve]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return Xt(e,Xe).forEach(i=>n(i,void 0)),{matched:e.some(i=>Ie(i,t,n)),selections:r}},getSelectionKeys:()=>Xt(e,Xe),matcherType:\"or\"})})}function O(e){return{[Ve]:()=>({match:t=>({matched:!!e(t)})})}}function ys(...e){let t=typeof e[0]==\"string\"?e[0]:void 0,r=e.length===2?e[1]:typeof e[0]==\"string\"?void 0:e[0];return _e({[Ve]:()=>({match:n=>{let i={[t??tn]:n};return{matched:r===void 0||Ie(r,n,(o,s)=>{i[o]=s}),selections:i}},getSelectionKeys:()=>[t??tn].concat(r===void 0?[]:Xe(r))})})}function Me(e){return typeof e==\"number\"}function dt(e){return typeof e==\"string\"}function Ye(e){return typeof e==\"bigint\"}var Ty=_e(O(function(e){return!0}));var mt=e=>Object.assign(_e(e),{startsWith:t=>{return mt(B(e,(r=t,O(n=>dt(n)&&n.startsWith(r)))));var r},endsWith:t=>{return mt(B(e,(r=t,O(n=>dt(n)&&n.endsWith(r)))));var r},minLength:t=>mt(B(e,(r=>O(n=>dt(n)&&n.length>=r))(t))),maxLength:t=>mt(B(e,(r=>O(n=>dt(n)&&n.length<=r))(t))),includes:t=>{return mt(B(e,(r=t,O(n=>dt(n)&&n.includes(r)))));var r},regex:t=>{return mt(B(e,(r=t,O(n=>dt(n)&&!!n.match(r)))));var r}}),Cy=mt(O(dt)),Se=e=>Object.assign(_e(e),{between:(t,r)=>Se(B(e,((n,i)=>O(o=>Me(o)&&n<=o&&i>=o))(t,r))),lt:t=>Se(B(e,(r=>O(n=>Me(n)&&n<r))(t))),gt:t=>Se(B(e,(r=>O(n=>Me(n)&&n>r))(t))),lte:t=>Se(B(e,(r=>O(n=>Me(n)&&n<=r))(t))),gte:t=>Se(B(e,(r=>O(n=>Me(n)&&n>=r))(t))),int:()=>Se(B(e,O(t=>Me(t)&&Number.isInteger(t)))),finite:()=>Se(B(e,O(t=>Me(t)&&Number.isFinite(t)))),positive:()=>Se(B(e,O(t=>Me(t)&&t>0))),negative:()=>Se(B(e,O(t=>Me(t)&&t<0)))}),Ay=Se(O(Me)),Ze=e=>Object.assign(_e(e),{between:(t,r)=>Ze(B(e,((n,i)=>O(o=>Ye(o)&&n<=o&&i>=o))(t,r))),lt:t=>Ze(B(e,(r=>O(n=>Ye(n)&&n<r))(t))),gt:t=>Ze(B(e,(r=>O(n=>Ye(n)&&n>r))(t))),lte:t=>Ze(B(e,(r=>O(n=>Ye(n)&&n<=r))(t))),gte:t=>Ze(B(e,(r=>O(n=>Ye(n)&&n>=r))(t))),positive:()=>Ze(B(e,O(t=>Ye(t)&&t>0))),negative:()=>Ze(B(e,O(t=>Ye(t)&&t<0)))}),Ry=Ze(O(Ye)),My=_e(O(function(e){return typeof e==\"boolean\"})),Sy=_e(O(function(e){return typeof e==\"symbol\"})),Iy=_e(O(function(e){return e==null}));var Pi={matched:!1,value:void 0};function St(e){return new vi(e,Pi)}var vi=class e{constructor(t,r){this.input=void 0,this.state=void 0,this.input=t,this.state=r}with(...t){if(this.state.matched)return this;let r=t[t.length-1],n=[t[0]],i;t.length===3&&typeof t[1]==\"function\"?(n.push(t[0]),i=t[1]):t.length>2&&n.push(...t.slice(1,t.length-1));let o=!1,s={},a=(u,c)=>{o=!0,s[u]=c},l=!n.some(u=>Ie(u,this.input,a))||i&&!i(this.input)?Pi:{matched:!0,value:r(o?tn in s?s[tn]:s:this.input,this.input)};return new e(this.input,l)}when(t,r){if(this.state.matched)return this;let n=!!t(this.input);return new e(this.input,n?{matched:!0,value:r(this.input,this.input)}:Pi)}otherwise(t){return this.state.matched?this.state.value:t(this.input)}exhaustive(){return this.run()}run(){if(this.state.matched)return this.state.value;let t;try{t=JSON.stringify(this.input)}catch{t=this.input}throw new Error(`Pattern matching error: no pattern matches value ${t}`)}returnType(){return this}};var Rs=__webpack_require__(/*! util */ \"util\");var _s=F(vs());function rr(e){return(0,_s.default)(e,e,{fallback:ue})}var uc={warn:Re(\"prisma:warn\")},cc={warn:()=>!process.env.PRISMA_DISABLE_WARNINGS};function nr(e,...t){cc.warn()&&console.warn(`${uc.warn} ${e}`,...t)}var pc=(0,Rs.promisify)(As.default.exec),de=$(\"prisma:get-platform\"),dc=[\"1.0.x\",\"1.1.x\",\"3.0.x\"];async function Ms(){let e=on.default.platform(),t=process.arch;if(e===\"freebsd\"){let s=await sn(\"freebsd-version\");if(s&&s.trim().length>0){let l=/^(\\d+)\\.?/.exec(s);if(l)return{platform:\"freebsd\",targetDistro:`freebsd${l[1]}`,arch:t}}}if(e!==\"linux\")return{platform:e,arch:t};let r=await fc(),n=await Pc(),i=yc({arch:t,archFromUname:n,familyDistro:r.familyDistro}),{libssl:o}=await hc(i);return{platform:\"linux\",libssl:o,arch:t,archFromUname:n,...r}}function mc(e){let t=/^ID=\"?([^\"\\n]*)\"?$/im,r=/^ID_LIKE=\"?([^\"\\n]*)\"?$/im,n=t.exec(e),i=n&&n[1]&&n[1].toLowerCase()||\"\",o=r.exec(e),s=o&&o[1]&&o[1].toLowerCase()||\"\",a=St({id:i,idLike:s}).with({id:\"alpine\"},({id:l})=>({targetDistro:\"musl\",familyDistro:l,originalDistro:l})).with({id:\"raspbian\"},({id:l})=>({targetDistro:\"arm\",familyDistro:\"debian\",originalDistro:l})).with({id:\"nixos\"},({id:l})=>({targetDistro:\"nixos\",originalDistro:l,familyDistro:\"nixos\"})).with({id:\"debian\"},{id:\"ubuntu\"},({id:l})=>({targetDistro:\"debian\",familyDistro:\"debian\",originalDistro:l})).with({id:\"rhel\"},{id:\"centos\"},{id:\"fedora\"},({id:l})=>({targetDistro:\"rhel\",familyDistro:\"rhel\",originalDistro:l})).when(({idLike:l})=>l.includes(\"debian\")||l.includes(\"ubuntu\"),({id:l})=>({targetDistro:\"debian\",familyDistro:\"debian\",originalDistro:l})).when(({idLike:l})=>i===\"arch\"||l.includes(\"arch\"),({id:l})=>({targetDistro:\"debian\",familyDistro:\"arch\",originalDistro:l})).when(({idLike:l})=>l.includes(\"centos\")||l.includes(\"fedora\")||l.includes(\"rhel\")||l.includes(\"suse\"),({id:l})=>({targetDistro:\"rhel\",familyDistro:\"rhel\",originalDistro:l})).otherwise(({id:l})=>({targetDistro:void 0,familyDistro:void 0,originalDistro:l}));return de(`Found distro info:\n${JSON.stringify(a,null,2)}`),a}async function fc(){let e=\"/etc/os-release\";try{let t=await Ai.default.readFile(e,{encoding:\"utf-8\"});return mc(t)}catch{return{targetDistro:void 0,familyDistro:void 0,originalDistro:void 0}}}function gc(e){let t=/^OpenSSL\\s(\\d+\\.\\d+)\\.\\d+/.exec(e);if(t){let r=`${t[1]}.x`;return Ss(r)}}function Ts(e){let t=/libssl\\.so\\.(\\d)(\\.\\d)?/.exec(e);if(t){let r=`${t[1]}${t[2]??\".0\"}.x`;return Ss(r)}}function Ss(e){let t=(()=>{if(ks(e))return e;let r=e.split(\".\");return r[1]=\"0\",r.join(\".\")})();if(dc.includes(t))return t}function yc(e){return St(e).with({familyDistro:\"musl\"},()=>(de('Trying platform-specific paths for \"alpine\"'),[\"/lib\"])).with({familyDistro:\"debian\"},({archFromUname:t})=>(de('Trying platform-specific paths for \"debian\" (and \"ubuntu\")'),[`/usr/lib/${t}-linux-gnu`,`/lib/${t}-linux-gnu`])).with({familyDistro:\"rhel\"},()=>(de('Trying platform-specific paths for \"rhel\"'),[\"/lib64\",\"/usr/lib64\"])).otherwise(({familyDistro:t,arch:r,archFromUname:n})=>(de(`Don't know any platform-specific paths for \"${t}\" on ${r} (${n})`),[]))}async function hc(e){let t='grep -v \"libssl.so.0\"',r=await Cs(e);if(r){de(`Found libssl.so file using platform-specific paths: ${r}`);let o=Ts(r);if(de(`The parsed libssl version is: ${o}`),o)return{libssl:o,strategy:\"libssl-specific-path\"}}de('Falling back to \"ldconfig\" and other generic paths');let n=await sn(`ldconfig -p | sed \"s/.*=>s*//\" | sed \"s|.*/||\" | grep libssl | sort | ${t}`);if(n||(n=await Cs([\"/lib64\",\"/usr/lib64\",\"/lib\"])),n){de(`Found libssl.so file using \"ldconfig\" or other generic paths: ${n}`);let o=Ts(n);if(de(`The parsed libssl version is: ${o}`),o)return{libssl:o,strategy:\"ldconfig\"}}let i=await sn(\"openssl version -v\");if(i){de(`Found openssl binary with version: ${i}`);let o=gc(i);if(de(`The parsed openssl version is: ${o}`),o)return{libssl:o,strategy:\"openssl-binary\"}}return de(\"Couldn't find any version of libssl or OpenSSL in the system\"),{}}async function Cs(e){for(let t of e){let r=await bc(t);if(r)return r}}async function bc(e){try{return(await Ai.default.readdir(e)).find(r=>r.startsWith(\"libssl.so.\")&&!r.startsWith(\"libssl.so.0\"))}catch(t){if(t.code===\"ENOENT\")return;throw t}}async function ft(){let{binaryTarget:e}=await Is();return e}function xc(e){return e.binaryTarget!==void 0}async function Ri(){let{memoized:e,...t}=await Is();return t}var nn={};async function Is(){if(xc(nn))return Promise.resolve({...nn,memoized:!0});let e=await Ms(),t=wc(e);return nn={...e,binaryTarget:t},{...nn,memoized:!1}}function wc(e){let{platform:t,arch:r,archFromUname:n,libssl:i,targetDistro:o,familyDistro:s,originalDistro:a}=e;t===\"linux\"&&![\"x64\",\"arm64\"].includes(r)&&nr(`Prisma only officially supports Linux on amd64 (x86_64) and arm64 (aarch64) system architectures. If you are using your own custom Prisma engines, you can ignore this warning, as long as you've compiled the engines for your system architecture \"${n}\".`);let l=\"1.1.x\";if(t===\"linux\"&&i===void 0){let c=St({familyDistro:s}).with({familyDistro:\"debian\"},()=>\"Please manually install OpenSSL via `apt-get update -y && apt-get install -y openssl` and try installing Prisma again. If you're running Prisma on Docker, add this command to your Dockerfile, or switch to an image that already has OpenSSL installed.\").otherwise(()=>\"Please manually install OpenSSL and try installing Prisma again.\");nr(`Prisma failed to detect the libssl/openssl version to use, and may not work as expected. Defaulting to \"openssl-${l}\".\n${c}`)}let u=\"debian\";if(t===\"linux\"&&o===void 0&&nr(`Prisma doesn't know which engines to download for the Linux distro \"${a}\". Falling back to Prisma engines built \"${u}\".\nPlease report your experience by creating an issue at ${rr(\"https://github.com/prisma/prisma/issues\")} so we can add your distro to the list of known supported distros.`),t===\"darwin\"&&r===\"arm64\")return\"darwin-arm64\";if(t===\"darwin\")return\"darwin\";if(t===\"win32\")return\"windows\";if(t===\"freebsd\")return o;if(t===\"openbsd\")return\"openbsd\";if(t===\"netbsd\")return\"netbsd\";if(t===\"linux\"&&o===\"nixos\")return\"linux-nixos\";if(t===\"linux\"&&r===\"arm64\")return`${o===\"musl\"?\"linux-musl-arm64\":\"linux-arm64\"}-openssl-${i||l}`;if(t===\"linux\"&&r===\"arm\")return`linux-arm-openssl-${i||l}`;if(t===\"linux\"&&o===\"musl\"){let c=\"linux-musl\";return!i||ks(i)?c:`${c}-openssl-${i}`}return t===\"linux\"&&o&&i?`${o}-openssl-${i}`:(t!==\"linux\"&&nr(`Prisma detected unknown OS \"${t}\" and may not work as expected. Defaulting to \"linux\".`),i?`${u}-openssl-${i}`:o?`${o}-openssl-${l}`:`${u}-openssl-${l}`)}async function Ec(e){try{return await e()}catch{return}}function sn(e){return Ec(async()=>{let t=await pc(e);return de(`Command \"${e}\" successfully returned \"${t.stdout}\"`),t.stdout})}async function Pc(){return typeof on.default.machine==\"function\"?on.default.machine():(await sn(\"uname -m\"))?.trim()}function ks(e){return e.startsWith(\"1.\")}var Mi=[\"darwin\",\"darwin-arm64\",\"debian-openssl-1.0.x\",\"debian-openssl-1.1.x\",\"debian-openssl-3.0.x\",\"rhel-openssl-1.0.x\",\"rhel-openssl-1.1.x\",\"rhel-openssl-3.0.x\",\"linux-arm64-openssl-1.1.x\",\"linux-arm64-openssl-1.0.x\",\"linux-arm64-openssl-3.0.x\",\"linux-arm-openssl-1.1.x\",\"linux-arm-openssl-1.0.x\",\"linux-arm-openssl-3.0.x\",\"linux-musl\",\"linux-musl-openssl-3.0.x\",\"linux-musl-arm64-openssl-1.1.x\",\"linux-musl-arm64-openssl-3.0.x\",\"linux-nixos\",\"linux-static-x64\",\"linux-static-arm64\",\"windows\",\"freebsd11\",\"freebsd12\",\"freebsd13\",\"openbsd\",\"netbsd\",\"arm\"];var ki=F(Ds()),un=F(__webpack_require__(/*! fs */ \"fs\"));var Ft=F(__webpack_require__(/*! path */ \"path\"));function Ns(e){let t=e.ignoreProcessEnv?{}:process.env,r=n=>n.match(/(.?\\${(?:[a-zA-Z0-9_]+)?})/g)?.reduce(function(o,s){let a=/(.?)\\${([a-zA-Z0-9_]+)?}/g.exec(s);if(!a)return o;let l=a[1],u,c;if(l===\"\\\\\")c=a[0],u=c.replace(\"\\\\$\",\"$\");else{let p=a[2];c=a[0].substring(l.length),u=Object.hasOwnProperty.call(t,p)?t[p]:e.parsed[p]||\"\",u=r(u)}return o.replace(c,u)},n)??n;for(let n in e.parsed){let i=Object.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=r(i)}for(let n in e.parsed)t[n]=e.parsed[n];return e}var Ii=$(\"prisma:tryLoadEnv\");function ir({rootEnvPath:e,schemaEnvPath:t},r={conflictCheck:\"none\"}){let n=Ls(e);r.conflictCheck!==\"none\"&&kc(n,t,r.conflictCheck);let i=null;return $s(n?.path,t)||(i=Ls(t)),!n&&!i&&Ii(\"No Environment variables loaded\"),i?.dotenvResult.error?console.error(ve(pe(\"Schema Env Error: \"))+i.dotenvResult.error):{message:[n?.message,i?.message].filter(Boolean).join(`\n`),parsed:{...n?.dotenvResult?.parsed,...i?.dotenvResult?.parsed}}}function kc(e,t,r){let n=e?.dotenvResult.parsed,i=!$s(e?.path,t);if(n&&t&&i&&un.default.existsSync(t)){let o=ki.default.parse(un.default.readFileSync(t)),s=[];for(let a in o)n[a]===o[a]&&s.push(a);if(s.length>0){let a=Ft.default.relative(process.cwd(),e.path),l=Ft.default.relative(process.cwd(),t);if(r===\"error\"){let u=`There is a conflict between env var${s.length>1?\"s\":\"\"} in ${ue(a)} and ${ue(l)}\nConflicting env vars:\n${s.map(c=>`  ${pe(c)}`).join(`\n`)}\n\nWe suggest to move the contents of ${ue(l)} to ${ue(a)} to consolidate your env vars.\n`;throw new Error(u)}else if(r===\"warn\"){let u=`Conflict for env var${s.length>1?\"s\":\"\"} ${s.map(c=>pe(c)).join(\", \")} in ${ue(a)} and ${ue(l)}\nEnv vars from ${ue(l)} overwrite the ones from ${ue(a)}\n      `;console.warn(`${Re(\"warn(prisma)\")} ${u}`)}}}}function Ls(e){if(Fc(e)){Ii(`Environment variables loaded from ${e}`);let t=ki.default.config({path:e,debug:process.env.DOTENV_CONFIG_DEBUG?!0:void 0});return{dotenvResult:Ns(t),message:We(`Environment variables loaded from ${Ft.default.relative(process.cwd(),e)}`),path:e}}else Ii(`Environment variables not found at ${e}`);return null}function $s(e,t){return e&&t&&Ft.default.resolve(e)===Ft.default.resolve(t)}function Fc(e){return!!(e&&un.default.existsSync(e))}var qs=\"library\";function gt(e){let t=Oc();return t||(e?.config.engineType===\"library\"?\"library\":e?.config.engineType===\"binary\"?\"binary\":e?.config.engineType===\"wasm\"?\"wasm\":qs)}function Oc(){let e=process.env.PRISMA_CLIENT_ENGINE_TYPE;return e===\"library\"?\"library\":e===\"binary\"?\"binary\":e===\"wasm\"?\"wasm\":void 0}var Lc=F(Fi());var j=F(__webpack_require__(/*! path */ \"path\")),$c=F(Fi()),xh=$(\"prisma:engines\");function Qs(){return j.default.join(__dirname,\"../\")}var wh=\"libquery-engine\";j.default.join(__dirname,\"../query-engine-darwin\");j.default.join(__dirname,\"../query-engine-darwin-arm64\");j.default.join(__dirname,\"../query-engine-debian-openssl-1.0.x\");j.default.join(__dirname,\"../query-engine-debian-openssl-1.1.x\");j.default.join(__dirname,\"../query-engine-debian-openssl-3.0.x\");j.default.join(__dirname,\"../query-engine-linux-static-x64\");j.default.join(__dirname,\"../query-engine-linux-static-arm64\");j.default.join(__dirname,\"../query-engine-rhel-openssl-1.0.x\");j.default.join(__dirname,\"../query-engine-rhel-openssl-1.1.x\");j.default.join(__dirname,\"../query-engine-rhel-openssl-3.0.x\");j.default.join(__dirname,\"../libquery_engine-darwin.dylib.node\");j.default.join(__dirname,\"../libquery_engine-darwin-arm64.dylib.node\");j.default.join(__dirname,\"../libquery_engine-debian-openssl-1.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-debian-openssl-1.1.x.so.node\");j.default.join(__dirname,\"../libquery_engine-debian-openssl-3.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-1.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-1.1.x.so.node\");j.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-3.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-linux-musl.so.node\");j.default.join(__dirname,\"../libquery_engine-linux-musl-openssl-3.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-rhel-openssl-1.0.x.so.node\");j.default.join(__dirname,\"../libquery_engine-rhel-openssl-1.1.x.so.node\");j.default.join(__dirname,\"../libquery_engine-rhel-openssl-3.0.x.so.node\");j.default.join(__dirname,\"../query_engine-windows.dll.node\");var Oi=F(__webpack_require__(/*! fs */ \"fs\")),Gs=$(\"chmodPlusX\");function Di(e){if(process.platform===\"win32\")return;let t=Oi.default.statSync(e),r=t.mode|64|8|1;if(t.mode===r){Gs(`Execution permissions of ${e} are fine`);return}let n=r.toString(8).slice(-3);Gs(`Have to call chmodPlusX on ${e}`),Oi.default.chmodSync(e,n)}function Ni(e){let t=e.e,r=a=>`Prisma cannot find the required \\`${a}\\` system library in your system`,n=t.message.includes(\"cannot open shared object file\"),i=`Please refer to the documentation about Prisma's system requirements: ${rr(\"https://pris.ly/d/system-requirements\")}`,o=`Unable to require(\\`${We(e.id)}\\`).`,s=St({message:t.message,code:t.code}).with({code:\"ENOENT\"},()=>\"File does not exist.\").when(({message:a})=>n&&a.includes(\"libz\"),()=>`${r(\"libz\")}. Please install it and try again.`).when(({message:a})=>n&&a.includes(\"libgcc_s\"),()=>`${r(\"libgcc_s\")}. Please install it and try again.`).when(({message:a})=>n&&a.includes(\"libssl\"),()=>{let a=e.platformInfo.libssl?`openssl-${e.platformInfo.libssl}`:\"openssl\";return`${r(\"libssl\")}. Please install ${a} and try again.`}).when(({message:a})=>a.includes(\"GLIBC\"),()=>`Prisma has detected an incompatible version of the \\`glibc\\` C standard library installed in your system. This probably means your system may be too old to run Prisma. ${i}`).when(({message:a})=>e.platformInfo.platform===\"linux\"&&a.includes(\"symbol not found\"),()=>`The Prisma engines are not compatible with your system ${e.platformInfo.originalDistro} on (${e.platformInfo.archFromUname}) which uses the \\`${e.platformInfo.binaryTarget}\\` binaryTarget by default. ${i}`).otherwise(()=>`The Prisma engines do not seem to be compatible with your system. ${i}`);return`${o}\n${s}\n\nDetails: ${t.message}`}var or=F(__webpack_require__(/*! path */ \"path\"));function Li(e){return or.default.sep===or.default.posix.sep?e:e.split(or.default.sep).join(or.default.posix.sep)}var Hs=F($i());function ji(e){return String(new qi(e))}var qi=class{constructor(t){this.config=t}toString(){let{config:t}=this,r=t.provider.fromEnvVar?`env(\"${t.provider.fromEnvVar}\")`:t.provider.value,n=JSON.parse(JSON.stringify({provider:r,binaryTargets:qc(t.binaryTargets)}));return`generator ${t.name} {\n${(0,Hs.default)(jc(n),2)}\n}`}};function qc(e){let t;if(e.length>0){let r=e.find(n=>n.fromEnvVar!==null);r?t=`env(\"${r.fromEnvVar}\")`:t=e.map(n=>n.native?\"native\":n.value)}else t=void 0;return t}function jc(e){let t=Object.keys(e).reduce((r,n)=>Math.max(r,n.length),0);return Object.entries(e).map(([r,n])=>`${r.padEnd(t)} = ${Vc(n)}`).join(`\n`)}function Vc(e){return JSON.parse(JSON.stringify(e,(t,r)=>Array.isArray(r)?`[${r.map(n=>JSON.stringify(n)).join(\", \")}]`:JSON.stringify(r)))}var ar={};Tt(ar,{error:()=>Kc,info:()=>Uc,log:()=>Bc,query:()=>Qc,should:()=>Ws,tags:()=>sr,warn:()=>Vi});var sr={error:ve(\"prisma:error\"),warn:Re(\"prisma:warn\"),info:ze(\"prisma:info\"),query:Mt(\"prisma:query\")},Ws={warn:()=>!process.env.PRISMA_DISABLE_WARNINGS};function Bc(...e){console.log(...e)}function Vi(e,...t){Ws.warn()&&console.warn(`${sr.warn} ${e}`,...t)}function Uc(e,...t){console.info(`${sr.info} ${e}`,...t)}function Kc(e,...t){console.error(`${sr.error} ${e}`,...t)}function Qc(e,...t){console.log(`${sr.query} ${e}`,...t)}function pn(e,t){if(!e)throw new Error(`${t}. This should never happen. If you see this error, please, open an issue at https://pris.ly/prisma-prisma-bug-report`)}function yt(e,t){throw new Error(t)}function Ui(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var Ki=(e,t)=>e.reduce((r,n)=>(r[t(n)]=n,r),{});function Ot(e,t){let r={};for(let n of Object.keys(e))r[n]=t(e[n],n);return r}function Qi(e,t){if(e.length===0)return;let r=e[0];for(let n=1;n<e.length;n++)t(r,e[n])<0&&(r=e[n]);return r}function v(e,t){Object.defineProperty(e,\"name\",{value:t,configurable:!0})}var ea=new Set,lr=(e,t,...r)=>{ea.has(e)||(ea.add(e),Vi(t,...r))};var H=class extends Error{constructor(r,{code:n,clientVersion:i,meta:o,batchRequestIdx:s}){super(r);this.name=\"PrismaClientKnownRequestError\",this.code=n,this.clientVersion=i,this.meta=o,Object.defineProperty(this,\"batchRequestIdx\",{value:s,enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return\"PrismaClientKnownRequestError\"}};v(H,\"PrismaClientKnownRequestError\");var Be=class extends H{constructor(t,r){super(t,{code:\"P2025\",clientVersion:r}),this.name=\"NotFoundError\"}};v(Be,\"NotFoundError\");var k=class e extends Error{constructor(r,n,i){super(r);this.name=\"PrismaClientInitializationError\",this.clientVersion=n,this.errorCode=i,Error.captureStackTrace(e)}get[Symbol.toStringTag](){return\"PrismaClientInitializationError\"}};v(k,\"PrismaClientInitializationError\");var be=class extends Error{constructor(r,n){super(r);this.name=\"PrismaClientRustPanicError\",this.clientVersion=n}get[Symbol.toStringTag](){return\"PrismaClientRustPanicError\"}};v(be,\"PrismaClientRustPanicError\");var W=class extends Error{constructor(r,{clientVersion:n,batchRequestIdx:i}){super(r);this.name=\"PrismaClientUnknownRequestError\",this.clientVersion=n,Object.defineProperty(this,\"batchRequestIdx\",{value:i,writable:!0,enumerable:!1})}get[Symbol.toStringTag](){return\"PrismaClientUnknownRequestError\"}};v(W,\"PrismaClientUnknownRequestError\");var se=class extends Error{constructor(r,{clientVersion:n}){super(r);this.name=\"PrismaClientValidationError\";this.clientVersion=n}get[Symbol.toStringTag](){return\"PrismaClientValidationError\"}};v(se,\"PrismaClientValidationError\");var Dt=class{constructor(t){this._engine=t}prometheus(t){return this._engine.metrics({format:\"prometheus\",...t})}json(t){return this._engine.metrics({format:\"json\",...t})}};function cr(e){let t;return{get(){return t||(t={value:e()}),t.value}}}function ta(e,t){let r=cr(()=>Jc(t));Object.defineProperty(e,\"dmmf\",{get:()=>r.get()})}function Jc(e){return{datamodel:{models:Gi(e.models),enums:Gi(e.enums),types:Gi(e.types)}}}function Gi(e){return Object.entries(e).map(([t,r])=>({name:t,...r}))}var Hc=[\"$connect\",\"$disconnect\",\"$on\",\"$transaction\",\"$use\",\"$extends\"],Ji=Hc;var Wc=[\"JsonNullValueInput\",\"NullableJsonNullValueInput\",\"JsonNullValueFilter\"],mn=Symbol(),Hi=new WeakMap,ke=class{constructor(t){t===mn?Hi.set(this,`Prisma.${this._getName()}`):Hi.set(this,`new Prisma.${this._getNamespace()}.${this._getName()}()`)}_getName(){return this.constructor.name}toString(){return Hi.get(this)}},pr=class extends ke{_getNamespace(){return\"NullTypes\"}},dr=class extends pr{};Wi(dr,\"DbNull\");var mr=class extends pr{};Wi(mr,\"JsonNull\");var fr=class extends pr{};Wi(fr,\"AnyNull\");var fn={classes:{DbNull:dr,JsonNull:mr,AnyNull:fr},instances:{DbNull:new dr(mn),JsonNull:new mr(mn),AnyNull:new fr(mn)}};function Wi(e,t){Object.defineProperty(e,\"name\",{value:t,configurable:!0})}function gn(e){return{ok:!1,error:e,map(){return gn(e)},flatMap(){return gn(e)}}}var zi=class{constructor(){this.registeredErrors=[]}consumeError(t){return this.registeredErrors[t]}registerNewError(t){let r=0;for(;this.registeredErrors[r]!==void 0;)r++;return this.registeredErrors[r]={error:t},r}},Yi=e=>{let t=new zi,r=ht(t,e.startTransaction.bind(e));return{errorRegistry:t,queryRaw:ht(t,e.queryRaw.bind(e)),executeRaw:ht(t,e.executeRaw.bind(e)),provider:e.provider,startTransaction:async(...n)=>(await r(...n)).map(o=>zc(t,o))}},zc=(e,t)=>({provider:t.provider,options:t.options,queryRaw:ht(e,t.queryRaw.bind(t)),executeRaw:ht(e,t.executeRaw.bind(t)),commit:ht(e,t.commit.bind(t)),rollback:ht(e,t.rollback.bind(t))});function ht(e,t){return async(...r)=>{try{return await t(...r)}catch(n){let i=e.registerNewError(n);return gn({kind:\"GenericJs\",id:i})}}}var Eu=__webpack_require__(/*! async_hooks */ \"async_hooks\"),Pu=__webpack_require__(/*! events */ \"events\"),vu=F(__webpack_require__(/*! fs */ \"fs\")),Br=F(__webpack_require__(/*! path */ \"path\"));var me=class e{constructor(t,r){if(t.length-1!==r.length)throw t.length===0?new TypeError(\"Expected at least 1 string\"):new TypeError(`Expected ${t.length} strings to have ${t.length-1} values`);let n=r.reduce((s,a)=>s+(a instanceof e?a.values.length:1),0);this.values=new Array(n),this.strings=new Array(n+1),this.strings[0]=t[0];let i=0,o=0;for(;i<r.length;){let s=r[i++],a=t[i];if(s instanceof e){this.strings[o]+=s.strings[0];let l=0;for(;l<s.values.length;)this.values[o++]=s.values[l++],this.strings[o]=s.strings[l];this.strings[o]+=a}else this.values[o++]=s,this.strings[o]=a}}get text(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`$${r}${this.strings[r++]}`;return n}get sql(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`?${this.strings[r++]}`;return n}get statement(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`:${r}${this.strings[r++]}`;return n}inspect(){return{text:this.text,sql:this.sql,values:this.values}}};function ra(e,t=\",\",r=\"\",n=\"\"){if(e.length===0)throw new TypeError(\"Expected `join([])` to be called with an array of multiple elements, but got an empty array\");return new me([r,...Array(e.length-1).fill(t),n],e)}function Zi(e){return new me([e],[])}var na=Zi(\"\");function Xi(e,...t){return new me(e,t)}function gr(e){return{getKeys(){return Object.keys(e)},getPropertyValue(t){return e[t]}}}function ce(e,t){return{getKeys(){return[e]},getPropertyValue(){return t()}}}var Fe=class{constructor(){this._map=new Map}get(t){return this._map.get(t)?.value}set(t,r){this._map.set(t,{value:r})}getOrCreate(t,r){let n=this._map.get(t);if(n)return n.value;let i=r();return this.set(t,i),i}};function bt(e){let t=new Fe;return{getKeys(){return e.getKeys()},getPropertyValue(r){return t.getOrCreate(r,()=>e.getPropertyValue(r))},getPropertyDescriptor(r){return e.getPropertyDescriptor?.(r)}}}var sa=__webpack_require__(/*! util */ \"util\");var yn={enumerable:!0,configurable:!0,writable:!0};function hn(e){let t=new Set(e);return{getOwnPropertyDescriptor:()=>yn,has:(r,n)=>t.has(n),set:(r,n,i)=>t.add(n)&&Reflect.set(r,n,i),ownKeys:()=>[...t]}}var ia=Symbol.for(\"nodejs.util.inspect.custom\");function Oe(e,t){let r=Yc(t),n=new Set,i=new Proxy(e,{get(o,s){if(n.has(s))return o[s];let a=r.get(s);return a?a.getPropertyValue(s):o[s]},has(o,s){if(n.has(s))return!0;let a=r.get(s);return a?a.has?.(s)??!0:Reflect.has(o,s)},ownKeys(o){let s=oa(Reflect.ownKeys(o),r),a=oa(Array.from(r.keys()),r);return[...new Set([...s,...a,...n])]},set(o,s,a){return r.get(s)?.getPropertyDescriptor?.(s)?.writable===!1?!1:(n.add(s),Reflect.set(o,s,a))},getOwnPropertyDescriptor(o,s){let a=Reflect.getOwnPropertyDescriptor(o,s);if(a&&!a.configurable)return a;let l=r.get(s);return l?l.getPropertyDescriptor?{...yn,...l?.getPropertyDescriptor(s)}:yn:a},defineProperty(o,s,a){return n.add(s),Reflect.defineProperty(o,s,a)}});return i[ia]=function(o,s,a=sa.inspect){let l={...this};return delete l[ia],a(l,s)},i}function Yc(e){let t=new Map;for(let r of e){let n=r.getKeys();for(let i of n)t.set(i,r)}return t}function oa(e,t){return e.filter(r=>t.get(r)?.has?.(r)??!0)}function yr(e){return{getKeys(){return e},has(){return!1},getPropertyValue(){}}}var Nt=class{constructor(t=0,r){this.context=r;this.lines=[];this.currentLine=\"\";this.currentIndent=0;this.currentIndent=t}write(t){return typeof t==\"string\"?this.currentLine+=t:t.write(this),this}writeJoined(t,r){let n=r.length-1;for(let i=0;i<r.length;i++)this.write(r[i]),i!==n&&this.write(t);return this}writeLine(t){return this.write(t).newLine()}newLine(){this.lines.push(this.indentedCurrentLine()),this.currentLine=\"\",this.marginSymbol=void 0;let t=this.afterNextNewLineCallback;return this.afterNextNewLineCallback=void 0,t?.(),this}withIndent(t){return this.indent(),t(this),this.unindent(),this}afterNextNewline(t){return this.afterNextNewLineCallback=t,this}indent(){return this.currentIndent++,this}unindent(){return this.currentIndent>0&&this.currentIndent--,this}addMarginSymbol(t){return this.marginSymbol=t,this}toString(){return this.lines.concat(this.indentedCurrentLine()).join(`\n`)}getCurrentLineLength(){return this.currentLine.length}indentedCurrentLine(){let t=this.currentLine.padStart(this.currentLine.length+2*this.currentIndent);return this.marginSymbol?this.marginSymbol+t.slice(1):t}};function Lt(e){return e instanceof Date||Object.prototype.toString.call(e)===\"[object Date]\"}function bn(e){return e.toString()!==\"Invalid Date\"}var $t=9e15,nt=1e9,eo=\"0123456789abcdef\",wn=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",En=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",to={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-$t,maxE:$t,crypto:!1},ca,Ue,_=!0,vn=\"[DecimalError] \",rt=vn+\"Invalid argument: \",pa=vn+\"Precision limit exceeded\",da=vn+\"crypto unavailable\",ma=\"[object Decimal]\",ae=Math.floor,G=Math.pow,Zc=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,Xc=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,ep=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,fa=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,Ce=1e7,P=7,tp=9007199254740991,rp=wn.length-1,ro=En.length-1,m={toStringTag:ma};m.absoluteValue=m.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),x(e)};m.ceil=function(){return x(new this.constructor(this),this.e+1,2)};m.clampedTo=m.clamp=function(e,t){var r,n=this,i=n.constructor;if(e=new i(e),t=new i(t),!e.s||!t.s)return new i(NaN);if(e.gt(t))throw Error(rt+t);return r=n.cmp(e),r<0?e:n.cmp(t)>0?t:new i(n)};m.comparedTo=m.cmp=function(e){var t,r,n,i,o=this,s=o.d,a=(e=new o.constructor(e)).d,l=o.s,u=e.s;if(!s||!a)return!l||!u?NaN:l!==u?l:s===a?0:!s^l<0?1:-1;if(!s[0]||!a[0])return s[0]?l:a[0]?-u:0;if(l!==u)return l;if(o.e!==e.e)return o.e>e.e^l<0?1:-1;for(n=s.length,i=a.length,t=0,r=n<i?n:i;t<r;++t)if(s[t]!==a[t])return s[t]>a[t]^l<0?1:-1;return n===i?0:n>i^l<0?1:-1};m.cosine=m.cos=function(){var e,t,r=this,n=r.constructor;return r.d?r.d[0]?(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+P,n.rounding=1,r=np(n,xa(n,r)),n.precision=e,n.rounding=t,x(Ue==2||Ue==3?r.neg():r,e,t,!0)):new n(1):new n(NaN)};m.cubeRoot=m.cbrt=function(){var e,t,r,n,i,o,s,a,l,u,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(_=!1,o=c.s*G(c.s*c,1/3),!o||Math.abs(o)==1/0?(r=re(c.d),e=c.e,(o=(e-r.length+1)%3)&&(r+=o==1||o==-2?\"0\":\"00\"),o=G(r,1/3),e=ae((e+1)/3)-(e%3==(e<0?-1:2)),o==1/0?r=\"5e\"+e:(r=o.toExponential(),r=r.slice(0,r.indexOf(\"e\")+1)+e),n=new p(r),n.s=c.s):n=new p(o.toString()),s=(e=p.precision)+3;;)if(a=n,l=a.times(a).times(a),u=l.plus(c),n=L(u.plus(c).times(a),u.plus(l),s+2,1),re(a.d).slice(0,s)===(r=re(n.d)).slice(0,s))if(r=r.slice(s-3,s+1),r==\"9999\"||!i&&r==\"4999\"){if(!i&&(x(a,e+1,0),a.times(a).times(a).eq(c))){n=a;break}s+=4,i=1}else{(!+r||!+r.slice(1)&&r.charAt(0)==\"5\")&&(x(n,e+1,1),t=!n.times(n).times(n).eq(c));break}return _=!0,x(n,e,p.rounding,t)};m.decimalPlaces=m.dp=function(){var e,t=this.d,r=NaN;if(t){if(e=t.length-1,r=(e-ae(this.e/P))*P,e=t[e],e)for(;e%10==0;e/=10)r--;r<0&&(r=0)}return r};m.dividedBy=m.div=function(e){return L(this,new this.constructor(e))};m.dividedToIntegerBy=m.divToInt=function(e){var t=this,r=t.constructor;return x(L(t,new r(e),0,1,1),r.precision,r.rounding)};m.equals=m.eq=function(e){return this.cmp(e)===0};m.floor=function(){return x(new this.constructor(this),this.e+1,3)};m.greaterThan=m.gt=function(e){return this.cmp(e)>0};m.greaterThanOrEqualTo=m.gte=function(e){var t=this.cmp(e);return t==1||t===0};m.hyperbolicCosine=m.cosh=function(){var e,t,r,n,i,o=this,s=o.constructor,a=new s(1);if(!o.isFinite())return new s(o.s?1/0:NaN);if(o.isZero())return a;r=s.precision,n=s.rounding,s.precision=r+Math.max(o.e,o.sd())+4,s.rounding=1,i=o.d.length,i<32?(e=Math.ceil(i/3),t=(1/Tn(4,e)).toString()):(e=16,t=\"2.3283064365386962890625e-10\"),o=qt(s,1,o.times(t),new s(1),!0);for(var l,u=e,c=new s(8);u--;)l=o.times(o),o=a.minus(l.times(c.minus(l.times(c))));return x(o,s.precision=r,s.rounding=n,!0)};m.hyperbolicSine=m.sinh=function(){var e,t,r,n,i=this,o=i.constructor;if(!i.isFinite()||i.isZero())return new o(i);if(t=o.precision,r=o.rounding,o.precision=t+Math.max(i.e,i.sd())+4,o.rounding=1,n=i.d.length,n<3)i=qt(o,2,i,i,!0);else{e=1.4*Math.sqrt(n),e=e>16?16:e|0,i=i.times(1/Tn(5,e)),i=qt(o,2,i,i,!0);for(var s,a=new o(5),l=new o(16),u=new o(20);e--;)s=i.times(i),i=i.times(a.plus(s.times(l.times(s).plus(u))))}return o.precision=t,o.rounding=r,x(i,t,r,!0)};m.hyperbolicTangent=m.tanh=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+7,n.rounding=1,L(r.sinh(),r.cosh(),n.precision=e,n.rounding=t)):new n(r.s)};m.inverseCosine=m.acos=function(){var e,t=this,r=t.constructor,n=t.abs().cmp(1),i=r.precision,o=r.rounding;return n!==-1?n===0?t.isNeg()?Te(r,i,o):new r(0):new r(NaN):t.isZero()?Te(r,i+4,o).times(.5):(r.precision=i+6,r.rounding=1,t=t.asin(),e=Te(r,i+4,o).times(.5),r.precision=i,r.rounding=o,e.minus(t))};m.inverseHyperbolicCosine=m.acosh=function(){var e,t,r=this,n=r.constructor;return r.lte(1)?new n(r.eq(1)?0:NaN):r.isFinite()?(e=n.precision,t=n.rounding,n.precision=e+Math.max(Math.abs(r.e),r.sd())+4,n.rounding=1,_=!1,r=r.times(r).minus(1).sqrt().plus(r),_=!0,n.precision=e,n.rounding=t,r.ln()):new n(r)};m.inverseHyperbolicSine=m.asinh=function(){var e,t,r=this,n=r.constructor;return!r.isFinite()||r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+2*Math.max(Math.abs(r.e),r.sd())+6,n.rounding=1,_=!1,r=r.times(r).plus(1).sqrt().plus(r),_=!0,n.precision=e,n.rounding=t,r.ln())};m.inverseHyperbolicTangent=m.atanh=function(){var e,t,r,n,i=this,o=i.constructor;return i.isFinite()?i.e>=0?new o(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=o.precision,t=o.rounding,n=i.sd(),Math.max(n,e)<2*-i.e-1?x(new o(i),e,t,!0):(o.precision=r=n-i.e,i=L(i.plus(1),new o(1).minus(i),r+e,1),o.precision=e+4,o.rounding=1,i=i.ln(),o.precision=e,o.rounding=t,i.times(.5))):new o(NaN)};m.inverseSine=m.asin=function(){var e,t,r,n,i=this,o=i.constructor;return i.isZero()?new o(i):(t=i.abs().cmp(1),r=o.precision,n=o.rounding,t!==-1?t===0?(e=Te(o,r+4,n).times(.5),e.s=i.s,e):new o(NaN):(o.precision=r+6,o.rounding=1,i=i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(),o.precision=r,o.rounding=n,i.times(2)))};m.inverseTangent=m.atan=function(){var e,t,r,n,i,o,s,a,l,u=this,c=u.constructor,p=c.precision,d=c.rounding;if(u.isFinite()){if(u.isZero())return new c(u);if(u.abs().eq(1)&&p+4<=ro)return s=Te(c,p+4,d).times(.25),s.s=u.s,s}else{if(!u.s)return new c(NaN);if(p+4<=ro)return s=Te(c,p+4,d).times(.5),s.s=u.s,s}for(c.precision=a=p+10,c.rounding=1,r=Math.min(28,a/P+2|0),e=r;e;--e)u=u.div(u.times(u).plus(1).sqrt().plus(1));for(_=!1,t=Math.ceil(a/P),n=1,l=u.times(u),s=new c(u),i=u;e!==-1;)if(i=i.times(l),o=s.minus(i.div(n+=2)),i=i.times(l),s=o.plus(i.div(n+=2)),s.d[t]!==void 0)for(e=t;s.d[e]===o.d[e]&&e--;);return r&&(s=s.times(2<<r-1)),_=!0,x(s,c.precision=p,c.rounding=d,!0)};m.isFinite=function(){return!!this.d};m.isInteger=m.isInt=function(){return!!this.d&&ae(this.e/P)>this.d.length-2};m.isNaN=function(){return!this.s};m.isNegative=m.isNeg=function(){return this.s<0};m.isPositive=m.isPos=function(){return this.s>0};m.isZero=function(){return!!this.d&&this.d[0]===0};m.lessThan=m.lt=function(e){return this.cmp(e)<0};m.lessThanOrEqualTo=m.lte=function(e){return this.cmp(e)<1};m.logarithm=m.log=function(e){var t,r,n,i,o,s,a,l,u=this,c=u.constructor,p=c.precision,d=c.rounding,f=5;if(e==null)e=new c(10),t=!0;else{if(e=new c(e),r=e.d,e.s<0||!r||!r[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(r=u.d,u.s<0||!r||!r[0]||u.eq(1))return new c(r&&!r[0]?-1/0:u.s!=1?NaN:r?0:1/0);if(t)if(r.length>1)o=!0;else{for(i=r[0];i%10===0;)i/=10;o=i!==1}if(_=!1,a=p+f,s=tt(u,a),n=t?Pn(c,a+10):tt(e,a),l=L(s,n,a,1),hr(l.d,i=p,d))do if(a+=10,s=tt(u,a),n=t?Pn(c,a+10):tt(e,a),l=L(s,n,a,1),!o){+re(l.d).slice(i+1,i+15)+1==1e14&&(l=x(l,p+1,0));break}while(hr(l.d,i+=10,d));return _=!0,x(l,p,d)};m.minus=m.sub=function(e){var t,r,n,i,o,s,a,l,u,c,p,d,f=this,y=f.constructor;if(e=new y(e),!f.d||!e.d)return!f.s||!e.s?e=new y(NaN):f.d?e.s=-e.s:e=new y(e.d||f.s!==e.s?f:NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(u=f.d,d=e.d,a=y.precision,l=y.rounding,!u[0]||!d[0]){if(d[0])e.s=-e.s;else if(u[0])e=new y(f);else return new y(l===3?-0:0);return _?x(e,a,l):e}if(r=ae(e.e/P),c=ae(f.e/P),u=u.slice(),o=c-r,o){for(p=o<0,p?(t=u,o=-o,s=d.length):(t=d,r=c,s=u.length),n=Math.max(Math.ceil(a/P),s)+2,o>n&&(o=n,t.length=1),t.reverse(),n=o;n--;)t.push(0);t.reverse()}else{for(n=u.length,s=d.length,p=n<s,p&&(s=n),n=0;n<s;n++)if(u[n]!=d[n]){p=u[n]<d[n];break}o=0}for(p&&(t=u,u=d,d=t,e.s=-e.s),s=u.length,n=d.length-s;n>0;--n)u[s++]=0;for(n=d.length;n>o;){if(u[--n]<d[n]){for(i=n;i&&u[--i]===0;)u[i]=Ce-1;--u[i],u[n]+=Ce}u[n]-=d[n]}for(;u[--s]===0;)u.pop();for(;u[0]===0;u.shift())--r;return u[0]?(e.d=u,e.e=_n(u,r),_?x(e,a,l):e):new y(l===3?-0:0)};m.modulo=m.mod=function(e){var t,r=this,n=r.constructor;return e=new n(e),!r.d||!e.s||e.d&&!e.d[0]?new n(NaN):!e.d||r.d&&!r.d[0]?x(new n(r),n.precision,n.rounding):(_=!1,n.modulo==9?(t=L(r,e.abs(),0,3,1),t.s*=e.s):t=L(r,e,0,n.modulo,1),t=t.times(e),_=!0,r.minus(t))};m.naturalExponential=m.exp=function(){return no(this)};m.naturalLogarithm=m.ln=function(){return tt(this)};m.negated=m.neg=function(){var e=new this.constructor(this);return e.s=-e.s,x(e)};m.plus=m.add=function(e){var t,r,n,i,o,s,a,l,u,c,p=this,d=p.constructor;if(e=new d(e),!p.d||!e.d)return!p.s||!e.s?e=new d(NaN):p.d||(e=new d(e.d||p.s===e.s?p:NaN)),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(u=p.d,c=e.d,a=d.precision,l=d.rounding,!u[0]||!c[0])return c[0]||(e=new d(p)),_?x(e,a,l):e;if(o=ae(p.e/P),n=ae(e.e/P),u=u.slice(),i=o-n,i){for(i<0?(r=u,i=-i,s=c.length):(r=c,n=o,s=u.length),o=Math.ceil(a/P),s=o>s?o+1:s+1,i>s&&(i=s,r.length=1),r.reverse();i--;)r.push(0);r.reverse()}for(s=u.length,i=c.length,s-i<0&&(i=s,r=c,c=u,u=r),t=0;i;)t=(u[--i]=u[i]+c[i]+t)/Ce|0,u[i]%=Ce;for(t&&(u.unshift(t),++n),s=u.length;u[--s]==0;)u.pop();return e.d=u,e.e=_n(u,n),_?x(e,a,l):e};m.precision=m.sd=function(e){var t,r=this;if(e!==void 0&&e!==!!e&&e!==1&&e!==0)throw Error(rt+e);return r.d?(t=ga(r.d),e&&r.e+1>t&&(t=r.e+1)):t=NaN,t};m.round=function(){var e=this,t=e.constructor;return x(new t(e),e.e+1,t.rounding)};m.sine=m.sin=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+P,n.rounding=1,r=op(n,xa(n,r)),n.precision=e,n.rounding=t,x(Ue>2?r.neg():r,e,t,!0)):new n(NaN)};m.squareRoot=m.sqrt=function(){var e,t,r,n,i,o,s=this,a=s.d,l=s.e,u=s.s,c=s.constructor;if(u!==1||!a||!a[0])return new c(!u||u<0&&(!a||a[0])?NaN:a?s:1/0);for(_=!1,u=Math.sqrt(+s),u==0||u==1/0?(t=re(a),(t.length+l)%2==0&&(t+=\"0\"),u=Math.sqrt(t),l=ae((l+1)/2)-(l<0||l%2),u==1/0?t=\"5e\"+l:(t=u.toExponential(),t=t.slice(0,t.indexOf(\"e\")+1)+l),n=new c(t)):n=new c(u.toString()),r=(l=c.precision)+3;;)if(o=n,n=o.plus(L(s,o,r+2,1)).times(.5),re(o.d).slice(0,r)===(t=re(n.d)).slice(0,r))if(t=t.slice(r-3,r+1),t==\"9999\"||!i&&t==\"4999\"){if(!i&&(x(o,l+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}else{(!+t||!+t.slice(1)&&t.charAt(0)==\"5\")&&(x(n,l+1,1),e=!n.times(n).eq(s));break}return _=!0,x(n,l,c.rounding,e)};m.tangent=m.tan=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+10,n.rounding=1,r=r.sin(),r.s=1,r=L(r,new n(1).minus(r.times(r)).sqrt(),e+10,0),n.precision=e,n.rounding=t,x(Ue==2||Ue==4?r.neg():r,e,t,!0)):new n(NaN)};m.times=m.mul=function(e){var t,r,n,i,o,s,a,l,u,c=this,p=c.constructor,d=c.d,f=(e=new p(e)).d;if(e.s*=c.s,!d||!d[0]||!f||!f[0])return new p(!e.s||d&&!d[0]&&!f||f&&!f[0]&&!d?NaN:!d||!f?e.s/0:e.s*0);for(r=ae(c.e/P)+ae(e.e/P),l=d.length,u=f.length,l<u&&(o=d,d=f,f=o,s=l,l=u,u=s),o=[],s=l+u,n=s;n--;)o.push(0);for(n=u;--n>=0;){for(t=0,i=l+n;i>n;)a=o[i]+f[n]*d[i-n-1]+t,o[i--]=a%Ce|0,t=a/Ce|0;o[i]=(o[i]+t)%Ce|0}for(;!o[--s];)o.pop();return t?++r:o.shift(),e.d=o,e.e=_n(o,r),_?x(e,p.precision,p.rounding):e};m.toBinary=function(e,t){return oo(this,2,e,t)};m.toDecimalPlaces=m.toDP=function(e,t){var r=this,n=r.constructor;return r=new n(r),e===void 0?r:(fe(e,0,nt),t===void 0?t=n.rounding:fe(t,0,8),x(r,e+r.e+1,t))};m.toExponential=function(e,t){var r,n=this,i=n.constructor;return e===void 0?r=De(n,!0):(fe(e,0,nt),t===void 0?t=i.rounding:fe(t,0,8),n=x(new i(n),e+1,t),r=De(n,!0,e+1)),n.isNeg()&&!n.isZero()?\"-\"+r:r};m.toFixed=function(e,t){var r,n,i=this,o=i.constructor;return e===void 0?r=De(i):(fe(e,0,nt),t===void 0?t=o.rounding:fe(t,0,8),n=x(new o(i),e+i.e+1,t),r=De(n,!1,e+n.e+1)),i.isNeg()&&!i.isZero()?\"-\"+r:r};m.toFraction=function(e){var t,r,n,i,o,s,a,l,u,c,p,d,f=this,y=f.d,g=f.constructor;if(!y)return new g(f);if(u=r=new g(1),n=l=new g(0),t=new g(n),o=t.e=ga(y)-f.e-1,s=o%P,t.d[0]=G(10,s<0?P+s:s),e==null)e=o>0?t:u;else{if(a=new g(e),!a.isInt()||a.lt(u))throw Error(rt+a);e=a.gt(t)?o>0?t:u:a}for(_=!1,a=new g(re(y)),c=g.precision,g.precision=o=y.length*P*2;p=L(a,t,0,1,1),i=r.plus(p.times(n)),i.cmp(e)!=1;)r=n,n=i,i=u,u=l.plus(p.times(i)),l=i,i=t,t=a.minus(p.times(i)),a=i;return i=L(e.minus(r),n,0,1,1),l=l.plus(i.times(u)),r=r.plus(i.times(n)),l.s=u.s=f.s,d=L(u,n,o,1).minus(f).abs().cmp(L(l,r,o,1).minus(f).abs())<1?[u,n]:[l,r],g.precision=c,_=!0,d};m.toHexadecimal=m.toHex=function(e,t){return oo(this,16,e,t)};m.toNearest=function(e,t){var r=this,n=r.constructor;if(r=new n(r),e==null){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),t===void 0?t=n.rounding:fe(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(_=!1,r=L(r,e,0,t,1).times(e),_=!0,x(r)):(e.s=r.s,r=e),r};m.toNumber=function(){return+this};m.toOctal=function(e,t){return oo(this,8,e,t)};m.toPower=m.pow=function(e){var t,r,n,i,o,s,a=this,l=a.constructor,u=+(e=new l(e));if(!a.d||!e.d||!a.d[0]||!e.d[0])return new l(G(+a,u));if(a=new l(a),a.eq(1))return a;if(n=l.precision,o=l.rounding,e.eq(1))return x(a,n,o);if(t=ae(e.e/P),t>=e.d.length-1&&(r=u<0?-u:u)<=tp)return i=ya(l,a,r,n),e.s<0?new l(1).div(i):x(i,n,o);if(s=a.s,s<0){if(t<e.d.length-1)return new l(NaN);if(e.d[t]&1||(s=1),a.e==0&&a.d[0]==1&&a.d.length==1)return a.s=s,a}return r=G(+a,u),t=r==0||!isFinite(r)?ae(u*(Math.log(\"0.\"+re(a.d))/Math.LN10+a.e+1)):new l(r+\"\").e,t>l.maxE+1||t<l.minE-1?new l(t>0?s/0:0):(_=!1,l.rounding=a.s=1,r=Math.min(12,(t+\"\").length),i=no(e.times(tt(a,n+r)),n),i.d&&(i=x(i,n+5,1),hr(i.d,n,o)&&(t=n+10,i=x(no(e.times(tt(a,t+r)),t),t+5,1),+re(i.d).slice(n+1,n+15)+1==1e14&&(i=x(i,n+1,0)))),i.s=s,_=!0,l.rounding=o,x(i,n,o))};m.toPrecision=function(e,t){var r,n=this,i=n.constructor;return e===void 0?r=De(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(fe(e,1,nt),t===void 0?t=i.rounding:fe(t,0,8),n=x(new i(n),e,t),r=De(n,e<=n.e||n.e<=i.toExpNeg,e)),n.isNeg()&&!n.isZero()?\"-\"+r:r};m.toSignificantDigits=m.toSD=function(e,t){var r=this,n=r.constructor;return e===void 0?(e=n.precision,t=n.rounding):(fe(e,1,nt),t===void 0?t=n.rounding:fe(t,0,8)),x(new n(r),e,t)};m.toString=function(){var e=this,t=e.constructor,r=De(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?\"-\"+r:r};m.truncated=m.trunc=function(){return x(new this.constructor(this),this.e+1,1)};m.valueOf=m.toJSON=function(){var e=this,t=e.constructor,r=De(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?\"-\"+r:r};function re(e){var t,r,n,i=e.length-1,o=\"\",s=e[0];if(i>0){for(o+=s,t=1;t<i;t++)n=e[t]+\"\",r=P-n.length,r&&(o+=et(r)),o+=n;s=e[t],n=s+\"\",r=P-n.length,r&&(o+=et(r))}else if(s===0)return\"0\";for(;s%10===0;)s/=10;return o+s}function fe(e,t,r){if(e!==~~e||e<t||e>r)throw Error(rt+e)}function hr(e,t,r,n){var i,o,s,a;for(o=e[0];o>=10;o/=10)--t;return--t<0?(t+=P,i=0):(i=Math.ceil((t+1)/P),t%=P),o=G(10,P-t),a=e[i]%o|0,n==null?t<3?(t==0?a=a/100|0:t==1&&(a=a/10|0),s=r<4&&a==99999||r>3&&a==49999||a==5e4||a==0):s=(r<4&&a+1==o||r>3&&a+1==o/2)&&(e[i+1]/o/100|0)==G(10,t-2)-1||(a==o/2||a==0)&&(e[i+1]/o/100|0)==0:t<4?(t==0?a=a/1e3|0:t==1?a=a/100|0:t==2&&(a=a/10|0),s=(n||r<4)&&a==9999||!n&&r>3&&a==4999):s=((n||r<4)&&a+1==o||!n&&r>3&&a+1==o/2)&&(e[i+1]/o/1e3|0)==G(10,t-3)-1,s}function xn(e,t,r){for(var n,i=[0],o,s=0,a=e.length;s<a;){for(o=i.length;o--;)i[o]*=t;for(i[0]+=eo.indexOf(e.charAt(s++)),n=0;n<i.length;n++)i[n]>r-1&&(i[n+1]===void 0&&(i[n+1]=0),i[n+1]+=i[n]/r|0,i[n]%=r)}return i.reverse()}function np(e,t){var r,n,i;if(t.isZero())return t;n=t.d.length,n<32?(r=Math.ceil(n/3),i=(1/Tn(4,r)).toString()):(r=16,i=\"2.3283064365386962890625e-10\"),e.precision+=r,t=qt(e,1,t.times(i),new e(1));for(var o=r;o--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=r,t}var L=function(){function e(n,i,o){var s,a=0,l=n.length;for(n=n.slice();l--;)s=n[l]*i+a,n[l]=s%o|0,a=s/o|0;return a&&n.unshift(a),n}function t(n,i,o,s){var a,l;if(o!=s)l=o>s?1:-1;else for(a=l=0;a<o;a++)if(n[a]!=i[a]){l=n[a]>i[a]?1:-1;break}return l}function r(n,i,o,s){for(var a=0;o--;)n[o]-=a,a=n[o]<i[o]?1:0,n[o]=a*s+n[o]-i[o];for(;!n[0]&&n.length>1;)n.shift()}return function(n,i,o,s,a,l){var u,c,p,d,f,y,g,T,A,R,E,S,we,ee,ut,K,ne,je,ie,_t,Ur=n.constructor,ai=n.s==i.s?1:-1,oe=n.d,N=i.d;if(!oe||!oe[0]||!N||!N[0])return new Ur(!n.s||!i.s||(oe?N&&oe[0]==N[0]:!N)?NaN:oe&&oe[0]==0||!N?ai*0:ai/0);for(l?(f=1,c=n.e-i.e):(l=Ce,f=P,c=ae(n.e/f)-ae(i.e/f)),ie=N.length,ne=oe.length,A=new Ur(ai),R=A.d=[],p=0;N[p]==(oe[p]||0);p++);if(N[p]>(oe[p]||0)&&c--,o==null?(ee=o=Ur.precision,s=Ur.rounding):a?ee=o+(n.e-i.e)+1:ee=o,ee<0)R.push(1),y=!0;else{if(ee=ee/f+2|0,p=0,ie==1){for(d=0,N=N[0],ee++;(p<ne||d)&&ee--;p++)ut=d*l+(oe[p]||0),R[p]=ut/N|0,d=ut%N|0;y=d||p<ne}else{for(d=l/(N[0]+1)|0,d>1&&(N=e(N,d,l),oe=e(oe,d,l),ie=N.length,ne=oe.length),K=ie,E=oe.slice(0,ie),S=E.length;S<ie;)E[S++]=0;_t=N.slice(),_t.unshift(0),je=N[0],N[1]>=l/2&&++je;do d=0,u=t(N,E,ie,S),u<0?(we=E[0],ie!=S&&(we=we*l+(E[1]||0)),d=we/je|0,d>1?(d>=l&&(d=l-1),g=e(N,d,l),T=g.length,S=E.length,u=t(g,E,T,S),u==1&&(d--,r(g,ie<T?_t:N,T,l))):(d==0&&(u=d=1),g=N.slice()),T=g.length,T<S&&g.unshift(0),r(E,g,S,l),u==-1&&(S=E.length,u=t(N,E,ie,S),u<1&&(d++,r(E,ie<S?_t:N,S,l))),S=E.length):u===0&&(d++,E=[0]),R[p++]=d,u&&E[0]?E[S++]=oe[K]||0:(E=[oe[K]],S=1);while((K++<ne||E[0]!==void 0)&&ee--);y=E[0]!==void 0}R[0]||R.shift()}if(f==1)A.e=c,ca=y;else{for(p=1,d=R[0];d>=10;d/=10)p++;A.e=p+c*f-1,x(A,a?o+A.e+1:o,s,y)}return A}}();function x(e,t,r,n){var i,o,s,a,l,u,c,p,d,f=e.constructor;e:if(t!=null){if(p=e.d,!p)return e;for(i=1,a=p[0];a>=10;a/=10)i++;if(o=t-i,o<0)o+=P,s=t,c=p[d=0],l=c/G(10,i-s-1)%10|0;else if(d=Math.ceil((o+1)/P),a=p.length,d>=a)if(n){for(;a++<=d;)p.push(0);c=l=0,i=1,o%=P,s=o-P+1}else break e;else{for(c=a=p[d],i=1;a>=10;a/=10)i++;o%=P,s=o-P+i,l=s<0?0:c/G(10,i-s-1)%10|0}if(n=n||t<0||p[d+1]!==void 0||(s<0?c:c%G(10,i-s-1)),u=r<4?(l||n)&&(r==0||r==(e.s<0?3:2)):l>5||l==5&&(r==4||n||r==6&&(o>0?s>0?c/G(10,i-s):0:p[d-1])%10&1||r==(e.s<0?8:7)),t<1||!p[0])return p.length=0,u?(t-=e.e+1,p[0]=G(10,(P-t%P)%P),e.e=-t||0):p[0]=e.e=0,e;if(o==0?(p.length=d,a=1,d--):(p.length=d+1,a=G(10,P-o),p[d]=s>0?(c/G(10,i-s)%G(10,s)|0)*a:0),u)for(;;)if(d==0){for(o=1,s=p[0];s>=10;s/=10)o++;for(s=p[0]+=a,a=1;s>=10;s/=10)a++;o!=a&&(e.e++,p[0]==Ce&&(p[0]=1));break}else{if(p[d]+=a,p[d]!=Ce)break;p[d--]=0,a=1}for(o=p.length;p[--o]===0;)p.pop()}return _&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function De(e,t,r){if(!e.isFinite())return ba(e);var n,i=e.e,o=re(e.d),s=o.length;return t?(r&&(n=r-s)>0?o=o.charAt(0)+\".\"+o.slice(1)+et(n):s>1&&(o=o.charAt(0)+\".\"+o.slice(1)),o=o+(e.e<0?\"e\":\"e+\")+e.e):i<0?(o=\"0.\"+et(-i-1)+o,r&&(n=r-s)>0&&(o+=et(n))):i>=s?(o+=et(i+1-s),r&&(n=r-i-1)>0&&(o=o+\".\"+et(n))):((n=i+1)<s&&(o=o.slice(0,n)+\".\"+o.slice(n)),r&&(n=r-s)>0&&(i+1===s&&(o+=\".\"),o+=et(n))),o}function _n(e,t){var r=e[0];for(t*=P;r>=10;r/=10)t++;return t}function Pn(e,t,r){if(t>rp)throw _=!0,r&&(e.precision=r),Error(pa);return x(new e(wn),t,1,!0)}function Te(e,t,r){if(t>ro)throw Error(pa);return x(new e(En),t,r,!0)}function ga(e){var t=e.length-1,r=t*P+1;if(t=e[t],t){for(;t%10==0;t/=10)r--;for(t=e[0];t>=10;t/=10)r++}return r}function et(e){for(var t=\"\";e--;)t+=\"0\";return t}function ya(e,t,r,n){var i,o=new e(1),s=Math.ceil(n/P+4);for(_=!1;;){if(r%2&&(o=o.times(t),la(o.d,s)&&(i=!0)),r=ae(r/2),r===0){r=o.d.length-1,i&&o.d[r]===0&&++o.d[r];break}t=t.times(t),la(t.d,s)}return _=!0,o}function aa(e){return e.d[e.d.length-1]&1}function ha(e,t,r){for(var n,i=new e(t[0]),o=0;++o<t.length;)if(n=new e(t[o]),n.s)i[r](n)&&(i=n);else{i=n;break}return i}function no(e,t){var r,n,i,o,s,a,l,u=0,c=0,p=0,d=e.constructor,f=d.rounding,y=d.precision;if(!e.d||!e.d[0]||e.e>17)return new d(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(t==null?(_=!1,l=y):l=t,a=new d(.03125);e.e>-2;)e=e.times(a),p+=5;for(n=Math.log(G(2,p))/Math.LN10*2+5|0,l+=n,r=o=s=new d(1),d.precision=l;;){if(o=x(o.times(e),l,1),r=r.times(++c),a=s.plus(L(o,r,l,1)),re(a.d).slice(0,l)===re(s.d).slice(0,l)){for(i=p;i--;)s=x(s.times(s),l,1);if(t==null)if(u<3&&hr(s.d,l-n,f,u))d.precision=l+=10,r=o=a=new d(1),c=0,u++;else return x(s,d.precision=y,f,_=!0);else return d.precision=y,s}s=a}}function tt(e,t){var r,n,i,o,s,a,l,u,c,p,d,f=1,y=10,g=e,T=g.d,A=g.constructor,R=A.rounding,E=A.precision;if(g.s<0||!T||!T[0]||!g.e&&T[0]==1&&T.length==1)return new A(T&&!T[0]?-1/0:g.s!=1?NaN:T?0:g);if(t==null?(_=!1,c=E):c=t,A.precision=c+=y,r=re(T),n=r.charAt(0),Math.abs(o=g.e)<15e14){for(;n<7&&n!=1||n==1&&r.charAt(1)>3;)g=g.times(e),r=re(g.d),n=r.charAt(0),f++;o=g.e,n>1?(g=new A(\"0.\"+r),o++):g=new A(n+\".\"+r.slice(1))}else return u=Pn(A,c+2,E).times(o+\"\"),g=tt(new A(n+\".\"+r.slice(1)),c-y).plus(u),A.precision=E,t==null?x(g,E,R,_=!0):g;for(p=g,l=s=g=L(g.minus(1),g.plus(1),c,1),d=x(g.times(g),c,1),i=3;;){if(s=x(s.times(d),c,1),u=l.plus(L(s,new A(i),c,1)),re(u.d).slice(0,c)===re(l.d).slice(0,c))if(l=l.times(2),o!==0&&(l=l.plus(Pn(A,c+2,E).times(o+\"\"))),l=L(l,new A(f),c,1),t==null)if(hr(l.d,c-y,R,a))A.precision=c+=y,u=s=g=L(p.minus(1),p.plus(1),c,1),d=x(g.times(g),c,1),i=a=1;else return x(l,A.precision=E,R,_=!0);else return A.precision=E,l;l=u,i+=2}}function ba(e){return String(e.s*e.s/0)}function io(e,t){var r,n,i;for((r=t.indexOf(\".\"))>-1&&(t=t.replace(\".\",\"\")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),n=0;t.charCodeAt(n)===48;n++);for(i=t.length;t.charCodeAt(i-1)===48;--i);if(t=t.slice(n,i),t){if(i-=n,e.e=r=r-n-1,e.d=[],n=(r+1)%P,r<0&&(n+=P),n<i){for(n&&e.d.push(+t.slice(0,n)),i-=P;n<i;)e.d.push(+t.slice(n,n+=P));t=t.slice(n),n=P-t.length}else n-=i;for(;n--;)t+=\"0\";e.d.push(+t),_&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function ip(e,t){var r,n,i,o,s,a,l,u,c;if(t.indexOf(\"_\")>-1){if(t=t.replace(/(\\d)_(?=\\d)/g,\"$1\"),fa.test(t))return io(e,t)}else if(t===\"Infinity\"||t===\"NaN\")return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(Xc.test(t))r=16,t=t.toLowerCase();else if(Zc.test(t))r=2;else if(ep.test(t))r=8;else throw Error(rt+t);for(o=t.search(/p/i),o>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),o=t.indexOf(\".\"),s=o>=0,n=e.constructor,s&&(t=t.replace(\".\",\"\"),a=t.length,o=a-o,i=ya(n,new n(r),o,o*2)),u=xn(t,r,Ce),c=u.length-1,o=c;u[o]===0;--o)u.pop();return o<0?new n(e.s*0):(e.e=_n(u,c),e.d=u,_=!1,s&&(e=L(e,i,a*4)),l&&(e=e.times(Math.abs(l)<54?G(2,l):xt.pow(2,l))),_=!0,e)}function op(e,t){var r,n=t.d.length;if(n<3)return t.isZero()?t:qt(e,2,t,t);r=1.4*Math.sqrt(n),r=r>16?16:r|0,t=t.times(1/Tn(5,r)),t=qt(e,2,t,t);for(var i,o=new e(5),s=new e(16),a=new e(20);r--;)i=t.times(t),t=t.times(o.plus(i.times(s.times(i).minus(a))));return t}function qt(e,t,r,n,i){var o,s,a,l,u=1,c=e.precision,p=Math.ceil(c/P);for(_=!1,l=r.times(r),a=new e(n);;){if(s=L(a.times(l),new e(t++*t++),c,1),a=i?n.plus(s):n.minus(s),n=L(s.times(l),new e(t++*t++),c,1),s=a.plus(n),s.d[p]!==void 0){for(o=p;s.d[o]===a.d[o]&&o--;);if(o==-1)break}o=a,a=n,n=s,s=o,u++}return _=!0,s.d.length=p+1,s}function Tn(e,t){for(var r=e;--t;)r*=e;return r}function xa(e,t){var r,n=t.s<0,i=Te(e,e.precision,1),o=i.times(.5);if(t=t.abs(),t.lte(o))return Ue=n?4:1,t;if(r=t.divToInt(i),r.isZero())Ue=n?3:2;else{if(t=t.minus(r.times(i)),t.lte(o))return Ue=aa(r)?n?2:3:n?4:1,t;Ue=aa(r)?n?1:4:n?3:2}return t.minus(i).abs()}function oo(e,t,r,n){var i,o,s,a,l,u,c,p,d,f=e.constructor,y=r!==void 0;if(y?(fe(r,1,nt),n===void 0?n=f.rounding:fe(n,0,8)):(r=f.precision,n=f.rounding),!e.isFinite())c=ba(e);else{for(c=De(e),s=c.indexOf(\".\"),y?(i=2,t==16?r=r*4-3:t==8&&(r=r*3-2)):i=t,s>=0&&(c=c.replace(\".\",\"\"),d=new f(1),d.e=c.length-s,d.d=xn(De(d),10,i),d.e=d.d.length),p=xn(c,10,i),o=l=p.length;p[--l]==0;)p.pop();if(!p[0])c=y?\"0p+0\":\"0\";else{if(s<0?o--:(e=new f(e),e.d=p,e.e=o,e=L(e,d,r,n,0,i),p=e.d,o=e.e,u=ca),s=p[r],a=i/2,u=u||p[r+1]!==void 0,u=n<4?(s!==void 0||u)&&(n===0||n===(e.s<0?3:2)):s>a||s===a&&(n===4||u||n===6&&p[r-1]&1||n===(e.s<0?8:7)),p.length=r,u)for(;++p[--r]>i-1;)p[r]=0,r||(++o,p.unshift(1));for(l=p.length;!p[l-1];--l);for(s=0,c=\"\";s<l;s++)c+=eo.charAt(p[s]);if(y){if(l>1)if(t==16||t==8){for(s=t==16?4:3,--l;l%s;l++)c+=\"0\";for(p=xn(c,i,t),l=p.length;!p[l-1];--l);for(s=1,c=\"1.\";s<l;s++)c+=eo.charAt(p[s])}else c=c.charAt(0)+\".\"+c.slice(1);c=c+(o<0?\"p\":\"p+\")+o}else if(o<0){for(;++o;)c=\"0\"+c;c=\"0.\"+c}else if(++o>l)for(o-=l;o--;)c+=\"0\";else o<l&&(c=c.slice(0,o)+\".\"+c.slice(o))}c=(t==16?\"0x\":t==2?\"0b\":t==8?\"0o\":\"\")+c}return e.s<0?\"-\"+c:c}function la(e,t){if(e.length>t)return e.length=t,!0}function sp(e){return new this(e).abs()}function ap(e){return new this(e).acos()}function lp(e){return new this(e).acosh()}function up(e,t){return new this(e).plus(t)}function cp(e){return new this(e).asin()}function pp(e){return new this(e).asinh()}function dp(e){return new this(e).atan()}function mp(e){return new this(e).atanh()}function fp(e,t){e=new this(e),t=new this(t);var r,n=this.precision,i=this.rounding,o=n+4;return!e.s||!t.s?r=new this(NaN):!e.d&&!t.d?(r=Te(this,o,1).times(t.s>0?.25:.75),r.s=e.s):!t.d||e.isZero()?(r=t.s<0?Te(this,n,i):new this(0),r.s=e.s):!e.d||t.isZero()?(r=Te(this,o,1).times(.5),r.s=e.s):t.s<0?(this.precision=o,this.rounding=1,r=this.atan(L(e,t,o,1)),t=Te(this,o,1),this.precision=n,this.rounding=i,r=e.s<0?r.minus(t):r.plus(t)):r=this.atan(L(e,t,o,1)),r}function gp(e){return new this(e).cbrt()}function yp(e){return x(e=new this(e),e.e+1,2)}function hp(e,t,r){return new this(e).clamp(t,r)}function bp(e){if(!e||typeof e!=\"object\")throw Error(vn+\"Object expected\");var t,r,n,i=e.defaults===!0,o=[\"precision\",1,nt,\"rounding\",0,8,\"toExpNeg\",-$t,0,\"toExpPos\",0,$t,\"maxE\",0,$t,\"minE\",-$t,0,\"modulo\",0,9];for(t=0;t<o.length;t+=3)if(r=o[t],i&&(this[r]=to[r]),(n=e[r])!==void 0)if(ae(n)===n&&n>=o[t+1]&&n<=o[t+2])this[r]=n;else throw Error(rt+r+\": \"+n);if(r=\"crypto\",i&&(this[r]=to[r]),(n=e[r])!==void 0)if(n===!0||n===!1||n===0||n===1)if(n)if(typeof crypto<\"u\"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[r]=!0;else throw Error(da);else this[r]=!1;else throw Error(rt+r+\": \"+n);return this}function xp(e){return new this(e).cos()}function wp(e){return new this(e).cosh()}function wa(e){var t,r,n;function i(o){var s,a,l,u=this;if(!(u instanceof i))return new i(o);if(u.constructor=i,ua(o)){u.s=o.s,_?!o.d||o.e>i.maxE?(u.e=NaN,u.d=null):o.e<i.minE?(u.e=0,u.d=[0]):(u.e=o.e,u.d=o.d.slice()):(u.e=o.e,u.d=o.d?o.d.slice():o.d);return}if(l=typeof o,l===\"number\"){if(o===0){u.s=1/o<0?-1:1,u.e=0,u.d=[0];return}if(o<0?(o=-o,u.s=-1):u.s=1,o===~~o&&o<1e7){for(s=0,a=o;a>=10;a/=10)s++;_?s>i.maxE?(u.e=NaN,u.d=null):s<i.minE?(u.e=0,u.d=[0]):(u.e=s,u.d=[o]):(u.e=s,u.d=[o]);return}else if(o*0!==0){o||(u.s=NaN),u.e=NaN,u.d=null;return}return io(u,o.toString())}else if(l!==\"string\")throw Error(rt+o);return(a=o.charCodeAt(0))===45?(o=o.slice(1),u.s=-1):(a===43&&(o=o.slice(1)),u.s=1),fa.test(o)?io(u,o):ip(u,o)}if(i.prototype=m,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=bp,i.clone=wa,i.isDecimal=ua,i.abs=sp,i.acos=ap,i.acosh=lp,i.add=up,i.asin=cp,i.asinh=pp,i.atan=dp,i.atanh=mp,i.atan2=fp,i.cbrt=gp,i.ceil=yp,i.clamp=hp,i.cos=xp,i.cosh=wp,i.div=Ep,i.exp=Pp,i.floor=vp,i.hypot=_p,i.ln=Tp,i.log=Cp,i.log10=Rp,i.log2=Ap,i.max=Mp,i.min=Sp,i.mod=Ip,i.mul=kp,i.pow=Fp,i.random=Op,i.round=Dp,i.sign=Np,i.sin=Lp,i.sinh=$p,i.sqrt=qp,i.sub=jp,i.sum=Vp,i.tan=Bp,i.tanh=Up,i.trunc=Kp,e===void 0&&(e={}),e&&e.defaults!==!0)for(n=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],t=0;t<n.length;)e.hasOwnProperty(r=n[t++])||(e[r]=this[r]);return i.config(e),i}function Ep(e,t){return new this(e).div(t)}function Pp(e){return new this(e).exp()}function vp(e){return x(e=new this(e),e.e+1,3)}function _p(){var e,t,r=new this(0);for(_=!1,e=0;e<arguments.length;)if(t=new this(arguments[e++]),t.d)r.d&&(r=r.plus(t.times(t)));else{if(t.s)return _=!0,new this(1/0);r=t}return _=!0,r.sqrt()}function ua(e){return e instanceof xt||e&&e.toStringTag===ma||!1}function Tp(e){return new this(e).ln()}function Cp(e,t){return new this(e).log(t)}function Ap(e){return new this(e).log(2)}function Rp(e){return new this(e).log(10)}function Mp(){return ha(this,arguments,\"lt\")}function Sp(){return ha(this,arguments,\"gt\")}function Ip(e,t){return new this(e).mod(t)}function kp(e,t){return new this(e).mul(t)}function Fp(e,t){return new this(e).pow(t)}function Op(e){var t,r,n,i,o=0,s=new this(1),a=[];if(e===void 0?e=this.precision:fe(e,1,nt),n=Math.ceil(e/P),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));o<n;)i=t[o],i>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:a[o++]=i%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(n*=4);o<n;)i=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((t[o+3]&127)<<24),i>=214e7?crypto.randomBytes(4).copy(t,o):(a.push(i%1e7),o+=4);o=n/4}else throw Error(da);else for(;o<n;)a[o++]=Math.random()*1e7|0;for(n=a[--o],e%=P,n&&e&&(i=G(10,P-e),a[o]=(n/i|0)*i);a[o]===0;o--)a.pop();if(o<0)r=0,a=[0];else{for(r=-1;a[0]===0;r-=P)a.shift();for(n=1,i=a[0];i>=10;i/=10)n++;n<P&&(r-=P-n)}return s.e=r,s.d=a,s}function Dp(e){return x(e=new this(e),e.e+1,this.rounding)}function Np(e){return e=new this(e),e.d?e.d[0]?e.s:0*e.s:e.s||NaN}function Lp(e){return new this(e).sin()}function $p(e){return new this(e).sinh()}function qp(e){return new this(e).sqrt()}function jp(e,t){return new this(e).sub(t)}function Vp(){var e=0,t=arguments,r=new this(t[e]);for(_=!1;r.s&&++e<t.length;)r=r.plus(t[e]);return _=!0,x(r,this.precision,this.rounding)}function Bp(e){return new this(e).tan()}function Up(e){return new this(e).tanh()}function Kp(e){return x(e=new this(e),e.e+1,1)}m[Symbol.for(\"nodejs.util.inspect.custom\")]=m.toString;m[Symbol.toStringTag]=\"Decimal\";var xt=m.constructor=wa(to);wn=new xt(wn);En=new xt(En);var Ne=xt;function jt(e){return xt.isDecimal(e)?!0:e!==null&&typeof e==\"object\"&&typeof e.s==\"number\"&&typeof e.e==\"number\"&&typeof e.toFixed==\"function\"&&Array.isArray(e.d)}var br=class{constructor(t,r,n,i,o){this.modelName=t,this.name=r,this.typeName=n,this.isList=i,this.isEnum=o}_toGraphQLInputType(){let t=this.isList?\"List\":\"\",r=this.isEnum?\"Enum\":\"\";return`${t}${r}${this.typeName}FieldRefInput<${this.modelName}>`}};function Vt(e){return e instanceof br}var Cn=class{constructor(t){this.value=t}write(t){t.write(this.value)}markAsError(){this.value.markAsError()}};var An=e=>e,Rn={bold:An,red:An,green:An,dim:An,enabled:!1},Ea={bold:pe,red:ve,green:pt,dim:We,enabled:!0},Bt={write(e){e.writeLine(\",\")}};var Le=class{constructor(t){this.contents=t;this.isUnderlined=!1;this.color=t=>t}underline(){return this.isUnderlined=!0,this}setColor(t){return this.color=t,this}write(t){let r=t.getCurrentLineLength();t.write(this.color(this.contents)),this.isUnderlined&&t.afterNextNewline(()=>{t.write(\" \".repeat(r)).writeLine(this.color(\"~\".repeat(this.contents.length)))})}};var it=class{constructor(){this.hasError=!1}markAsError(){return this.hasError=!0,this}};var Ut=class extends it{constructor(){super(...arguments);this.items=[]}addItem(r){return this.items.push(new Cn(r)),this}getField(r){return this.items[r]}getPrintWidth(){return this.items.length===0?2:Math.max(...this.items.map(n=>n.value.getPrintWidth()))+2}write(r){if(this.items.length===0){this.writeEmpty(r);return}this.writeWithItems(r)}writeEmpty(r){let n=new Le(\"[]\");this.hasError&&n.setColor(r.context.colors.red).underline(),r.write(n)}writeWithItems(r){let{colors:n}=r.context;r.writeLine(\"[\").withIndent(()=>r.writeJoined(Bt,this.items).newLine()).write(\"]\"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(n.red(\"~\".repeat(this.getPrintWidth())))})}};var Pa=\": \",Mn=class{constructor(t,r){this.name=t;this.value=r;this.hasError=!1}markAsError(){this.hasError=!0}getPrintWidth(){return this.name.length+this.value.getPrintWidth()+Pa.length}write(t){let r=new Le(this.name);this.hasError&&r.underline().setColor(t.context.colors.red),t.write(r).write(Pa).write(this.value)}};var z=class e extends it{constructor(){super(...arguments);this.fields={};this.suggestions=[]}addField(r){this.fields[r.name]=r}addSuggestion(r){this.suggestions.push(r)}getField(r){return this.fields[r]}getDeepField(r){let[n,...i]=r,o=this.getField(n);if(!o)return;let s=o;for(let a of i){let l;if(s.value instanceof e?l=s.value.getField(a):s.value instanceof Ut&&(l=s.value.getField(Number(a))),!l)return;s=l}return s}getDeepFieldValue(r){return r.length===0?this:this.getDeepField(r)?.value}hasField(r){return!!this.getField(r)}removeAllFields(){this.fields={}}removeField(r){delete this.fields[r]}getFields(){return this.fields}isEmpty(){return Object.keys(this.fields).length===0}getFieldValue(r){return this.getField(r)?.value}getDeepSubSelectionValue(r){let n=this;for(let i of r){if(!(n instanceof e))return;let o=n.getSubSelectionValue(i);if(!o)return;n=o}return n}getDeepSelectionParent(r){let n=this.getSelectionParent();if(!n)return;let i=n;for(let o of r){let s=i.value.getFieldValue(o);if(!s||!(s instanceof e))return;let a=s.getSelectionParent();if(!a)return;i=a}return i}getSelectionParent(){let r=this.getField(\"select\");if(r?.value instanceof e)return{kind:\"select\",value:r.value};let n=this.getField(\"include\");if(n?.value instanceof e)return{kind:\"include\",value:n.value}}getSubSelectionValue(r){return this.getSelectionParent()?.value.fields[r].value}getPrintWidth(){let r=Object.values(this.fields);return r.length==0?2:Math.max(...r.map(i=>i.getPrintWidth()))+2}write(r){let n=Object.values(this.fields);if(n.length===0&&this.suggestions.length===0){this.writeEmpty(r);return}this.writeWithContents(r,n)}writeEmpty(r){let n=new Le(\"{}\");this.hasError&&n.setColor(r.context.colors.red).underline(),r.write(n)}writeWithContents(r,n){r.writeLine(\"{\").withIndent(()=>{r.writeJoined(Bt,[...n,...this.suggestions]).newLine()}),r.write(\"}\"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(r.context.colors.red(\"~\".repeat(this.getPrintWidth())))})}};var Y=class extends it{constructor(r){super();this.text=r}getPrintWidth(){return this.text.length}write(r){let n=new Le(this.text);this.hasError&&n.underline().setColor(r.context.colors.red),r.write(n)}};var so=class{constructor(t){this.errorMessages=[];this.arguments=t}write(t){t.write(this.arguments)}addErrorMessage(t){this.errorMessages.push(t)}renderAllMessages(t){return this.errorMessages.map(r=>r(t)).join(`\n`)}};function Sn(e){return new so(va(e))}function va(e){let t=new z;for(let[r,n]of Object.entries(e)){let i=new Mn(r,_a(n));t.addField(i)}return t}function _a(e){if(typeof e==\"string\")return new Y(JSON.stringify(e));if(typeof e==\"number\"||typeof e==\"boolean\")return new Y(String(e));if(typeof e==\"bigint\")return new Y(`${e}n`);if(e===null)return new Y(\"null\");if(e===void 0)return new Y(\"undefined\");if(jt(e))return new Y(`new Prisma.Decimal(\"${e.toFixed()}\")`);if(e instanceof Uint8Array)return Buffer.isBuffer(e)?new Y(`Buffer.alloc(${e.byteLength})`):new Y(`new Uint8Array(${e.byteLength})`);if(e instanceof Date){let t=bn(e)?e.toISOString():\"Invalid Date\";return new Y(`new Date(\"${t}\")`)}return e instanceof ke?new Y(`Prisma.${e._getName()}`):Vt(e)?new Y(`prisma.${Zo(e.modelName)}.$fields.${e.name}`):Array.isArray(e)?Gp(e):typeof e==\"object\"?va(e):new Y(Object.prototype.toString.call(e))}function Gp(e){let t=new Ut;for(let r of e)t.addItem(_a(r));return t}function Ta(e){if(e===void 0)return\"\";let t=Sn(e);return new Nt(0,{colors:Rn}).write(t).toString()}var xr=\"<unknown>\";function Ca(e){var t=e.split(`\n`);return t.reduce(function(r,n){var i=Wp(n)||Yp(n)||ed(n)||id(n)||rd(n);return i&&r.push(i),r},[])}var Jp=/^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,Hp=/\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;function Wp(e){var t=Jp.exec(e);if(!t)return null;var r=t[2]&&t[2].indexOf(\"native\")===0,n=t[2]&&t[2].indexOf(\"eval\")===0,i=Hp.exec(t[2]);return n&&i!=null&&(t[2]=i[1],t[3]=i[2],t[4]=i[3]),{file:r?null:t[2],methodName:t[1]||xr,arguments:r?[t[2]]:[],lineNumber:t[3]?+t[3]:null,column:t[4]?+t[4]:null}}var zp=/^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;function Yp(e){var t=zp.exec(e);return t?{file:t[2],methodName:t[1]||xr,arguments:[],lineNumber:+t[3],column:t[4]?+t[4]:null}:null}var Zp=/^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,Xp=/(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;function ed(e){var t=Zp.exec(e);if(!t)return null;var r=t[3]&&t[3].indexOf(\" > eval\")>-1,n=Xp.exec(t[3]);return r&&n!=null&&(t[3]=n[1],t[4]=n[2],t[5]=null),{file:t[3],methodName:t[1]||xr,arguments:t[2]?t[2].split(\",\"):[],lineNumber:t[4]?+t[4]:null,column:t[5]?+t[5]:null}}var td=/^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;function rd(e){var t=td.exec(e);return t?{file:t[3],methodName:t[1]||xr,arguments:[],lineNumber:+t[4],column:t[5]?+t[5]:null}:null}var nd=/^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;function id(e){var t=nd.exec(e);return t?{file:t[2],methodName:t[1]||xr,arguments:[],lineNumber:+t[3],column:t[4]?+t[4]:null}:null}var ao=class{getLocation(){return null}},lo=class{constructor(){this._error=new Error}getLocation(){let t=this._error.stack;if(!t)return null;let n=Ca(t).find(i=>{if(!i.file)return!1;let o=Li(i.file);return o!==\"<anonymous>\"&&!o.includes(\"@prisma\")&&!o.includes(\"/packages/client/src/runtime/\")&&!o.endsWith(\"/runtime/binary.js\")&&!o.endsWith(\"/runtime/library.js\")&&!o.endsWith(\"/runtime/edge.js\")&&!o.endsWith(\"/runtime/edge-esm.js\")&&!o.startsWith(\"internal/\")&&!i.methodName.includes(\"new \")&&!i.methodName.includes(\"getCallSite\")&&!i.methodName.includes(\"Proxy.\")&&i.methodName.split(\".\").length<4});return!n||!n.file?null:{fileName:n.file,lineNumber:n.lineNumber,columnNumber:n.column}}};function ot(e){return e===\"minimal\"?new ao:new lo}var Aa={_avg:!0,_count:!0,_sum:!0,_min:!0,_max:!0};function Kt(e={}){let t=sd(e);return Object.entries(t).reduce((n,[i,o])=>(Aa[i]!==void 0?n.select[i]={select:o}:n[i]=o,n),{select:{}})}function sd(e={}){return typeof e._count==\"boolean\"?{...e,_count:{_all:e._count}}:e}function In(e={}){return t=>(typeof e._count==\"boolean\"&&(t._count=t._count._all),t)}function Ra(e,t){let r=In(e);return t({action:\"aggregate\",unpacker:r,argsMapper:Kt})(e)}function ad(e={}){let{select:t,...r}=e;return typeof t==\"object\"?Kt({...r,_count:t}):Kt({...r,_count:{_all:!0}})}function ld(e={}){return typeof e.select==\"object\"?t=>In(e)(t)._count:t=>In(e)(t)._count._all}function Ma(e,t){return t({action:\"count\",unpacker:ld(e),argsMapper:ad})(e)}function ud(e={}){let t=Kt(e);if(Array.isArray(t.by))for(let r of t.by)typeof r==\"string\"&&(t.select[r]=!0);else typeof t.by==\"string\"&&(t.select[t.by]=!0);return t}function cd(e={}){return t=>(typeof e?._count==\"boolean\"&&t.forEach(r=>{r._count=r._count._all}),t)}function Sa(e,t){return t({action:\"groupBy\",unpacker:cd(e),argsMapper:ud})(e)}function Ia(e,t,r){if(t===\"aggregate\")return n=>Ra(n,r);if(t===\"count\")return n=>Ma(n,r);if(t===\"groupBy\")return n=>Sa(n,r)}function ka(e,t){let r=t.fields.filter(i=>!i.relationName),n=Ki(r,i=>i.name);return new Proxy({},{get(i,o){if(o in i||typeof o==\"symbol\")return i[o];let s=n[o];if(s)return new br(e,o,s.type,s.isList,s.kind===\"enum\")},...hn(Object.keys(n))})}var Fa=e=>Array.isArray(e)?e:e.split(\".\"),uo=(e,t)=>Fa(t).reduce((r,n)=>r&&r[n],e),Oa=(e,t,r)=>Fa(t).reduceRight((n,i,o,s)=>Object.assign({},uo(e,s.slice(0,o)),{[i]:n}),r);function pd(e,t){return e===void 0||t===void 0?[]:[...t,\"select\",e]}function dd(e,t,r){return t===void 0?e??{}:Oa(t,r,e||!0)}function co(e,t,r,n,i,o){let a=e._runtimeDataModel.models[t].fields.reduce((l,u)=>({...l,[u.name]:u}),{});return l=>{let u=ot(e._errorFormat),c=pd(n,i),p=dd(l,o,c),d=r({dataPath:c,callsite:u})(p),f=md(e,t);return new Proxy(d,{get(y,g){if(!f.includes(g))return y[g];let A=[a[g].type,r,g],R=[c,p];return co(e,...A,...R)},...hn([...f,...Object.getOwnPropertyNames(d)])})}}function md(e,t){return e._runtimeDataModel.models[t].fields.filter(r=>r.kind===\"object\").map(r=>r.name)}var ja=F($i());var qa=F(__webpack_require__(/*! fs */ \"fs\"));var Da={keyword:ze,entity:ze,value:e=>pe(Mt(e)),punctuation:Mt,directive:ze,function:ze,variable:e=>pe(Mt(e)),string:e=>pe(pt(e)),boolean:Re,number:ze,comment:Yr};var fd=e=>e,kn={},gd=0,C={manual:kn.Prism&&kn.Prism.manual,disableWorkerMessageHandler:kn.Prism&&kn.Prism.disableWorkerMessageHandler,util:{encode:function(e){if(e instanceof Ae){let t=e;return new Ae(t.type,C.util.encode(t.content),t.alias)}else return Array.isArray(e)?e.map(C.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++gd}),e.__id},clone:function e(t,r){let n,i,o=C.util.type(t);switch(r=r||{},o){case\"Object\":if(i=C.util.objId(t),r[i])return r[i];n={},r[i]=n;for(let s in t)t.hasOwnProperty(s)&&(n[s]=e(t[s],r));return n;case\"Array\":return i=C.util.objId(t),r[i]?r[i]:(n=[],r[i]=n,t.forEach(function(s,a){n[a]=e(s,r)}),n);default:return t}}},languages:{extend:function(e,t){let r=C.util.clone(C.languages[e]);for(let n in t)r[n]=t[n];return r},insertBefore:function(e,t,r,n){n=n||C.languages;let i=n[e],o={};for(let a in i)if(i.hasOwnProperty(a)){if(a==t)for(let l in r)r.hasOwnProperty(l)&&(o[l]=r[l]);r.hasOwnProperty(a)||(o[a]=i[a])}let s=n[e];return n[e]=o,C.languages.DFS(C.languages,function(a,l){l===s&&a!=e&&(this[a]=o)}),o},DFS:function e(t,r,n,i){i=i||{};let o=C.util.objId;for(let s in t)if(t.hasOwnProperty(s)){r.call(t,s,t[s],n||s);let a=t[s],l=C.util.type(a);l===\"Object\"&&!i[o(a)]?(i[o(a)]=!0,e(a,r,null,i)):l===\"Array\"&&!i[o(a)]&&(i[o(a)]=!0,e(a,r,s,i))}}},plugins:{},highlight:function(e,t,r){let n={code:e,grammar:t,language:r};return C.hooks.run(\"before-tokenize\",n),n.tokens=C.tokenize(n.code,n.grammar),C.hooks.run(\"after-tokenize\",n),Ae.stringify(C.util.encode(n.tokens),n.language)},matchGrammar:function(e,t,r,n,i,o,s){for(let g in r){if(!r.hasOwnProperty(g)||!r[g])continue;if(g==s)return;let T=r[g];T=C.util.type(T)===\"Array\"?T:[T];for(let A=0;A<T.length;++A){let R=T[A],E=R.inside,S=!!R.lookbehind,we=!!R.greedy,ee=0,ut=R.alias;if(we&&!R.pattern.global){let K=R.pattern.toString().match(/[imuy]*$/)[0];R.pattern=RegExp(R.pattern.source,K+\"g\")}R=R.pattern||R;for(let K=n,ne=i;K<t.length;ne+=t[K].length,++K){let je=t[K];if(t.length>e.length)return;if(je instanceof Ae)continue;if(we&&K!=t.length-1){R.lastIndex=ne;var p=R.exec(e);if(!p)break;var c=p.index+(S?p[1].length:0),d=p.index+p[0].length,a=K,l=ne;for(let N=t.length;a<N&&(l<d||!t[a].type&&!t[a-1].greedy);++a)l+=t[a].length,c>=l&&(++K,ne=l);if(t[K]instanceof Ae)continue;u=a-K,je=e.slice(ne,l),p.index-=ne}else{R.lastIndex=0;var p=R.exec(je),u=1}if(!p){if(o)break;continue}S&&(ee=p[1]?p[1].length:0);var c=p.index+ee,p=p[0].slice(ee),d=c+p.length,f=je.slice(0,c),y=je.slice(d);let ie=[K,u];f&&(++K,ne+=f.length,ie.push(f));let _t=new Ae(g,E?C.tokenize(p,E):p,ut,p,we);if(ie.push(_t),y&&ie.push(y),Array.prototype.splice.apply(t,ie),u!=1&&C.matchGrammar(e,t,r,K,ne,!0,g),o)break}}}},tokenize:function(e,t){let r=[e],n=t.rest;if(n){for(let i in n)t[i]=n[i];delete t.rest}return C.matchGrammar(e,r,t,0,0,!1),r},hooks:{all:{},add:function(e,t){let r=C.hooks.all;r[e]=r[e]||[],r[e].push(t)},run:function(e,t){let r=C.hooks.all[e];if(!(!r||!r.length))for(var n=0,i;i=r[n++];)i(t)}},Token:Ae};C.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,boolean:/\\b(?:true|false)\\b/,function:/\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};C.languages.javascript=C.languages.extend(\"clike\",{\"class-name\":[C.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\\s*)(?:catch|finally)\\b/,lookbehind:!0},{pattern:/(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],number:/\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,function:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/});C.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;C.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,lookbehind:!0,inside:C.languages.javascript},{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,inside:C.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:C.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:C.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/});C.languages.markup&&C.languages.markup.tag.addInlined(\"script\",\"javascript\");C.languages.js=C.languages.javascript;C.languages.typescript=C.languages.extend(\"javascript\",{keyword:/\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,builtin:/\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/});C.languages.ts=C.languages.typescript;function Ae(e,t,r,n,i){this.type=e,this.content=t,this.alias=r,this.length=(n||\"\").length|0,this.greedy=!!i}Ae.stringify=function(e,t){return typeof e==\"string\"?e:Array.isArray(e)?e.map(function(r){return Ae.stringify(r,t)}).join(\"\"):yd(e.type)(e.content)};function yd(e){return Da[e]||fd}function Na(e){return hd(e,C.languages.javascript)}function hd(e,t){return C.tokenize(e,t).map(n=>Ae.stringify(n)).join(\"\")}var La=F(Us());function $a(e){return(0,La.default)(e)}var Fn=class e{static read(t){let r;try{r=qa.default.readFileSync(t,\"utf-8\")}catch{return null}return e.fromContent(r)}static fromContent(t){let r=t.split(/\\r?\\n/);return new e(1,r)}constructor(t,r){this.firstLineNumber=t,this.lines=r}get lastLineNumber(){return this.firstLineNumber+this.lines.length-1}mapLineAt(t,r){if(t<this.firstLineNumber||t>this.lines.length+this.firstLineNumber)return this;let n=t-this.firstLineNumber,i=[...this.lines];return i[n]=r(i[n]),new e(this.firstLineNumber,i)}mapLines(t){return new e(this.firstLineNumber,this.lines.map((r,n)=>t(r,this.firstLineNumber+n)))}lineAt(t){return this.lines[t-this.firstLineNumber]}prependSymbolAt(t,r){return this.mapLines((n,i)=>i===t?`${r} ${n}`:`  ${n}`)}slice(t,r){let n=this.lines.slice(t-1,r).join(`\n`);return new e(t,$a(n).split(`\n`))}highlight(){let t=Na(this.toString());return new e(this.firstLineNumber,t.split(`\n`))}toString(){return this.lines.join(`\n`)}};var bd={red:ve,gray:Yr,dim:We,bold:pe,underline:ue,highlightSource:e=>e.highlight()},xd={red:e=>e,gray:e=>e,dim:e=>e,bold:e=>e,underline:e=>e,highlightSource:e=>e};function wd({callsite:e,message:t,originalMethod:r,isPanic:n,callArguments:i},o){let s={functionName:`prisma.${r}()`,message:t,isPanic:n??!1,callArguments:i};if(!e||typeof window<\"u\"||\"development\"===\"production\")return s;let a=e.getLocation();if(!a||!a.lineNumber||!a.columnNumber)return s;let l=Math.max(1,a.lineNumber-3),u=Fn.read(a.fileName)?.slice(l,a.lineNumber),c=u?.lineAt(a.lineNumber);if(u&&c){let p=Pd(c),d=Ed(c);if(!d)return s;s.functionName=`${d.code})`,s.location=a,n||(u=u.mapLineAt(a.lineNumber,y=>y.slice(0,d.openingBraceIndex))),u=o.highlightSource(u);let f=String(u.lastLineNumber).length;if(s.contextLines=u.mapLines((y,g)=>o.gray(String(g).padStart(f))+\" \"+y).mapLines(y=>o.dim(y)).prependSymbolAt(a.lineNumber,o.bold(o.red(\"\\u2192\"))),i){let y=p+f+1;y+=2,s.callArguments=(0,ja.default)(i,y).slice(y)}}return s}function Ed(e){let t=Object.keys(Ee.ModelAction).join(\"|\"),n=new RegExp(String.raw`\\.(${t})\\(`).exec(e);if(n){let i=n.index+n[0].length,o=e.lastIndexOf(\" \",n.index)+1;return{code:e.slice(o,i),openingBraceIndex:i}}return null}function Pd(e){let t=0;for(let r=0;r<e.length;r++){if(e.charAt(r)!==\" \")return t;t++}return t}function vd({functionName:e,location:t,message:r,isPanic:n,contextLines:i,callArguments:o},s){let a=[\"\"],l=t?\" in\":\":\";if(n?(a.push(s.red(`Oops, an unknown error occurred! This is ${s.bold(\"on us\")}, you did nothing wrong.`)),a.push(s.red(`It occurred in the ${s.bold(`\\`${e}\\``)} invocation${l}`))):a.push(s.red(`Invalid ${s.bold(`\\`${e}\\``)} invocation${l}`)),t&&a.push(s.underline(_d(t))),i){a.push(\"\");let u=[i.toString()];o&&(u.push(o),u.push(s.dim(\")\"))),a.push(u.join(\"\")),o&&a.push(\"\")}else a.push(\"\"),o&&a.push(o),a.push(\"\");return a.push(r),a.join(`\n`)}function _d(e){let t=[e.fileName];return e.lineNumber&&t.push(String(e.lineNumber)),e.columnNumber&&t.push(String(e.columnNumber)),t.join(\":\")}function Qt(e){let t=e.showColors?bd:xd,r=wd(e,t);return vd(r,t)}function Va(e,t,r,n){return e===Ee.ModelAction.findFirstOrThrow||e===Ee.ModelAction.findUniqueOrThrow?Td(t,r,n):n}function Td(e,t,r){return async n=>{if(\"rejectOnNotFound\"in n.args){let o=Qt({originalMethod:n.clientMethod,callsite:n.callsite,message:\"'rejectOnNotFound' option is not supported\"});throw new se(o,{clientVersion:t})}return await r(n).catch(o=>{throw o instanceof H&&o.code===\"P2025\"?new Be(`No ${e} found`,t):o})}}function $e(e){return e.replace(/^./,t=>t.toLowerCase())}var Cd=[\"findUnique\",\"findUniqueOrThrow\",\"findFirst\",\"findFirstOrThrow\",\"create\",\"update\",\"upsert\",\"delete\"],Ad=[\"aggregate\",\"count\",\"groupBy\"];function po(e,t){let r=e._extensions.getAllModelExtensions(t)??{},n=[Rd(e,t),Sd(e,t),gr(r),ce(\"name\",()=>t),ce(\"$name\",()=>t),ce(\"$parent\",()=>e._appliedParent)];return Oe({},n)}function Rd(e,t){let r=$e(t),n=Object.keys(Ee.ModelAction).concat(\"count\");return{getKeys(){return n},getPropertyValue(i){let o=i,s=l=>e._request(l);s=Va(o,t,e._clientVersion,s);let a=l=>u=>{let c=ot(e._errorFormat);return e._createPrismaPromise(p=>{let d={args:u,dataPath:[],action:o,model:t,clientMethod:`${r}.${i}`,jsModelName:r,transaction:p,callsite:c};return s({...d,...l})})};return Cd.includes(o)?co(e,t,a):Md(i)?Ia(e,i,a):a({})}}}function Md(e){return Ad.includes(e)}function Sd(e,t){return bt(ce(\"fields\",()=>{let r=e._runtimeDataModel.models[t];return ka(t,r)}))}function Ba(e){return e.replace(/^./,t=>t.toUpperCase())}var mo=Symbol();function wr(e){let t=[Id(e),ce(mo,()=>e),ce(\"$parent\",()=>e._appliedParent)],r=e._extensions.getAllClientExtensions();return r&&t.push(gr(r)),Oe(e,t)}function Id(e){let t=Object.keys(e._runtimeDataModel.models),r=t.map($e),n=[...new Set(t.concat(r))];return bt({getKeys(){return n},getPropertyValue(i){let o=Ba(i);if(e._runtimeDataModel.models[o]!==void 0)return po(e,o);if(e._runtimeDataModel.models[i]!==void 0)return po(e,i)},getPropertyDescriptor(i){if(!r.includes(i))return{enumerable:!1}}})}function On(e){return e[mo]?e[mo]:e}function Ua(e){if(typeof e==\"function\")return e(this);let t=On(this),r=Object.create(t,{_extensions:{value:this._extensions.append(e)},_appliedParent:{value:this,configurable:!0},$use:{value:void 0},$on:{value:void 0}});return wr(r)}function Ka({result:e,modelName:t,select:r,extensions:n}){let i=n.getAllComputedFields(t);if(!i)return e;let o=[],s=[];for(let a of Object.values(i)){if(r){if(!r[a.name])continue;let l=a.needs.filter(u=>!r[u]);l.length>0&&s.push(yr(l))}kd(e,a.needs)&&o.push(Fd(a,Oe(e,o)))}return o.length>0||s.length>0?Oe(e,[...o,...s]):e}function kd(e,t){return t.every(r=>Ui(e,r))}function Fd(e,t){return bt(ce(e.name,()=>e.compute(t)))}function Dn({visitor:e,result:t,args:r,runtimeDataModel:n,modelName:i}){if(Array.isArray(t)){for(let s=0;s<t.length;s++)t[s]=Dn({result:t[s],args:r,modelName:i,runtimeDataModel:n,visitor:e});return t}let o=e(t,i,r)??t;return r.include&&Qa({includeOrSelect:r.include,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),r.select&&Qa({includeOrSelect:r.select,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),o}function Qa({includeOrSelect:e,result:t,parentModelName:r,runtimeDataModel:n,visitor:i}){for(let[o,s]of Object.entries(e)){if(!s||t[o]==null)continue;let l=n.models[r].fields.find(c=>c.name===o);if(!l||l.kind!==\"object\"||!l.relationName)continue;let u=typeof s==\"object\"?s:{};t[o]=Dn({visitor:i,result:t[o],args:u,modelName:l.type,runtimeDataModel:n})}}function Ga({result:e,modelName:t,args:r,extensions:n,runtimeDataModel:i}){return n.isEmpty()||e==null||typeof e!=\"object\"||!i.models[t]?e:Dn({result:e,args:r??{},modelName:t,runtimeDataModel:i,visitor:(s,a,l)=>Ka({result:s,modelName:$e(a),select:l.select,extensions:n})})}function Ja(e){if(e instanceof me)return Od(e);if(Array.isArray(e)){let r=[e[0]];for(let n=1;n<e.length;n++)r[n]=Er(e[n]);return r}let t={};for(let r in e)t[r]=Er(e[r]);return t}function Od(e){return new me(e.strings,e.values)}function Er(e){if(typeof e!=\"object\"||e==null||e instanceof ke||Vt(e))return e;if(jt(e))return new Ne(e.toFixed());if(Lt(e))return new Date(+e);if(ArrayBuffer.isView(e))return e.slice(0);if(Array.isArray(e)){let t=e.length,r;for(r=Array(t);t--;)r[t]=Er(e[t]);return r}if(typeof e==\"object\"){let t={};for(let r in e)r===\"__proto__\"?Object.defineProperty(t,r,{value:Er(e[r]),configurable:!0,enumerable:!0,writable:!0}):t[r]=Er(e[r]);return t}yt(e,\"Unknown value\")}function Wa(e,t,r,n=0){return e._createPrismaPromise(i=>{let o=t.customDataProxyFetch;return\"transaction\"in t&&i!==void 0&&(t.transaction?.kind===\"batch\"&&t.transaction.lock.then(),t.transaction=i),n===r.length?e._executeRequest(t):r[n]({model:t.model,operation:t.model?t.action:t.clientMethod,args:Ja(t.args??{}),__internalParams:t,query:(s,a=t)=>{let l=a.customDataProxyFetch;return a.customDataProxyFetch=Xa(o,l),a.args=s,Wa(e,a,r,n+1)}})})}function za(e,t){let{jsModelName:r,action:n,clientMethod:i}=t,o=r?n:i;if(e._extensions.isEmpty())return e._executeRequest(t);let s=e._extensions.getAllQueryCallbacks(r??\"$none\",o);return Wa(e,t,s)}function Ya(e){return t=>{let r={requests:t},n=t[0].extensions.getAllBatchQueryCallbacks();return n.length?Za(r,n,0,e):e(r)}}function Za(e,t,r,n){if(r===t.length)return n(e);let i=e.customDataProxyFetch,o=e.requests[0].transaction;return t[r]({args:{queries:e.requests.map(s=>({model:s.modelName,operation:s.action,args:s.args})),transaction:o?{isolationLevel:o.kind===\"batch\"?o.isolationLevel:void 0}:void 0},__internalParams:e,query(s,a=e){let l=a.customDataProxyFetch;return a.customDataProxyFetch=Xa(i,l),Za(a,t,r+1,n)}})}var Ha=e=>e;function Xa(e=Ha,t=Ha){return r=>e(t(r))}function tl(e,t,r){let n=$e(r);return!t.result||!(t.result.$allModels||t.result[n])?e:Dd({...e,...el(t.name,e,t.result.$allModels),...el(t.name,e,t.result[n])})}function Dd(e){let t=new Fe,r=(n,i)=>t.getOrCreate(n,()=>i.has(n)?[n]:(i.add(n),e[n]?e[n].needs.flatMap(o=>r(o,i)):[n]));return Ot(e,n=>({...n,needs:r(n.name,new Set)}))}function el(e,t,r){return r?Ot(r,({needs:n,compute:i},o)=>({name:o,needs:n?Object.keys(n).filter(s=>n[s]):[],compute:Nd(t,o,i)})):{}}function Nd(e,t,r){let n=e?.[t]?.compute;return n?i=>r({...i,[t]:n(i)}):r}function rl(e,t){if(!t)return e;let r={...e};for(let n of Object.values(t))if(e[n.name])for(let i of n.needs)r[i]=!0;return r}var Nn=class{constructor(t,r){this.extension=t;this.previous=r;this.computedFieldsCache=new Fe;this.modelExtensionsCache=new Fe;this.queryCallbacksCache=new Fe;this.clientExtensions=cr(()=>this.extension.client?{...this.previous?.getAllClientExtensions(),...this.extension.client}:this.previous?.getAllClientExtensions());this.batchCallbacks=cr(()=>{let t=this.previous?.getAllBatchQueryCallbacks()??[],r=this.extension.query?.$__internalBatch;return r?t.concat(r):t})}getAllComputedFields(t){return this.computedFieldsCache.getOrCreate(t,()=>tl(this.previous?.getAllComputedFields(t),this.extension,t))}getAllClientExtensions(){return this.clientExtensions.get()}getAllModelExtensions(t){return this.modelExtensionsCache.getOrCreate(t,()=>{let r=$e(t);return!this.extension.model||!(this.extension.model[r]||this.extension.model.$allModels)?this.previous?.getAllModelExtensions(t):{...this.previous?.getAllModelExtensions(t),...this.extension.model.$allModels,...this.extension.model[r]}})}getAllQueryCallbacks(t,r){return this.queryCallbacksCache.getOrCreate(`${t}:${r}`,()=>{let n=this.previous?.getAllQueryCallbacks(t,r)??[],i=[],o=this.extension.query;return!o||!(o[t]||o.$allModels||o[r]||o.$allOperations)?n:(o[t]!==void 0&&(o[t][r]!==void 0&&i.push(o[t][r]),o[t].$allOperations!==void 0&&i.push(o[t].$allOperations)),t!==\"$none\"&&o.$allModels!==void 0&&(o.$allModels[r]!==void 0&&i.push(o.$allModels[r]),o.$allModels.$allOperations!==void 0&&i.push(o.$allModels.$allOperations)),o[r]!==void 0&&i.push(o[r]),o.$allOperations!==void 0&&i.push(o.$allOperations),n.concat(i))})}getAllBatchQueryCallbacks(){return this.batchCallbacks.get()}},Ln=class e{constructor(t){this.head=t}static empty(){return new e}static single(t){return new e(new Nn(t))}isEmpty(){return this.head===void 0}append(t){return new e(new Nn(t,this.head))}getAllComputedFields(t){return this.head?.getAllComputedFields(t)}getAllClientExtensions(){return this.head?.getAllClientExtensions()}getAllModelExtensions(t){return this.head?.getAllModelExtensions(t)}getAllQueryCallbacks(t,r){return this.head?.getAllQueryCallbacks(t,r)??[]}getAllBatchQueryCallbacks(){return this.head?.getAllBatchQueryCallbacks()??[]}};var nl=$(\"prisma:client\"),il={Vercel:\"vercel\",\"Netlify CI\":\"netlify\"};function ol({postinstall:e,ciName:t,clientVersion:r}){if(nl(\"checkPlatformCaching:postinstall\",e),nl(\"checkPlatformCaching:ciName\",t),e===!0&&t&&t in il){let n=`Prisma has detected that this project was built on ${t}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \\`prisma generate\\` command during the build process.\n\nLearn how: https://pris.ly/d/${il[t]}-build`;throw console.error(n),new k(n,r)}}function sl(e,t){return e?e.datasources?e.datasources:e.datasourceUrl?{[t[0]]:{url:e.datasourceUrl}}:{}:{}}function Pr({error:e,user_facing_error:t},r){return t.error_code?new H(t.message,{code:t.error_code,clientVersion:r,meta:t.meta,batchRequestIdx:t.batch_request_idx}):new W(e,{clientVersion:r,batchRequestIdx:t.batch_request_idx})}var Gt=class{};var pl=F(__webpack_require__(/*! fs */ \"fs\")),vr=F(__webpack_require__(/*! path */ \"path\"));function $n(e){let{runtimeBinaryTarget:t}=e;return`Add \"${t}\" to \\`binaryTargets\\` in the \"schema.prisma\" file and run \\`prisma generate\\` after saving it:\n\n${Ld(e)}`}function Ld(e){let{generator:t,generatorBinaryTargets:r,runtimeBinaryTarget:n}=e,i={fromEnvVar:null,value:n},o=[...r,i];return ji({...t,binaryTargets:o})}function st(e){let{runtimeBinaryTarget:t}=e;return`Prisma Client could not locate the Query Engine for runtime \"${t}\".`}function at(e){let{searchedLocations:t}=e;return`The following locations have been searched:\n${[...new Set(t)].map(i=>`  ${i}`).join(`\n`)}`}function al(e){let{runtimeBinaryTarget:t}=e;return`${st(e)}\n\nThis happened because \\`binaryTargets\\` have been pinned, but the actual deployment also required \"${t}\".\n${$n(e)}\n\n${at(e)}`}function qn(e){return`We would appreciate if you could take the time to share some information with us.\nPlease help us by answering a few questions: https://pris.ly/${e}`}function jn(e){let{errorStack:t}=e;return t?.match(/\\/\\.next|\\/next@|\\/next\\//)?`\n\nWe detected that you are using Next.js, learn how to fix this: https://pris.ly/d/engine-not-found-nextjs.`:\"\"}function ll(e){let{queryEngineName:t}=e;return`${st(e)}${jn(e)}\n\nThis is likely caused by a bundler that has not copied \"${t}\" next to the resulting bundle.\nEnsure that \"${t}\" has been copied next to the bundle or in \"${e.expectedLocation}\".\n\n${qn(\"engine-not-found-bundler-investigation\")}\n\n${at(e)}`}function ul(e){let{runtimeBinaryTarget:t,generatorBinaryTargets:r}=e,n=r.find(i=>i.native);return`${st(e)}\n\nThis happened because Prisma Client was generated for \"${n?.value??\"unknown\"}\", but the actual deployment required \"${t}\".\n${$n(e)}\n\n${at(e)}`}function cl(e){let{queryEngineName:t}=e;return`${st(e)}${jn(e)}\n\nThis is likely caused by tooling that has not copied \"${t}\" to the deployment folder.\nEnsure that you ran \\`prisma generate\\` and that \"${t}\" has been copied to \"${e.expectedLocation}\".\n\n${qn(\"engine-not-found-tooling-investigation\")}\n\n${at(e)}`}var $d=$(\"prisma:client:engines:resolveEnginePath\"),qd=()=>new RegExp(\"runtime[\\\\\\\\/]library\\\\.m?js$\");async function dl(e,t){let r={binary:process.env.PRISMA_QUERY_ENGINE_BINARY,library:process.env.PRISMA_QUERY_ENGINE_LIBRARY}[e]??t.prismaPath;if(r!==void 0)return r;let{enginePath:n,searchedLocations:i}=await jd(e,t);if($d(\"enginePath\",n),n!==void 0&&e===\"binary\"&&Di(n),n!==void 0)return t.prismaPath=n;let o=await ft(),s=t.generator?.binaryTargets??[],a=s.some(d=>d.native),l=!s.some(d=>d.value===o),u=__filename.match(qd())===null,c={searchedLocations:i,generatorBinaryTargets:s,generator:t.generator,runtimeBinaryTarget:o,queryEngineName:ml(e,o),expectedLocation:vr.default.relative(process.cwd(),t.dirname),errorStack:new Error().stack},p;throw a&&l?p=ul(c):l?p=al(c):u?p=ll(c):p=cl(c),new k(p,t.clientVersion)}async function jd(engineType,config){let binaryTarget=await ft(),searchedLocations=[],dirname=eval(\"__dirname\"),searchLocations=[config.dirname,vr.default.resolve(dirname,\"..\"),config.generator?.output?.value??dirname,vr.default.resolve(dirname,\"../../../.prisma/client\"),\"/tmp/prisma-engines\",config.cwd];__filename.includes(\"resolveEnginePath\")&&searchLocations.push(Qs());for(let e of searchLocations){let t=ml(engineType,binaryTarget),r=vr.default.join(e,t);if(searchedLocations.push(e),pl.default.existsSync(r))return{enginePath:r,searchedLocations}}return{enginePath:void 0,searchedLocations}}function ml(e,t){return e===\"library\"?Xr(t,\"fs\"):`query-engine-${t}${t===\"windows\"?\".exe\":\"\"}`}function Vn(e,t){return{batch:e,transaction:t?.kind===\"batch\"?{isolationLevel:t.options.isolationLevel}:void 0}}var fo=F(Bi());function fl(e){return e?e.replace(/\".*\"/g,'\"X\"').replace(/[\\s:\\[]([+-]?([0-9]*[.])?[0-9]+)/g,t=>`${t[0]}5`):\"\"}function gl(e){return e.split(`\n`).map(t=>t.replace(/^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)\\s*/,\"\").replace(/\\+\\d+\\s*ms$/,\"\")).join(`\n`)}var yl=F(Xs());function hl({title:e,user:t=\"prisma\",repo:r=\"prisma\",template:n=\"bug_report.yml\",body:i}){return(0,yl.default)({user:t,repo:r,template:n,title:e,body:i})}function bl({version:e,platform:t,title:r,description:n,engineVersion:i,database:o,query:s}){let a=us(6e3-(s?.length??0)),l=gl((0,fo.default)(a)),u=n?`# Description\n\\`\\`\\`\n${n}\n\\`\\`\\``:\"\",c=(0,fo.default)(`Hi Prisma Team! My Prisma Client just crashed. This is the report:\n## Versions\n\n| Name            | Version            |\n|-----------------|--------------------|\n| Node            | ${process.version?.padEnd(19)}| \n| OS              | ${t?.padEnd(19)}|\n| Prisma Client   | ${e?.padEnd(19)}|\n| Query Engine    | ${i?.padEnd(19)}|\n| Database        | ${o?.padEnd(19)}|\n\n${u}\n\n## Logs\n\\`\\`\\`\n${l}\n\\`\\`\\`\n\n## Client Snippet\n\\`\\`\\`ts\n// PLEASE FILL YOUR CODE SNIPPET HERE\n\\`\\`\\`\n\n## Schema\n\\`\\`\\`prisma\n// PLEASE ADD YOUR SCHEMA HERE IF POSSIBLE\n\\`\\`\\`\n\n## Prisma Engine Query\n\\`\\`\\`\n${s?fl(s):\"\"}\n\\`\\`\\`\n`),p=hl({title:r,body:c});return`${r}\n\nThis is a non-recoverable error which probably happens when the Prisma Query Engine has a panic.\n\n${ue(p)}\n\nIf you want the Prisma team to look into it, please open the link above \\u{1F64F}\nTo increase the chance of success, please post your schema and a snippet of\nhow you used Prisma Client in the issue. \n`}var Vd=\"Cloudflare-Workers\",Bd=\"node\";function xl(){return typeof Netlify==\"object\"?\"netlify\":typeof EdgeRuntime==\"string\"?\"edge-light\":globalThis.navigator?.userAgent===Vd?\"workerd\":globalThis.Deno?\"deno\":globalThis.__lagon__?\"lagon\":globalThis.process?.release?.name===Bd?\"node\":globalThis.Bun?\"bun\":globalThis.fastly?\"fastly\":\"unknown\"}function Bn({inlineDatasources:e,overrideDatasources:t,env:r,clientVersion:n}){let i,o=Object.keys(e)[0],s=e[o]?.url,a=t[o]?.url;if(o===void 0?i=void 0:a?i=a:s?.value?i=s.value:s?.fromEnvVar&&(i=r[s.fromEnvVar]),s?.fromEnvVar!==void 0&&i===void 0)throw new k(`error: Environment variable not found: ${s.fromEnvVar}.`,n);if(i===void 0)throw new k(\"error: Missing URL environment variable, value, or override.\",n);return i}var Un=class extends Error{constructor(r,n){super(r);this.clientVersion=n.clientVersion,this.cause=n.cause}get[Symbol.toStringTag](){return this.name}};var ge=class extends Un{constructor(r,n){super(r,n);this.isRetryable=n.isRetryable??!0}};function I(e,t){return{...e,isRetryable:t}}var Jt=class extends ge{constructor(r){super(\"This request must be retried\",I(r,!0));this.name=\"ForcedRetryError\";this.code=\"P5001\"}};v(Jt,\"ForcedRetryError\");var wt=class extends ge{constructor(r,n){super(r,I(n,!1));this.name=\"InvalidDatasourceError\";this.code=\"P6001\"}};v(wt,\"InvalidDatasourceError\");var Et=class extends ge{constructor(r,n){super(r,I(n,!1));this.name=\"NotImplementedYetError\";this.code=\"P5004\"}};v(Et,\"NotImplementedYetError\");var V=class extends ge{constructor(r,n){super(r,n);this.response=n.response;let i=this.response.headers.get(\"prisma-request-id\");if(i){let o=`(The request id was: ${i})`;this.message=this.message+\" \"+o}}};var Pt=class extends V{constructor(r){super(\"Schema needs to be uploaded\",I(r,!0));this.name=\"SchemaMissingError\";this.code=\"P5005\"}};v(Pt,\"SchemaMissingError\");var go=\"This request could not be understood by the server\",_r=class extends V{constructor(r,n,i){super(n||go,I(r,!1));this.name=\"BadRequestError\";this.code=\"P5000\";i&&(this.code=i)}};v(_r,\"BadRequestError\");var Tr=class extends V{constructor(r,n){super(\"Engine not started: healthcheck timeout\",I(r,!0));this.name=\"HealthcheckTimeoutError\";this.code=\"P5013\";this.logs=n}};v(Tr,\"HealthcheckTimeoutError\");var Cr=class extends V{constructor(r,n,i){super(n,I(r,!0));this.name=\"EngineStartupError\";this.code=\"P5014\";this.logs=i}};v(Cr,\"EngineStartupError\");var Ar=class extends V{constructor(r){super(\"Engine version is not supported\",I(r,!1));this.name=\"EngineVersionNotSupportedError\";this.code=\"P5012\"}};v(Ar,\"EngineVersionNotSupportedError\");var yo=\"Request timed out\",Rr=class extends V{constructor(r,n=yo){super(n,I(r,!1));this.name=\"GatewayTimeoutError\";this.code=\"P5009\"}};v(Rr,\"GatewayTimeoutError\");var Ud=\"Interactive transaction error\",Mr=class extends V{constructor(r,n=Ud){super(n,I(r,!1));this.name=\"InteractiveTransactionError\";this.code=\"P5015\"}};v(Mr,\"InteractiveTransactionError\");var Kd=\"Request parameters are invalid\",Sr=class extends V{constructor(r,n=Kd){super(n,I(r,!1));this.name=\"InvalidRequestError\";this.code=\"P5011\"}};v(Sr,\"InvalidRequestError\");var ho=\"Requested resource does not exist\",Ir=class extends V{constructor(r,n=ho){super(n,I(r,!1));this.name=\"NotFoundError\";this.code=\"P5003\"}};v(Ir,\"NotFoundError\");var bo=\"Unknown server error\",Ht=class extends V{constructor(r,n,i){super(n||bo,I(r,!0));this.name=\"ServerError\";this.code=\"P5006\";this.logs=i}};v(Ht,\"ServerError\");var xo=\"Unauthorized, check your connection string\",kr=class extends V{constructor(r,n=xo){super(n,I(r,!1));this.name=\"UnauthorizedError\";this.code=\"P5007\"}};v(kr,\"UnauthorizedError\");var wo=\"Usage exceeded, retry again later\",Fr=class extends V{constructor(r,n=wo){super(n,I(r,!0));this.name=\"UsageExceededError\";this.code=\"P5008\"}};v(Fr,\"UsageExceededError\");async function Qd(e){let t;try{t=await e.text()}catch{return{type:\"EmptyError\"}}try{let r=JSON.parse(t);if(typeof r==\"string\")switch(r){case\"InternalDataProxyError\":return{type:\"DataProxyError\",body:r};default:return{type:\"UnknownTextError\",body:r}}if(typeof r==\"object\"&&r!==null){if(\"is_panic\"in r&&\"message\"in r&&\"error_code\"in r)return{type:\"QueryEngineError\",body:r};if(\"EngineNotStarted\"in r||\"InteractiveTransactionMisrouted\"in r||\"InvalidRequestError\"in r){let n=Object.values(r)[0].reason;return typeof n==\"string\"&&![\"SchemaMissing\",\"EngineVersionNotSupported\"].includes(n)?{type:\"UnknownJsonError\",body:r}:{type:\"DataProxyError\",body:r}}}return{type:\"UnknownJsonError\",body:r}}catch{return t===\"\"?{type:\"EmptyError\"}:{type:\"UnknownTextError\",body:t}}}async function Or(e,t){if(e.ok)return;let r={clientVersion:t,response:e},n=await Qd(e);if(n.type===\"QueryEngineError\")throw new H(n.body.message,{code:n.body.error_code,clientVersion:t});if(n.type===\"DataProxyError\"){if(n.body===\"InternalDataProxyError\")throw new Ht(r,\"Internal Data Proxy error\");if(\"EngineNotStarted\"in n.body){if(n.body.EngineNotStarted.reason===\"SchemaMissing\")return new Pt(r);if(n.body.EngineNotStarted.reason===\"EngineVersionNotSupported\")throw new Ar(r);if(\"EngineStartupError\"in n.body.EngineNotStarted.reason){let{msg:i,logs:o}=n.body.EngineNotStarted.reason.EngineStartupError;throw new Cr(r,i,o)}if(\"KnownEngineStartupError\"in n.body.EngineNotStarted.reason){let{msg:i,error_code:o}=n.body.EngineNotStarted.reason.KnownEngineStartupError;throw new k(i,t,o)}if(\"HealthcheckTimeout\"in n.body.EngineNotStarted.reason){let{logs:i}=n.body.EngineNotStarted.reason.HealthcheckTimeout;throw new Tr(r,i)}}if(\"InteractiveTransactionMisrouted\"in n.body){let i={IDParseError:\"Could not parse interactive transaction ID\",NoQueryEngineFoundError:\"Could not find Query Engine for the specified host and transaction ID\",TransactionStartError:\"Could not start interactive transaction\"};throw new Mr(r,i[n.body.InteractiveTransactionMisrouted.reason])}if(\"InvalidRequestError\"in n.body)throw new Sr(r,n.body.InvalidRequestError.reason)}if(e.status===401||e.status===403)throw new kr(r,Wt(xo,n));if(e.status===404)return new Ir(r,Wt(ho,n));if(e.status===429)throw new Fr(r,Wt(wo,n));if(e.status===504)throw new Rr(r,Wt(yo,n));if(e.status>=500)throw new Ht(r,Wt(bo,n));if(e.status>=400)throw new _r(r,Wt(go,n))}function Wt(e,t){return t.type===\"EmptyError\"?e:`${e}: ${JSON.stringify(t)}`}function wl(e){let t=Math.pow(2,e)*50,r=Math.ceil(Math.random()*t)-Math.ceil(t/2),n=t+r;return new Promise(i=>setTimeout(()=>i(n),n))}function El(e){if(!!e.generator?.previewFeatures.some(r=>r.toLowerCase().includes(\"metrics\")))throw new k(\"The `metrics` preview feature is not yet available with Accelerate.\\nPlease remove `metrics` from the `previewFeatures` in your schema.\\n\\nMore information about Accelerate: https://pris.ly/d/accelerate\",e.clientVersion)}var Pl={\"@prisma/debug\":\"workspace:*\",\"@prisma/engines-version\":\"5.7.1-1.0ca5ccbcfa6bdc81c003cf549abe4269f59c41e5\",\"@prisma/fetch-engine\":\"workspace:*\",\"@prisma/get-platform\":\"workspace:*\"};var Dr=class extends ge{constructor(r,n){super(`Cannot fetch data from service:\n${r}`,I(n,!0));this.name=\"RequestError\";this.code=\"P5010\"}};v(Dr,\"RequestError\");async function vt(e,t,r=n=>n){let n=t.clientVersion;try{return typeof fetch==\"function\"?await r(fetch)(e,t):await r(Eo)(e,t)}catch(i){let o=i.message??\"Unknown error\";throw new Dr(o,{clientVersion:n})}}function Jd(e){return{...e.headers,\"Content-Type\":\"application/json\"}}function Hd(e){return{method:e.method,headers:Jd(e)}}function Wd(e,t){return{text:()=>Promise.resolve(Buffer.concat(e).toString()),json:()=>Promise.resolve().then(()=>JSON.parse(Buffer.concat(e).toString())),ok:t.statusCode>=200&&t.statusCode<=299,status:t.statusCode,url:t.url,headers:new Po(t.headers)}}async function Eo(e,t={}){let r=zd(\"https\"),n=Hd(t),i=[],{origin:o}=new URL(e);return new Promise((s,a)=>{let l=r.request(e,n,u=>{let{statusCode:c,headers:{location:p}}=u;c>=301&&c<=399&&p&&(p.startsWith(\"http\")===!1?s(Eo(`${o}${p}`,t)):s(Eo(p,t))),u.on(\"data\",d=>i.push(d)),u.on(\"end\",()=>s(Wd(i,u))),u.on(\"error\",a)});l.on(\"error\",a),l.end(t.body??\"\")})}var zd=undefined,Po=class{constructor(t={}){this.headers=new Map;for(let[r,n]of Object.entries(t))if(typeof n==\"string\")this.headers.set(r,n);else if(Array.isArray(n))for(let i of n)this.headers.set(r,i)}append(t,r){this.headers.set(t,r)}delete(t){this.headers.delete(t)}get(t){return this.headers.get(t)??null}has(t){return this.headers.has(t)}set(t,r){this.headers.set(t,r)}forEach(t,r){for(let[n,i]of this.headers)t.call(r,i,n,this)}};var Yd=/^[1-9][0-9]*\\.[0-9]+\\.[0-9]+$/,vl=$(\"prisma:client:dataproxyEngine\");async function Zd(e,t){let r=Pl[\"@prisma/engines-version\"],n=t.clientVersion??\"unknown\";if(process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION)return process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION;if(e.includes(\"accelerate\")&&n!==\"0.0.0\"&&n!==\"in-memory\")return n;let[i,o]=n?.split(\"-\")??[];if(o===void 0&&Yd.test(i))return i;if(o!==void 0||n===\"0.0.0\"||n===\"in-memory\"){if(e.startsWith(\"localhost\")||e.startsWith(\"127.0.0.1\"))return\"0.0.0\";let[s]=r.split(\"-\")??[],[a,l,u]=s.split(\".\"),c=Xd(`<=${a}.${l}.${u}`),p=await vt(c,{clientVersion:n});if(!p.ok)throw new Error(`Failed to fetch stable Prisma version, unpkg.com status ${p.status} ${p.statusText}, response body: ${await p.text()||\"<empty body>\"}`);let d=await p.text();vl(\"length of body fetched from unpkg.com\",d.length);let f;try{f=JSON.parse(d)}catch(y){throw console.error(\"JSON.parse error: body fetched from unpkg.com: \",d),y}return f.version}throw new Et(\"Only `major.minor.patch` versions are supported by Accelerate.\",{clientVersion:n})}async function _l(e,t){let r=await Zd(e,t);return vl(\"version\",r),r}function Xd(e){return encodeURI(`https://unpkg.com/prisma@${e}/package.json`)}var Tl=3,vo=$(\"prisma:client:dataproxyEngine\"),_o=class{constructor({apiKey:t,tracingHelper:r,logLevel:n,logQueries:i,engineHash:o}){this.apiKey=t,this.tracingHelper=r,this.logLevel=n,this.logQueries=i,this.engineHash=o}build({traceparent:t,interactiveTransaction:r}={}){let n={Authorization:`Bearer ${this.apiKey}`,\"Prisma-Engine-Hash\":this.engineHash};this.tracingHelper.isEnabled()&&(n.traceparent=t??this.tracingHelper.getTraceParent()),r&&(n[\"X-transaction-id\"]=r.id);let i=this.buildCaptureSettings();return i.length>0&&(n[\"X-capture-telemetry\"]=i.join(\", \")),n}buildCaptureSettings(){let t=[];return this.tracingHelper.isEnabled()&&t.push(\"tracing\"),this.logLevel&&t.push(this.logLevel),this.logQueries&&t.push(\"query\"),t}},Nr=class extends Gt{constructor(r){super();El(r),this.config=r,this.env={...this.config.env,...process.env},this.inlineSchema=r.inlineSchema,this.inlineDatasources=r.inlineDatasources,this.inlineSchemaHash=r.inlineSchemaHash,this.clientVersion=r.clientVersion,this.engineHash=r.engineVersion,this.logEmitter=r.logEmitter,this.tracingHelper=this.config.tracingHelper}apiKey(){return this.headerBuilder.apiKey}version(){return this.engineHash}async start(){this.startPromise!==void 0&&await this.startPromise,this.startPromise=(async()=>{let[r,n]=this.extractHostAndApiKey();this.host=r,this.headerBuilder=new _o({apiKey:n,tracingHelper:this.tracingHelper,logLevel:this.config.logLevel,logQueries:this.config.logQueries,engineHash:this.engineHash}),this.remoteClientVersion=await _l(r,this.config),vo(\"host\",this.host)})(),await this.startPromise}async stop(){}propagateResponseExtensions(r){r?.logs?.length&&r.logs.forEach(n=>{switch(n.level){case\"debug\":case\"error\":case\"trace\":case\"warn\":case\"info\":break;case\"query\":{let i=typeof n.attributes.query==\"string\"?n.attributes.query:\"\";if(!this.tracingHelper.isEnabled()){let[o]=i.split(\"/* traceparent\");i=o}this.logEmitter.emit(\"query\",{query:i,timestamp:n.timestamp,duration:n.attributes.duration_ms,params:n.attributes.params,target:n.attributes.target})}}}),r?.traces?.length&&this.tracingHelper.createEngineSpan({span:!0,spans:r.traces})}on(r,n){if(r===\"beforeExit\")throw new Error('\"beforeExit\" hook is not applicable to the remote query engine');this.logEmitter.on(r,n)}async url(r){return await this.start(),`https://${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${r}`}async uploadSchema(){let r={name:\"schemaUpload\",internal:!0};return this.tracingHelper.runInChildSpan(r,async()=>{let n=await vt(await this.url(\"schema\"),{method:\"PUT\",headers:this.headerBuilder.build(),body:this.inlineSchema,clientVersion:this.clientVersion});n.ok||vo(\"schema response status\",n.status);let i=await Or(n,this.clientVersion);if(i)throw this.logEmitter.emit(\"warn\",{message:`Error while uploading schema: ${i.message}`}),i;this.logEmitter.emit(\"info\",{message:`Schema (re)uploaded (hash: ${this.inlineSchemaHash})`})})}request(r,{traceparent:n,interactiveTransaction:i,customDataProxyFetch:o}){return this.requestInternal({body:r,traceparent:n,interactiveTransaction:i,customDataProxyFetch:o})}async requestBatch(r,{traceparent:n,transaction:i,customDataProxyFetch:o}){let s=i?.kind===\"itx\"?i.options:void 0,a=Vn(r,i),{batchResult:l,elapsed:u}=await this.requestInternal({body:a,customDataProxyFetch:o,interactiveTransaction:s,traceparent:n});return l.map(c=>\"errors\"in c&&c.errors.length>0?Pr(c.errors[0],this.clientVersion):{data:c,elapsed:u})}requestInternal({body:r,traceparent:n,customDataProxyFetch:i,interactiveTransaction:o}){return this.withRetry({actionGerund:\"querying\",callback:async({logHttpCall:s})=>{let a=o?`${o.payload.endpoint}/graphql`:await this.url(\"graphql\");s(a);let l=await vt(a,{method:\"POST\",headers:this.headerBuilder.build({traceparent:n,interactiveTransaction:o}),body:JSON.stringify(r),clientVersion:this.clientVersion},i);l.ok||vo(\"graphql response status\",l.status),await this.handleError(await Or(l,this.clientVersion));let u=await l.json(),c=u.extensions;if(c&&this.propagateResponseExtensions(c),u.errors)throw u.errors.length===1?Pr(u.errors[0],this.config.clientVersion):new W(u.errors,{clientVersion:this.config.clientVersion});return u}})}async transaction(r,n,i){let o={start:\"starting\",commit:\"committing\",rollback:\"rolling back\"};return this.withRetry({actionGerund:`${o[r]} transaction`,callback:async({logHttpCall:s})=>{if(r===\"start\"){let a=JSON.stringify({max_wait:i?.maxWait??2e3,timeout:i?.timeout??5e3,isolation_level:i?.isolationLevel}),l=await this.url(\"transaction/start\");s(l);let u=await vt(l,{method:\"POST\",headers:this.headerBuilder.build({traceparent:n.traceparent}),body:a,clientVersion:this.clientVersion});await this.handleError(await Or(u,this.clientVersion));let c=await u.json(),p=c.extensions;p&&this.propagateResponseExtensions(p);let d=c.id,f=c[\"data-proxy\"].endpoint;return{id:d,payload:{endpoint:f}}}else{let a=`${i.payload.endpoint}/${r}`;s(a);let l=await vt(a,{method:\"POST\",headers:this.headerBuilder.build({traceparent:n.traceparent}),clientVersion:this.clientVersion});await this.handleError(await Or(l,this.clientVersion));let c=(await l.json()).extensions;c&&this.propagateResponseExtensions(c);return}}})}extractHostAndApiKey(){let r={clientVersion:this.clientVersion},n=Object.keys(this.inlineDatasources)[0],i=Bn({inlineDatasources:this.inlineDatasources,overrideDatasources:this.config.overrideDatasources,clientVersion:this.clientVersion,env:this.env}),o;try{o=new URL(i)}catch{throw new wt(`Error validating datasource \\`${n}\\`: the URL must start with the protocol \\`prisma://\\``,r)}let{protocol:s,host:a,searchParams:l}=o;if(s!==\"prisma:\")throw new wt(`Error validating datasource \\`${n}\\`: the URL must start with the protocol \\`prisma://\\``,r);let u=l.get(\"api_key\");if(u===null||u.length<1)throw new wt(`Error validating datasource \\`${n}\\`: the URL must contain a valid API key`,r);return[a,u]}metrics(){throw new Et(\"Metrics are not yet supported for Accelerate\",{clientVersion:this.clientVersion})}async withRetry(r){for(let n=0;;n++){let i=o=>{this.logEmitter.emit(\"info\",{message:`Calling ${o} (n=${n})`})};try{return await r.callback({logHttpCall:i})}catch(o){if(!(o instanceof ge)||!o.isRetryable)throw o;if(n>=Tl)throw o instanceof Jt?o.cause:o;this.logEmitter.emit(\"warn\",{message:`Attempt ${n+1}/${Tl} failed for ${r.actionGerund}: ${o.message??\"(unknown)\"}`});let s=await wl(n);this.logEmitter.emit(\"warn\",{message:`Retrying after ${s}ms`})}}}async handleError(r){if(r instanceof Pt)throw await this.uploadSchema(),new Jt({clientVersion:this.clientVersion,cause:r});if(r)throw r}};function Cl(e){if(e?.kind===\"itx\")return e.options.id}var Co=F(__webpack_require__(/*! os */ \"os\")),Al=F(__webpack_require__(/*! path */ \"path\"));var To=Symbol(\"PrismaLibraryEngineCache\");function em(){let e=globalThis;return e[To]===void 0&&(e[To]={}),e[To]}function tm(e){let t=em();if(t[e]!==void 0)return t[e];let r=Al.default.toNamespacedPath(e),n={exports:{}},i=0;return process.platform!==\"win32\"&&(i=Co.default.constants.dlopen.RTLD_LAZY|Co.default.constants.dlopen.RTLD_DEEPBIND),process.dlopen(n,r,i),t[e]=n.exports,n.exports}var Rl={async loadLibrary(e){let t=await Ri(),r=await dl(\"library\",e);try{return e.tracingHelper.runInChildSpan({name:\"loadLibrary\",internal:!0},()=>tm(r))}catch(n){let i=Ni({e:n,platformInfo:t,id:r});throw new k(i,e.clientVersion)}}};var Fo={};Tt(Fo,{CommonProxy:()=>Ro,DriverProxy:()=>Mo,JsBaseQueryable:()=>So,QueryEngine:()=>$r,TransactionProxy:()=>Io,__wbg_String_88810dfeb4021902:()=>tf,__wbg_buffer_344d9b41efe96da7:()=>lf,__wbg_call_53fc3abd42e24ec8:()=>hm,__wbg_call_669127b9d730c650:()=>Pf,__wbg_crypto_58f13aa23ffcb166:()=>pf,__wbg_done_bc26bf4ada718266:()=>wf,__wbg_entries_6d727b73ee02b7ce:()=>Of,__wbg_getRandomValues_504510b5564925af:()=>sf,__wbg_getTime_ed6ee333b702f8fc:()=>Cm,__wbg_get_2aff440840bb6202:()=>rf,__wbg_get_4a9aa5157afeb382:()=>Um,__wbg_get_94990005bd6ca07c:()=>nf,__wbg_getwithrefkey_5e6d9547403deab8:()=>ef,__wbg_globalThis_17eff828815f7d84:()=>Cf,__wbg_global_46f939f6541643c5:()=>Af,__wbg_instanceof_ArrayBuffer_c7cc317e5c29cc0d:()=>Ff,__wbg_instanceof_Promise_cfbcc42300367513:()=>Zm,__wbg_instanceof_Uint8Array_19e6f142a5e7e1e1:()=>kf,__wbg_isArray_38525be7442aa21e:()=>Lm,__wbg_isSafeInteger_c38b0a16d0c7cef7:()=>Fm,__wbg_iterator_7ee1a391d310f8e4:()=>qm,__wbg_length_a5587d6cd79ab197:()=>If,__wbg_length_cace2e0b3ddc0502:()=>Bm,__wbg_msCrypto_abcb1295e768d1f2:()=>hf,__wbg_new0_ad75dd38f92424e2:()=>Tm,__wbg_new_08236689f0afb357:()=>Km,__wbg_new_1b94180eeb48f2a2:()=>Jm,__wbg_new_c728d68b8b34487e:()=>Hm,__wbg_new_d8a000788389a31e:()=>Mf,__wbg_new_feb65b865d980ae2:()=>mm,__wbg_newnoargs_ccdcae30fd002262:()=>Rf,__wbg_newwithbyteoffsetandlength_2dc04d99088b15e3:()=>uf,__wbg_newwithlength_13b5319ab422dcf6:()=>bf,__wbg_next_15da6a3df9290720:()=>vf,__wbg_next_1989a20442400aaa:()=>xf,__wbg_node_523d7bd03ef69fba:()=>ff,__wbg_now_4579335d3581594c:()=>gm,__wbg_now_8ed1a4454e40ecd1:()=>Rm,__wbg_parse_3f0cb48976ca4123:()=>_m,__wbg_process_5b786e71d465a513:()=>df,__wbg_randomFillSync_a0d98aa11c81fe89:()=>cf,__wbg_require_2784e593a4674877:()=>gf,__wbg_resolve_a3252b2860f0a09e:()=>jf,__wbg_self_3fad056edded10bd:()=>_f,__wbg_setTimeout_631fe61f31fa2fad:()=>ym,__wbg_set_0ac78a2bc07da03c:()=>Gm,__wbg_set_3355b9f2d3092e3b:()=>Wm,__wbg_set_841ac57cff3d672b:()=>Ym,__wbg_set_dcfd613a3420f908:()=>Sf,__wbg_set_wasm:()=>ko,__wbg_static_accessor_PERFORMANCE_1a325848eb3ce65a:()=>Am,__wbg_stringify_4039297315a25b00:()=>vm,__wbg_subarray_6ca5cfa7fbb9abbe:()=>of,__wbg_then_1bbc9edafd859b06:()=>qf,__wbg_then_89e1c559530b85cf:()=>$f,__wbg_valueOf_ff4b62641803432a:()=>Xm,__wbg_value_0570714ff7d75f35:()=>Ef,__wbg_versions_c2ab80650590b6a2:()=>mf,__wbg_window_a4f46c98a61d4089:()=>Tf,__wbindgen_bigint_from_i64:()=>Dm,__wbindgen_bigint_from_u64:()=>Vm,__wbindgen_bigint_get_as_i64:()=>Om,__wbindgen_boolean_get:()=>Sm,__wbindgen_cb_drop:()=>Lf,__wbindgen_closure_wrapper7083:()=>Vf,__wbindgen_debug_string:()=>Df,__wbindgen_error_new:()=>bm,__wbindgen_in:()=>jm,__wbindgen_is_bigint:()=>Im,__wbindgen_is_function:()=>yf,__wbindgen_is_object:()=>$m,__wbindgen_is_string:()=>zm,__wbindgen_is_undefined:()=>Pm,__wbindgen_jsval_eq:()=>Nm,__wbindgen_jsval_loose_eq:()=>Mm,__wbindgen_memory:()=>af,__wbindgen_number_get:()=>km,__wbindgen_number_new:()=>Qm,__wbindgen_object_clone_ref:()=>Em,__wbindgen_object_drop_ref:()=>fm,__wbindgen_string_get:()=>wm,__wbindgen_string_new:()=>xm,__wbindgen_throw:()=>Nf,debug_panic:()=>pm,getBuildTimeInfo:()=>cm});var b;function ko(e){b=e}var Ke=new Array(128).fill(void 0);Ke.push(void 0,null,!0,!1);function h(e){return Ke[e]}var Lr=Ke.length;function rm(e){e<132||(Ke[e]=Lr,Lr=e)}function X(e){let t=h(e);return rm(e),t}var nm=typeof TextDecoder>\"u\"?(0,module.require)(\"util\").TextDecoder:TextDecoder,Ml=new nm(\"utf-8\",{ignoreBOM:!0,fatal:!0});Ml.decode();var Kn=null;function Hn(){return(Kn===null||Kn.byteLength===0)&&(Kn=new Uint8Array(b.memory.buffer)),Kn}function qr(e,t){return e=e>>>0,Ml.decode(Hn().subarray(e,e+t))}function w(e){Lr===Ke.length&&Ke.push(Ke.length+1);let t=Lr;return Lr=Ke[t],Ke[t]=e,t}var Z=0,im=typeof TextEncoder>\"u\"?(0,module.require)(\"util\").TextEncoder:TextEncoder,Wn=new im(\"utf-8\"),om=typeof Wn.encodeInto==\"function\"?function(e,t){return Wn.encodeInto(e,t)}:function(e,t){let r=Wn.encode(e);return t.set(r),{read:e.length,written:r.length}};function le(e,t,r){if(r===void 0){let a=Wn.encode(e),l=t(a.length,1)>>>0;return Hn().subarray(l,l+a.length).set(a),Z=a.length,l}let n=e.length,i=t(n,1)>>>0,o=Hn(),s=0;for(;s<n;s++){let a=e.charCodeAt(s);if(a>127)break;o[i+s]=a}if(s!==n){s!==0&&(e=e.slice(s)),i=r(i,n,n=s+e.length*3,1)>>>0;let a=Hn().subarray(i+s,i+n),l=om(e,a);s+=l.written}return Z=s,i}function Qe(e){return e==null}var Qn=null;function xe(){return(Qn===null||Qn.byteLength===0)&&(Qn=new Int32Array(b.memory.buffer)),Qn}var Gn=null;function sm(){return(Gn===null||Gn.byteLength===0)&&(Gn=new Float64Array(b.memory.buffer)),Gn}var Jn=null;function am(){return(Jn===null||Jn.byteLength===0)&&(Jn=new BigInt64Array(b.memory.buffer)),Jn}function Ao(e){let t=typeof e;if(t==\"number\"||t==\"boolean\"||e==null)return`${e}`;if(t==\"string\")return`\"${e}\"`;if(t==\"symbol\"){let i=e.description;return i==null?\"Symbol\":`Symbol(${i})`}if(t==\"function\"){let i=e.name;return typeof i==\"string\"&&i.length>0?`Function(${i})`:\"Function\"}if(Array.isArray(e)){let i=e.length,o=\"[\";i>0&&(o+=Ao(e[0]));for(let s=1;s<i;s++)o+=\", \"+Ao(e[s]);return o+=\"]\",o}let r=/\\[object ([^\\]]+)\\]/.exec(toString.call(e)),n;if(r.length>1)n=r[1];else return toString.call(e);if(n==\"Object\")try{return\"Object(\"+JSON.stringify(e)+\")\"}catch{return\"Object\"}return e instanceof Error?`${e.name}: ${e.message}\n${e.stack}`:n}function lm(e,t,r,n){let i={a:e,b:t,cnt:1,dtor:r},o=(...s)=>{i.cnt++;let a=i.a;i.a=0;try{return n(a,i.b,...s)}finally{--i.cnt===0?b.__wbindgen_export_2.get(i.dtor)(a,i.b):i.a=a}};return o.original=i,o}function um(e,t,r){b.wasm_bindgen__convert__closures__invoke1_mut__hfbda64e850f62b9b(e,t,w(r))}function cm(){let e=b.getBuildTimeInfo();return X(e)}function pm(e){try{let o=b.__wbindgen_add_to_stack_pointer(-16);var t=Qe(e)?0:le(e,b.__wbindgen_malloc,b.__wbindgen_realloc),r=Z;b.debug_panic(o,t,r);var n=xe()[o/4+0],i=xe()[o/4+1];if(i)throw X(n)}finally{b.__wbindgen_add_to_stack_pointer(16)}}function ye(e,t){try{return e.apply(this,t)}catch(r){b.__wbindgen_exn_store(w(r))}}function dm(e,t,r,n){b.wasm_bindgen__convert__closures__invoke2_mut__h2f8c2214595cd992(e,t,w(r),w(n))}var Ro=class{__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,t}free(){let t=this.__destroy_into_raw();b.__wbg_commonproxy_free(t)}},Mo=class{__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,t}free(){let t=this.__destroy_into_raw();b.__wbg_driverproxy_free(t)}},So=class{__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,t}free(){let t=this.__destroy_into_raw();b.__wbg_jsbasequeryable_free(t)}get provider(){let t=b.__wbg_get_jsbasequeryable_provider(this.__wbg_ptr);return X(t)}set provider(t){b.__wbg_set_jsbasequeryable_provider(this.__wbg_ptr,w(t))}},$r=class{__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,t}free(){let t=this.__destroy_into_raw();b.__wbg_queryengine_free(t)}constructor(t,r,n){try{let a=b.__wbindgen_add_to_stack_pointer(-16);b.queryengine_new(a,w(t),w(r),Qe(n)?0:w(n));var i=xe()[a/4+0],o=xe()[a/4+1],s=xe()[a/4+2];if(s)throw X(o);return this.__wbg_ptr=i>>>0,this}finally{b.__wbindgen_add_to_stack_pointer(16)}}connect(t){let r=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),n=Z,i=b.queryengine_connect(this.__wbg_ptr,r,n);return X(i)}disconnect(t){let r=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),n=Z,i=b.queryengine_disconnect(this.__wbg_ptr,r,n);return X(i)}query(t,r,n){let i=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),o=Z,s=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),a=Z;var l=Qe(n)?0:le(n,b.__wbindgen_malloc,b.__wbindgen_realloc),u=Z;let c=b.queryengine_query(this.__wbg_ptr,i,o,s,a,l,u);return X(c)}startTransaction(t,r){let n=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),i=Z,o=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),s=Z,a=b.queryengine_startTransaction(this.__wbg_ptr,n,i,o,s);return X(a)}commitTransaction(t,r){let n=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),i=Z,o=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),s=Z,a=b.queryengine_commitTransaction(this.__wbg_ptr,n,i,o,s);return X(a)}rollbackTransaction(t,r){let n=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),i=Z,o=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),s=Z,a=b.queryengine_rollbackTransaction(this.__wbg_ptr,n,i,o,s);return X(a)}metrics(t){let r=le(t,b.__wbindgen_malloc,b.__wbindgen_realloc),n=Z,i=b.queryengine_metrics(this.__wbg_ptr,r,n);return X(i)}},Io=class{__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,t}free(){let t=this.__destroy_into_raw();b.__wbg_transactionproxy_free(t)}};function mm(e,t){try{var r={a:e,b:t},n=(o,s)=>{let a=r.a;r.a=0;try{return dm(a,r.b,o,s)}finally{r.a=a}};let i=new Promise(n);return w(i)}finally{r.a=r.b=0}}function fm(e){X(e)}function gm(){return Date.now()}function ym(e,t){return setTimeout(h(e),t>>>0)}function hm(){return ye(function(e,t,r){let n=h(e).call(h(t),h(r));return w(n)},arguments)}function bm(e,t){let r=new Error(qr(e,t));return w(r)}function xm(e,t){let r=qr(e,t);return w(r)}function wm(e,t){let r=h(t),n=typeof r==\"string\"?r:void 0;var i=Qe(n)?0:le(n,b.__wbindgen_malloc,b.__wbindgen_realloc),o=Z;xe()[e/4+1]=o,xe()[e/4+0]=i}function Em(e){let t=h(e);return w(t)}function Pm(e){return h(e)===void 0}function vm(){return ye(function(e){let t=JSON.stringify(h(e));return w(t)},arguments)}function _m(){return ye(function(e,t){let r=JSON.parse(qr(e,t));return w(r)},arguments)}function Tm(){return w(new Date)}function Cm(e){return h(e).getTime()}function Am(){let e=performance;return Qe(e)?0:w(e)}function Rm(e){return h(e).now()}function Mm(e,t){return h(e)==h(t)}function Sm(e){let t=h(e);return typeof t==\"boolean\"?t?1:0:2}function Im(e){return typeof h(e)==\"bigint\"}function km(e,t){let r=h(t),n=typeof r==\"number\"?r:void 0;sm()[e/8+1]=Qe(n)?0:n,xe()[e/4+0]=!Qe(n)}function Fm(e){return Number.isSafeInteger(h(e))}function Om(e,t){let r=h(t),n=typeof r==\"bigint\"?r:void 0;am()[e/8+1]=Qe(n)?BigInt(0):n,xe()[e/4+0]=!Qe(n)}function Dm(e){return w(e)}function Nm(e,t){return h(e)===h(t)}function Lm(e){return Array.isArray(h(e))}function $m(e){let t=h(e);return typeof t==\"object\"&&t!==null}function qm(){return w(Symbol.iterator)}function jm(e,t){return h(e)in h(t)}function Vm(e){let t=BigInt.asUintN(64,e);return w(t)}function Bm(e){return h(e).length}function Um(e,t){let r=h(e)[t>>>0];return w(r)}function Km(){let e=new Array;return w(e)}function Qm(e){return w(e)}function Gm(e,t,r){h(e)[t>>>0]=X(r)}function Jm(){return w(new Map)}function Hm(){let e=new Object;return w(e)}function Wm(e,t,r){let n=h(e).set(h(t),h(r));return w(n)}function zm(e){return typeof h(e)==\"string\"}function Ym(e,t,r){h(e)[X(t)]=X(r)}function Zm(e){let t;try{t=h(e)instanceof Promise}catch{t=!1}return t}function Xm(e){return h(e).valueOf()}function ef(e,t){let r=h(e)[h(t)];return w(r)}function tf(e,t){let r=String(h(t)),n=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),i=Z;xe()[e/4+1]=i,xe()[e/4+0]=n}function rf(){return ye(function(e,t){let r=Reflect.get(h(e),h(t));return w(r)},arguments)}function nf(){return ye(function(e,t){let r=h(e)[X(t)];return w(r)},arguments)}function of(e,t,r){let n=h(e).subarray(t>>>0,r>>>0);return w(n)}function sf(){return ye(function(e,t){h(e).getRandomValues(h(t))},arguments)}function af(){let e=b.memory;return w(e)}function lf(e){let t=h(e).buffer;return w(t)}function uf(e,t,r){let n=new Uint8Array(h(e),t>>>0,r>>>0);return w(n)}function cf(){return ye(function(e,t){h(e).randomFillSync(X(t))},arguments)}function pf(e){let t=h(e).crypto;return w(t)}function df(e){let t=h(e).process;return w(t)}function mf(e){let t=h(e).versions;return w(t)}function ff(e){let t=h(e).node;return w(t)}function gf(){return ye(function(){let e=module.require;return w(e)},arguments)}function yf(e){return typeof h(e)==\"function\"}function hf(e){let t=h(e).msCrypto;return w(t)}function bf(e){let t=new Uint8Array(e>>>0);return w(t)}function xf(){return ye(function(e){let t=h(e).next();return w(t)},arguments)}function wf(e){return h(e).done}function Ef(e){let t=h(e).value;return w(t)}function Pf(){return ye(function(e,t){let r=h(e).call(h(t));return w(r)},arguments)}function vf(e){let t=h(e).next;return w(t)}function _f(){return ye(function(){let e=self.self;return w(e)},arguments)}function Tf(){return ye(function(){let e=window.window;return w(e)},arguments)}function Cf(){return ye(function(){let e=globalThis.globalThis;return w(e)},arguments)}function Af(){return ye(function(){let e=global.global;return w(e)},arguments)}function Rf(e,t){let r=new Function(qr(e,t));return w(r)}function Mf(e){let t=new Uint8Array(h(e));return w(t)}function Sf(e,t,r){h(e).set(h(t),r>>>0)}function If(e){return h(e).length}function kf(e){let t;try{t=h(e)instanceof Uint8Array}catch{t=!1}return t}function Ff(e){let t;try{t=h(e)instanceof ArrayBuffer}catch{t=!1}return t}function Of(e){let t=Object.entries(h(e));return w(t)}function Df(e,t){let r=Ao(h(t)),n=le(r,b.__wbindgen_malloc,b.__wbindgen_realloc),i=Z;xe()[e/4+1]=i,xe()[e/4+0]=n}function Nf(e,t){throw new Error(qr(e,t))}function Lf(e){let t=X(e).original;return t.cnt--==1?(t.a=0,!0):!1}function $f(e,t){let r=h(e).then(h(t));return w(r)}function qf(e,t,r){let n=h(e).then(h(t),h(r));return w(n)}function jf(e){let t=Promise.resolve(h(e));return w(t)}function Vf(e,t,r){let n=lm(e,t,342,um);return w(n)}var Oo,Sl={async loadLibrary(e){let{generator:t,clientVersion:r,adapter:n}=e;if(t?.previewFeatures.includes(\"driverAdapters\")===void 0)throw new k('The `driverAdapters` preview feature is required with `engineType=\"wasm\"`',r);if(n===void 0)throw new k('The `adapter` option for `PrismaClient` is required with `engineType=\"wasm\"`',r);if(Oo===void 0){let i=await e.getQueryEngineWasmModule?.();if(i==null)throw new k(\"The loaded wasm module was unexpectedly `undefined` or `null` once loaded\",r);Oo=new WebAssembly.Instance(i,{\"./query_engine_bg.js\":Fo}).exports,ko(Oo)}return{debugPanic(){return Promise.reject(\"{}\")},dmmf(){return Promise.resolve(\"{}\")},version(){return{commit:\"unknown\",version:\"unknown\"}},QueryEngine:$r}}};var Bf=\"P2036\",qe=$(\"prisma:client:libraryEngine\");function Uf(e){return e.item_type===\"query\"&&\"query\"in e}function Kf(e){return\"level\"in e?e.level===\"error\"&&e.message===\"PANIC\":!1}var Il=[...Mi,\"native\"],kl=0,zt=class extends Gt{constructor(r,n){super();gt(r.generator)===\"wasm\"?this.libraryLoader=n??Sl:this.libraryLoader=n??Rl,this.config=r,this.libraryStarted=!1,this.logQueries=r.logQueries??!1,this.logLevel=r.logLevel??\"error\",this.logEmitter=r.logEmitter,this.datamodel=atob(r.inlineSchema),r.enableDebugLogs&&(this.logLevel=\"debug\");let o=Object.keys(r.overrideDatasources)[0],s=r.overrideDatasources[o]?.url;o!==void 0&&s!==void 0&&(this.datasourceOverrides={[o]:s}),this.libraryInstantiationPromise=this.instantiateLibrary(),this.checkForTooManyEngines()}checkForTooManyEngines(){kl===10&&console.warn(`${Re(\"warn(prisma-client)\")} This is the 10th instance of Prisma Client being started. Make sure this is intentional.`)}async transaction(r,n,i){await this.start();let o=JSON.stringify(n),s;if(r===\"start\"){let l=JSON.stringify({max_wait:i?.maxWait??2e3,timeout:i?.timeout??5e3,isolation_level:i?.isolationLevel});s=await this.engine?.startTransaction(l,o)}else r===\"commit\"?s=await this.engine?.commitTransaction(i.id,o):r===\"rollback\"&&(s=await this.engine?.rollbackTransaction(i.id,o));let a=this.parseEngineResponse(s);if(Qf(a)){let l=this.getExternalAdapterError(a);throw l?l.error:new H(a.message,{code:a.error_code,clientVersion:this.config.clientVersion,meta:a.meta})}return a}async instantiateLibrary(){if(qe(\"internalSetup\"),this.libraryInstantiationPromise)return this.libraryInstantiationPromise;wi(),this.platform=await this.getPlatform(),await this.loadEngine(),this.version()}async getPlatform(){{if(this.platform)return this.platform;let r=await ft();if(!Il.includes(r))throw new k(`Unknown ${ve(\"PRISMA_QUERY_ENGINE_LIBRARY\")} ${ve(pe(r))}. Possible binaryTargets: ${pt(Il.join(\", \"))} or a path to the query engine library.\nYou may have to run ${pt(\"prisma generate\")} for your changes to take effect.`,this.config.clientVersion);return r}}parseEngineResponse(r){if(!r)throw new W(\"Response from the Engine was empty\",{clientVersion:this.config.clientVersion});try{return JSON.parse(r)}catch{throw new W(\"Unable to JSON.parse response from engine\",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let r=new WeakRef(this),{adapter:n}=this.config;n&&qe(\"Using driver adapter: %O\",n),this.engine=new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:\"json\"},i=>{r.deref()?.logger(i)},n),kl++}catch(r){let n=r,i=this.parseInitError(n.message);throw typeof i==\"string\"?n:new k(i.message,this.config.clientVersion,i.error_code)}}}logger(r){let n=this.parseEngineResponse(r);if(n){if(\"span\"in n){this.config.tracingHelper.createEngineSpan(n);return}n.level=n?.level.toLowerCase()??\"unknown\",Uf(n)?this.logEmitter.emit(\"query\",{timestamp:new Date,query:n.query,params:n.params,duration:Number(n.duration_ms),target:n.module_path}):Kf(n)?this.loggerRustPanic=new be(this.getErrorMessageWithLink(`${n.message}: ${n.reason} in ${n.file}:${n.line}:${n.column}`),this.config.clientVersion):this.logEmitter.emit(n.level,{timestamp:new Date,message:n.message,target:n.module_path})}}getErrorMessageWithLink(r){return bl({platform:this.platform,title:r,version:this.config.clientVersion,engineVersion:this.versionInfo?.commit,database:this.config.activeProvider,query:this.lastQuery})}parseInitError(r){try{return JSON.parse(r)}catch{}return r}parseRequestError(r){try{return JSON.parse(r)}catch{}return r}on(r,n){if(r===\"beforeExit\")throw new Error('\"beforeExit\" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.');this.logEmitter.on(r,n)}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return qe(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let r=async()=>{qe(\"library starting\");try{let n={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(n)),this.libraryStarted=!0,qe(\"library started\")}catch(n){let i=this.parseInitError(n.message);throw typeof i==\"string\"?n:new k(i.message,this.config.clientVersion,i.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.config.tracingHelper.runInChildSpan(\"connect\",r),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return qe(\"library is already stopping\"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let r=async()=>{await new Promise(i=>setTimeout(i,5)),qe(\"library stopping\");let n={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(n)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,qe(\"library stopped\")};return this.libraryStoppingPromise=this.config.tracingHelper.runInChildSpan(\"disconnect\",r),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??\"unknown\"}debugPanic(r){return this.library?.debugPanic(r)}async request(r,{traceparent:n,interactiveTransaction:i}){qe(`sending request, this.libraryStarted: ${this.libraryStarted}`);let o=JSON.stringify({traceparent:n}),s=JSON.stringify(r);try{await this.start(),this.executingQueryPromise=this.engine?.query(s,o,i?.id),this.lastQuery=s;let a=this.parseEngineResponse(await this.executingQueryPromise);if(a.errors)throw a.errors.length===1?this.buildQueryError(a.errors[0]):new W(JSON.stringify(a.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:a,elapsed:0}}catch(a){if(a instanceof k)throw a;if(a.code===\"GenericFailure\"&&a.message?.startsWith(\"PANIC:\"))throw new be(this.getErrorMessageWithLink(a.message),this.config.clientVersion);let l=this.parseRequestError(a.message);throw typeof l==\"string\"?a:new W(`${l.message}\n${l.backtrace}`,{clientVersion:this.config.clientVersion})}}async requestBatch(r,{transaction:n,traceparent:i}){qe(\"requestBatch\");let o=Vn(r,n);await this.start(),this.lastQuery=JSON.stringify(o),this.executingQueryPromise=this.engine.query(this.lastQuery,JSON.stringify({traceparent:i}),Cl(n));let s=await this.executingQueryPromise,a=this.parseEngineResponse(s);if(a.errors)throw a.errors.length===1?this.buildQueryError(a.errors[0]):new W(JSON.stringify(a.errors),{clientVersion:this.config.clientVersion});let{batchResult:l,errors:u}=a;if(Array.isArray(l))return l.map(c=>c.errors&&c.errors.length>0?this.loggerRustPanic??this.buildQueryError(c.errors[0]):{data:c,elapsed:0});throw u&&u.length===1?new Error(u[0].error):new Error(JSON.stringify(a))}buildQueryError(r){if(r.user_facing_error.is_panic)return new be(this.getErrorMessageWithLink(r.user_facing_error.message),this.config.clientVersion);let n=this.getExternalAdapterError(r.user_facing_error);return n?n.error:Pr(r,this.config.clientVersion)}getExternalAdapterError(r){if(r.error_code===Bf&&this.config.adapter){let n=r.meta?.id;pn(typeof n==\"number\",\"Malformed external JS error received from the engine\");let i=this.config.adapter.errorRegistry.consumeError(n);return pn(i,\"External error with reported id was not registered\"),i}}async metrics(r){await this.start();let n=await this.engine.metrics(JSON.stringify(r));return r.format===\"prometheus\"?n:this.parseEngineResponse(n)}};function Qf(e){return typeof e==\"object\"&&e!==null&&e.error_code!==void 0}function Fl(e,t){let r;try{r=Bn({inlineDatasources:t.inlineDatasources,overrideDatasources:t.overrideDatasources,env:{...t.env,...process.env},clientVersion:t.clientVersion})}catch{}e.noEngine!==!0&&r?.startsWith(\"prisma://\")&&lr(\"recommend--no-engine\",\"In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)\");let n=gt(t.generator);if(n===\"wasm\"&&t.adapter!==void 0)return new zt(t);if(r?.startsWith(\"prisma://\")||e.noEngine)return new Nr(t);if(n===\"library\")return new zt(t);throw\"binary\",new se(\"Invalid client engine type, please use `library` or `binary`\",{clientVersion:t.clientVersion})}function zn({generator:e}){return e?.previewFeatures??[]}var ql=F(Do());function Ll(e,t){let r=$l(e),n=Gf(r),i=Hf(n);i?Yn(i,t):t.addErrorMessage(()=>\"Unknown error\")}function $l(e){return e.errors.flatMap(t=>t.kind===\"Union\"?$l(t):[t])}function Gf(e){let t=new Map,r=[];for(let n of e){if(n.kind!==\"InvalidArgumentType\"){r.push(n);continue}let i=`${n.selectionPath.join(\".\")}:${n.argumentPath.join(\".\")}`,o=t.get(i);o?t.set(i,{...n,argument:{...n.argument,typeNames:Jf(o.argument.typeNames,n.argument.typeNames)}}):t.set(i,n)}return r.push(...t.values()),r}function Jf(e,t){return[...new Set(e.concat(t))]}function Hf(e){return Qi(e,(t,r)=>{let n=Dl(t),i=Dl(r);return n!==i?n-i:Nl(t)-Nl(r)})}function Dl(e){let t=0;return Array.isArray(e.selectionPath)&&(t+=e.selectionPath.length),Array.isArray(e.argumentPath)&&(t+=e.argumentPath.length),t}function Nl(e){switch(e.kind){case\"InvalidArgumentValue\":case\"ValueTooLarge\":return 20;case\"InvalidArgumentType\":return 10;case\"RequiredArgumentMissing\":return-10;default:return 0}}var Ge=class{constructor(t,r){this.name=t;this.value=r;this.isRequired=!1}makeRequired(){return this.isRequired=!0,this}write(t){let{colors:{green:r}}=t.context;t.addMarginSymbol(r(this.isRequired?\"+\":\"?\")),t.write(r(this.name)),this.isRequired||t.write(r(\"?\")),t.write(r(\": \")),typeof this.value==\"string\"?t.write(r(this.value)):t.write(this.value)}};var Zn=class{constructor(){this.fields=[]}addField(t,r){return this.fields.push({write(n){let{green:i,dim:o}=n.context.colors;n.write(i(o(`${t}: ${r}`))).addMarginSymbol(i(o(\"+\")))}}),this}write(t){let{colors:{green:r}}=t.context;t.writeLine(r(\"{\")).withIndent(()=>{t.writeJoined(Bt,this.fields).newLine()}).write(r(\"}\")).addMarginSymbol(r(\"+\"))}};function Yn(e,t){switch(e.kind){case\"IncludeAndSelect\":Wf(e,t);break;case\"IncludeOnScalar\":zf(e,t);break;case\"EmptySelection\":Yf(e,t);break;case\"UnknownSelectionField\":Zf(e,t);break;case\"UnknownArgument\":Xf(e,t);break;case\"UnknownInputField\":eg(e,t);break;case\"RequiredArgumentMissing\":tg(e,t);break;case\"InvalidArgumentType\":rg(e,t);break;case\"InvalidArgumentValue\":ng(e,t);break;case\"ValueTooLarge\":ig(e,t);break;case\"SomeFieldsMissing\":og(e,t);break;case\"TooManyFieldsGiven\":sg(e,t);break;case\"Union\":Ll(e,t);break;default:throw new Error(\"not implemented: \"+e.kind)}}function Wf(e,t){let r=t.arguments.getDeepSubSelectionValue(e.selectionPath);r&&r instanceof z&&(r.getField(\"include\")?.markAsError(),r.getField(\"select\")?.markAsError()),t.addErrorMessage(n=>`Please ${n.bold(\"either\")} use ${n.green(\"`include`\")} or ${n.green(\"`select`\")}, but ${n.red(\"not both\")} at the same time.`)}function zf(e,t){let[r,n]=Xn(e.selectionPath),i=e.outputType,o=t.arguments.getDeepSelectionParent(r)?.value;if(o&&(o.getField(n)?.markAsError(),i))for(let s of i.fields)s.isRelation&&o.addSuggestion(new Ge(s.name,\"true\"));t.addErrorMessage(s=>{let a=`Invalid scalar field ${s.red(`\\`${n}\\``)} for ${s.bold(\"include\")} statement`;return i?a+=` on model ${s.bold(i.name)}. ${jr(s)}`:a+=\".\",a+=`\nNote that ${s.bold(\"include\")} statements only accept relation fields.`,a})}function Yf(e,t){let r=e.outputType,n=t.arguments.getDeepSelectionParent(e.selectionPath)?.value,i=n?.isEmpty()??!1;n&&(n.removeAllFields(),Bl(n,r)),t.addErrorMessage(o=>i?`The ${o.red(\"`select`\")} statement for type ${o.bold(r.name)} must not be empty. ${jr(o)}`:`The ${o.red(\"`select`\")} statement for type ${o.bold(r.name)} needs ${o.bold(\"at least one truthy value\")}.`)}function Zf(e,t){let[r,n]=Xn(e.selectionPath),i=t.arguments.getDeepSelectionParent(r);i&&(i.value.getField(n)?.markAsError(),Bl(i.value,e.outputType)),t.addErrorMessage(o=>{let s=[`Unknown field ${o.red(`\\`${n}\\``)}`];return i&&s.push(`for ${o.bold(i.kind)} statement`),s.push(`on model ${o.bold(`\\`${e.outputType.name}\\``)}.`),s.push(jr(o)),s.join(\" \")})}function Xf(e,t){let r=e.argumentPath[0],n=t.arguments.getDeepSubSelectionValue(e.selectionPath);n instanceof z&&(n.getField(r)?.markAsError(),ag(n,e.arguments)),t.addErrorMessage(i=>jl(i,r,e.arguments.map(o=>o.name)))}function eg(e,t){let[r,n]=Xn(e.argumentPath),i=t.arguments.getDeepSubSelectionValue(e.selectionPath);if(i instanceof z){i.getDeepField(e.argumentPath)?.markAsError();let o=i.getDeepFieldValue(r);o instanceof z&&Ul(o,e.inputType)}t.addErrorMessage(o=>jl(o,n,e.inputType.fields.map(s=>s.name)))}function jl(e,t,r){let n=[`Unknown argument \\`${e.red(t)}\\`.`],i=ug(t,r);return i&&n.push(`Did you mean \\`${e.green(i)}\\`?`),r.length>0&&n.push(jr(e)),n.join(\" \")}function tg(e,t){let r;t.addErrorMessage(l=>r?.value instanceof Y&&r.value.text===\"null\"?`Argument \\`${l.green(o)}\\` must not be ${l.red(\"null\")}.`:`Argument \\`${l.green(o)}\\` is missing.`);let n=t.arguments.getDeepSubSelectionValue(e.selectionPath);if(!(n instanceof z))return;let[i,o]=Xn(e.argumentPath),s=new Zn,a=n.getDeepFieldValue(i);if(a instanceof z)if(r=a.getField(o),r&&a.removeField(o),e.inputTypes.length===1&&e.inputTypes[0].kind===\"object\"){for(let l of e.inputTypes[0].fields)s.addField(l.name,l.typeNames.join(\" | \"));a.addSuggestion(new Ge(o,s).makeRequired())}else{let l=e.inputTypes.map(Vl).join(\" | \");a.addSuggestion(new Ge(o,l).makeRequired())}}function Vl(e){return e.kind===\"list\"?`${Vl(e.elementType)}[]`:e.name}function rg(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath);n instanceof z&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),t.addErrorMessage(i=>{let o=ei(\"or\",e.argument.typeNames.map(s=>i.green(s)));return`Argument \\`${i.bold(r)}\\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.`})}function ng(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath);n instanceof z&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),t.addErrorMessage(i=>{let o=[`Invalid value for argument \\`${i.bold(r)}\\``];if(e.underlyingError&&o.push(`: ${e.underlyingError}`),o.push(\".\"),e.argument.typeNames.length>0){let s=ei(\"or\",e.argument.typeNames.map(a=>i.green(a)));o.push(` Expected ${s}.`)}return o.join(\"\")})}function ig(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath),i;if(n instanceof z){let s=n.getDeepField(e.argumentPath)?.value;s?.markAsError(),s instanceof Y&&(i=s.text)}t.addErrorMessage(o=>{let s=[\"Unable to fit value\"];return i&&s.push(o.red(i)),s.push(`into a 64-bit signed integer for field \\`${o.bold(r)}\\``),s.join(\" \")})}function og(e,t){let r=e.argumentPath[e.argumentPath.length-1],n=t.arguments.getDeepSubSelectionValue(e.selectionPath);if(n instanceof z){let i=n.getDeepFieldValue(e.argumentPath);i instanceof z&&Ul(i,e.inputType)}t.addErrorMessage(i=>{let o=[`Argument \\`${i.bold(r)}\\` of type ${i.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1?e.constraints.requiredFields?o.push(`${i.green(\"at least one of\")} ${ei(\"or\",e.constraints.requiredFields.map(s=>`\\`${i.bold(s)}\\``))} arguments.`):o.push(`${i.green(\"at least one\")} argument.`):o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`),o.push(jr(i)),o.join(\" \")})}function sg(e,t){let r=e.argumentPath[e.argumentPath.length-1],n=t.arguments.getDeepSubSelectionValue(e.selectionPath),i=[];if(n instanceof z){let o=n.getDeepFieldValue(e.argumentPath);o instanceof z&&(o.markAsError(),i=Object.keys(o.getFields()))}t.addErrorMessage(o=>{let s=[`Argument \\`${o.bold(r)}\\` of type ${o.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1&&e.constraints.maxFieldCount==1?s.push(`${o.green(\"exactly one\")} argument,`):e.constraints.maxFieldCount==1?s.push(`${o.green(\"at most one\")} argument,`):s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`),s.push(`but you provided ${ei(\"and\",i.map(a=>o.red(a)))}. Please choose`),e.constraints.maxFieldCount===1?s.push(\"one.\"):s.push(`${e.constraints.maxFieldCount}.`),s.join(\" \")})}function Bl(e,t){for(let r of t.fields)e.hasField(r.name)||e.addSuggestion(new Ge(r.name,\"true\"))}function ag(e,t){for(let r of t)e.hasField(r.name)||e.addSuggestion(new Ge(r.name,r.typeNames.join(\" | \")))}function Ul(e,t){if(t.kind===\"object\")for(let r of t.fields)e.hasField(r.name)||e.addSuggestion(new Ge(r.name,r.typeNames.join(\" | \")))}function Xn(e){let t=[...e],r=t.pop();if(!r)throw new Error(\"unexpected empty path\");return[t,r]}function jr({green:e,enabled:t}){return\"Available options are \"+(t?`listed in ${e(\"green\")}`:\"marked with ?\")+\".\"}function ei(e,t){if(t.length===1)return t[0];let r=[...t],n=r.pop();return`${r.join(\", \")} ${e} ${n}`}var lg=3;function ug(e,t){let r=1/0,n;for(let i of t){let o=(0,ql.default)(e,i);o>lg||o<r&&(r=o,n=i)}return n}function ti({args:e,errors:t,errorFormat:r,callsite:n,originalMethod:i,clientVersion:o}){let s=Sn(e);for(let p of t)Yn(p,s);let a=r===\"pretty\"?Ea:Rn,l=s.renderAllMessages(a),u=new Nt(0,{colors:a}).write(s).toString(),c=Qt({message:l,callsite:n,originalMethod:i,showColors:r===\"pretty\",callArguments:u});throw new se(c,{clientVersion:o})}var cg={findUnique:\"findUnique\",findUniqueOrThrow:\"findUniqueOrThrow\",findFirst:\"findFirst\",findFirstOrThrow:\"findFirstOrThrow\",findMany:\"findMany\",count:\"aggregate\",create:\"createOne\",createMany:\"createMany\",update:\"updateOne\",updateMany:\"updateMany\",upsert:\"upsertOne\",delete:\"deleteOne\",deleteMany:\"deleteMany\",executeRaw:\"executeRaw\",queryRaw:\"queryRaw\",aggregate:\"aggregate\",groupBy:\"groupBy\",runCommandRaw:\"runCommandRaw\",findRaw:\"findRaw\",aggregateRaw:\"aggregateRaw\"};function Kl({modelName:e,action:t,args:r,runtimeDataModel:n,extensions:i,callsite:o,clientMethod:s,errorFormat:a,clientVersion:l}){let u=new No({runtimeDataModel:n,modelName:e,action:t,rootArgs:r,callsite:o,extensions:i,selectionPath:[],argumentPath:[],originalMethod:s,errorFormat:a,clientVersion:l});return{modelName:e,action:cg[t],query:Lo(r,u)}}function Lo({select:e,include:t,...r}={},n){return{arguments:Gl(r,n),selection:pg(e,t,n)}}function pg(e,t,r){return e&&t&&r.throwValidationError({kind:\"IncludeAndSelect\",selectionPath:r.getSelectionPath()}),e?fg(e,r):dg(r,t)}function dg(e,t){let r={};return e.model&&!e.isRawAction()&&(r.$composites=!0,r.$scalars=!0),t&&mg(r,t,e),r}function mg(e,t,r){for(let[n,i]of Object.entries(t)){let o=r.findField(n);o&&o?.kind!==\"object\"&&r.throwValidationError({kind:\"IncludeOnScalar\",selectionPath:r.getSelectionPath().concat(n),outputType:r.getOutputTypeDescription()}),i===!0?e[n]=!0:typeof i==\"object\"&&(e[n]=Lo(i,r.nestSelection(n)))}}function fg(e,t){let r={},n=t.getComputedFields(),i=rl(e,n);for(let[o,s]of Object.entries(i)){let a=t.findField(o);n?.[o]&&!a||(s===!0?r[o]=!0:typeof s==\"object\"&&(r[o]=Lo(s,t.nestSelection(o))))}return r}function Ql(e,t){if(e===null)return null;if(typeof e==\"string\"||typeof e==\"number\"||typeof e==\"boolean\")return e;if(typeof e==\"bigint\")return{$type:\"BigInt\",value:String(e)};if(Lt(e)){if(bn(e))return{$type:\"DateTime\",value:e.toISOString()};t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:t.getSelectionPath(),argumentPath:t.getArgumentPath(),argument:{name:t.getArgumentName(),typeNames:[\"Date\"]},underlyingError:\"Provided Date object is invalid\"})}if(Vt(e))return{$type:\"FieldRef\",value:{_ref:e.name,_container:e.modelName}};if(Array.isArray(e))return gg(e,t);if(ArrayBuffer.isView(e))return{$type:\"Bytes\",value:Buffer.from(e).toString(\"base64\")};if(yg(e))return e.values;if(jt(e))return{$type:\"Decimal\",value:e.toFixed()};if(e instanceof ke){if(e!==fn.instances[e._getName()])throw new Error(\"Invalid ObjectEnumValue\");return{$type:\"Enum\",value:e._getName()}}if(hg(e))return e.toJSON();if(typeof e==\"object\")return Gl(e,t);t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:t.getSelectionPath(),argumentPath:t.getArgumentPath(),argument:{name:t.getArgumentName(),typeNames:[]},underlyingError:`We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a \".toJSON()\" method on it`})}function Gl(e,t){if(e.$type)return{$type:\"Json\",value:JSON.stringify(e)};let r={};for(let n in e){let i=e[n];i!==void 0&&(r[n]=Ql(i,t.nestArgument(n)))}return r}function gg(e,t){let r=[];for(let n=0;n<e.length;n++){let i=t.nestArgument(String(n)),o=e[n];o===void 0&&t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:i.getSelectionPath(),argumentPath:i.getArgumentPath(),argument:{name:`${t.getArgumentName()}[${n}]`,typeNames:[]},underlyingError:\"Can not use `undefined` value within array. Use `null` or filter out `undefined` values\"}),r.push(Ql(o,i))}return r}function yg(e){return typeof e==\"object\"&&e!==null&&e.__prismaRawParameters__===!0}function hg(e){return typeof e==\"object\"&&e!==null&&typeof e.toJSON==\"function\"}var No=class e{constructor(t){this.params=t;this.params.modelName&&(this.model=this.params.runtimeDataModel.models[this.params.modelName])}throwValidationError(t){ti({errors:[t],originalMethod:this.params.originalMethod,args:this.params.rootArgs??{},callsite:this.params.callsite,errorFormat:this.params.errorFormat,clientVersion:this.params.clientVersion})}getSelectionPath(){return this.params.selectionPath}getArgumentPath(){return this.params.argumentPath}getArgumentName(){return this.params.argumentPath[this.params.argumentPath.length-1]}getOutputTypeDescription(){if(!(!this.params.modelName||!this.model))return{name:this.params.modelName,fields:this.model.fields.map(t=>({name:t.name,typeName:\"boolean\",isRelation:t.kind===\"object\"}))}}isRawAction(){return[\"executeRaw\",\"queryRaw\",\"runCommandRaw\",\"findRaw\",\"aggregateRaw\"].includes(this.params.action)}getComputedFields(){if(this.params.modelName)return this.params.extensions.getAllComputedFields(this.params.modelName)}findField(t){return this.model?.fields.find(r=>r.name===t)}nestSelection(t){let r=this.findField(t),n=r?.kind===\"object\"?r.type:void 0;return new e({...this.params,modelName:n,selectionPath:this.params.selectionPath.concat(t)})}nestArgument(t){return new e({...this.params,argumentPath:this.params.argumentPath.concat(t)})}};var Jl=e=>({command:e});var Hl=e=>e.strings.reduce((t,r,n)=>`${t}@P${n}${r}`);function Vr(e){try{return Wl(e,\"fast\")}catch{return Wl(e,\"slow\")}}function Wl(e,t){return JSON.stringify(e.map(r=>bg(r,t)))}function bg(e,t){return typeof e==\"bigint\"?{prisma__type:\"bigint\",prisma__value:e.toString()}:Lt(e)?{prisma__type:\"date\",prisma__value:e.toJSON()}:Ne.isDecimal(e)?{prisma__type:\"decimal\",prisma__value:e.toJSON()}:Buffer.isBuffer(e)?{prisma__type:\"bytes\",prisma__value:e.toString(\"base64\")}:xg(e)||ArrayBuffer.isView(e)?{prisma__type:\"bytes\",prisma__value:Buffer.from(e).toString(\"base64\")}:typeof e==\"object\"&&t===\"slow\"?Yl(e):e}function xg(e){return e instanceof ArrayBuffer||e instanceof SharedArrayBuffer?!0:typeof e==\"object\"&&e!==null?e[Symbol.toStringTag]===\"ArrayBuffer\"||e[Symbol.toStringTag]===\"SharedArrayBuffer\":!1}function Yl(e){if(typeof e!=\"object\"||e===null)return e;if(typeof e.toJSON==\"function\")return e.toJSON();if(Array.isArray(e))return e.map(zl);let t={};for(let r of Object.keys(e))t[r]=zl(e[r]);return t}function zl(e){return typeof e==\"bigint\"?e.toString():Yl(e)}var wg=/^(\\s*alter\\s)/i,Zl=$(\"prisma:client\");function $o(e,t,r,n){if(!(e!==\"postgresql\"&&e!==\"cockroachdb\")&&r.length>0&&wg.exec(t))throw new Error(`Running ALTER using ${n} is not supported\nUsing the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.\n\nExample:\n  await prisma.$executeRawUnsafe(\\`ALTER USER prisma WITH PASSWORD '\\${password}'\\`)\n\nMore Information: https://pris.ly/d/execute-raw\n`)}var qo=({clientMethod:e,activeProvider:t,driverAdapterProvider:r})=>n=>{r!==void 0&&(t=r);let i=\"\",o;if(Array.isArray(n)){let[s,...a]=n;i=s,o={values:Vr(a||[]),__prismaRawParameters__:!0}}else switch(t){case\"sqlite\":case\"mysql\":{i=n.sql,o={values:Vr(n.values),__prismaRawParameters__:!0};break}case\"cockroachdb\":case\"postgresql\":case\"postgres\":{i=n.text,o={values:Vr(n.values),__prismaRawParameters__:!0};break}case\"sqlserver\":{i=Hl(n),o={values:Vr(n.values),__prismaRawParameters__:!0};break}default:throw new Error(`The ${t} provider does not support ${e}`)}return o?.values?Zl(`prisma.${e}(${i}, ${o.values})`):Zl(`prisma.${e}(${i})`),{query:i,parameters:o}},Xl={requestArgsToMiddlewareArgs(e){return[e.strings,...e.values]},middlewareArgsToRequestArgs(e){let[t,...r]=e;return new me(t,r)}},eu={requestArgsToMiddlewareArgs(e){return[e]},middlewareArgsToRequestArgs(e){return e[0]}};function jo(e){return function(r){let n,i=(o=e)=>{try{return o===void 0||o?.kind===\"itx\"?n??(n=tu(r(o))):tu(r(o))}catch(s){return Promise.reject(s)}};return{then(o,s){return i().then(o,s)},catch(o){return i().catch(o)},finally(o){return i().finally(o)},requestTransaction(o){let s=i(o);return s.requestTransaction?s.requestTransaction(o):s},[Symbol.toStringTag]:\"PrismaPromise\"}}}function tu(e){return typeof e.then==\"function\"?e:Promise.resolve(e)}var ru={isEnabled(){return!1},getTraceParent(){return\"00-10-10-00\"},async createEngineSpan(){},getActiveContext(){},runInChildSpan(e,t){return t()}},Vo=class{isEnabled(){return this.getGlobalTracingHelper().isEnabled()}getTraceParent(t){return this.getGlobalTracingHelper().getTraceParent(t)}createEngineSpan(t){return this.getGlobalTracingHelper().createEngineSpan(t)}getActiveContext(){return this.getGlobalTracingHelper().getActiveContext()}runInChildSpan(t,r){return this.getGlobalTracingHelper().runInChildSpan(t,r)}getGlobalTracingHelper(){return globalThis.PRISMA_INSTRUMENTATION?.helper??ru}};function nu(e){return e.includes(\"tracing\")?new Vo:ru}function iu(e,t=()=>{}){let r,n=new Promise(i=>r=i);return{then(i){return--e===0&&r(t()),i?.(n)}}}function ou(e){return typeof e==\"string\"?e:e.reduce((t,r)=>{let n=typeof r==\"string\"?r:r.level;return n===\"query\"?t:t&&(r===\"info\"||t===\"info\")?\"info\":n},void 0)}var ri=class{constructor(){this._middlewares=[]}use(t){this._middlewares.push(t)}get(t){return this._middlewares[t]}has(t){return!!this._middlewares[t]}length(){return this._middlewares.length}};var au=F(Bi());function ni(e){return typeof e.batchRequestIdx==\"number\"}function ii(e){return e===null?e:Array.isArray(e)?e.map(ii):typeof e==\"object\"?Eg(e)?Pg(e):Ot(e,ii):e}function Eg(e){return e!==null&&typeof e==\"object\"&&typeof e.$type==\"string\"}function Pg({$type:e,value:t}){switch(e){case\"BigInt\":return BigInt(t);case\"Bytes\":return Buffer.from(t,\"base64\");case\"DateTime\":return new Date(t);case\"Decimal\":return new Ne(t);case\"Json\":return JSON.parse(t);default:yt(t,\"Unknown tagged value\")}}function su(e){if(e.action!==\"findUnique\"&&e.action!==\"findUniqueOrThrow\")return;let t=[];return e.modelName&&t.push(e.modelName),e.query.arguments&&t.push(Bo(e.query.arguments)),t.push(Bo(e.query.selection)),t.join(\"\")}function Bo(e){return`(${Object.keys(e).sort().map(r=>{let n=e[r];return typeof n==\"object\"&&n!==null?`(${r} ${Bo(n)})`:r}).join(\" \")})`}var vg={aggregate:!1,aggregateRaw:!1,createMany:!0,createOne:!0,deleteMany:!0,deleteOne:!0,executeRaw:!0,findFirst:!1,findFirstOrThrow:!1,findMany:!1,findRaw:!1,findUnique:!1,findUniqueOrThrow:!1,groupBy:!1,queryRaw:!1,runCommandRaw:!0,updateMany:!0,updateOne:!0,upsertOne:!0};function Uo(e){return vg[e]}var oi=class{constructor(t){this.options=t;this.tickActive=!1;this.batches={}}request(t){let r=this.options.batchBy(t);return r?(this.batches[r]||(this.batches[r]=[],this.tickActive||(this.tickActive=!0,process.nextTick(()=>{this.dispatchBatches(),this.tickActive=!1}))),new Promise((n,i)=>{this.batches[r].push({request:t,resolve:n,reject:i})})):this.options.singleLoader(t)}dispatchBatches(){for(let t in this.batches){let r=this.batches[t];delete this.batches[t],r.length===1?this.options.singleLoader(r[0].request).then(n=>{n instanceof Error?r[0].reject(n):r[0].resolve(n)}).catch(n=>{r[0].reject(n)}):(r.sort((n,i)=>this.options.batchOrder(n.request,i.request)),this.options.batchLoader(r.map(n=>n.request)).then(n=>{if(n instanceof Error)for(let i=0;i<r.length;i++)r[i].reject(n);else for(let i=0;i<r.length;i++){let o=n[i];o instanceof Error?r[i].reject(o):r[i].resolve(o)}}).catch(n=>{for(let i=0;i<r.length;i++)r[i].reject(n)}))}}get[Symbol.toStringTag](){return\"DataLoader\"}};var _g=$(\"prisma:client:request_handler\"),si=class{constructor(t,r){this.logEmitter=r,this.client=t,this.dataloader=new oi({batchLoader:Ya(async({requests:n,customDataProxyFetch:i})=>{let{transaction:o,otelParentCtx:s}=n[0],a=n.map(p=>p.protocolQuery),l=this.client._tracingHelper.getTraceParent(s),u=n.some(p=>Uo(p.protocolQuery.action));return(await this.client._engine.requestBatch(a,{traceparent:l,transaction:Tg(o),containsWrite:u,customDataProxyFetch:i})).map((p,d)=>{if(p instanceof Error)return p;try{return this.mapQueryEngineResult(n[d],p)}catch(f){return f}})}),singleLoader:async n=>{let i=n.transaction?.kind===\"itx\"?lu(n.transaction):void 0,o=await this.client._engine.request(n.protocolQuery,{traceparent:this.client._tracingHelper.getTraceParent(),interactiveTransaction:i,isWrite:Uo(n.protocolQuery.action),customDataProxyFetch:n.customDataProxyFetch});return this.mapQueryEngineResult(n,o)},batchBy:n=>n.transaction?.id?`transaction-${n.transaction.id}`:su(n.protocolQuery),batchOrder(n,i){return n.transaction?.kind===\"batch\"&&i.transaction?.kind===\"batch\"?n.transaction.index-i.transaction.index:0}})}async request(t){try{return await this.dataloader.request(t)}catch(r){let{clientMethod:n,callsite:i,transaction:o,args:s,modelName:a}=t;this.handleAndLogRequestError({error:r,clientMethod:n,callsite:i,transaction:o,args:s,modelName:a})}}mapQueryEngineResult({dataPath:t,unpacker:r},n){let i=n?.data,o=n?.elapsed,s=this.unpack(i,t,r);return process.env.PRISMA_CLIENT_GET_TIME?{data:s,elapsed:o}:s}handleAndLogRequestError(t){try{this.handleRequestError(t)}catch(r){throw this.logEmitter&&this.logEmitter.emit(\"error\",{message:r.message,target:t.clientMethod,timestamp:new Date}),r}}handleRequestError({error:t,clientMethod:r,callsite:n,transaction:i,args:o,modelName:s}){if(_g(t),Cg(t,i)||t instanceof Be)throw t;if(t instanceof H&&Ag(t)){let l=uu(t.meta);ti({args:o,errors:[l],callsite:n,errorFormat:this.client._errorFormat,originalMethod:r,clientVersion:this.client._clientVersion})}let a=t.message;if(n&&(a=Qt({callsite:n,originalMethod:r,isPanic:t.isPanic,showColors:this.client._errorFormat===\"pretty\",message:a})),a=this.sanitizeMessage(a),t.code){let l=s?{modelName:s,...t.meta}:t.meta;throw new H(a,{code:t.code,clientVersion:this.client._clientVersion,meta:l,batchRequestIdx:t.batchRequestIdx})}else{if(t.isPanic)throw new be(a,this.client._clientVersion);if(t instanceof W)throw new W(a,{clientVersion:this.client._clientVersion,batchRequestIdx:t.batchRequestIdx});if(t instanceof k)throw new k(a,this.client._clientVersion);if(t instanceof be)throw new be(a,this.client._clientVersion)}throw t.clientVersion=this.client._clientVersion,t}sanitizeMessage(t){return this.client._errorFormat&&this.client._errorFormat!==\"pretty\"?(0,au.default)(t):t}unpack(t,r,n){if(!t||(t.data&&(t=t.data),!t))return t;let i=Object.values(t)[0],o=r.filter(a=>a!==\"select\"&&a!==\"include\"),s=ii(uo(i,o));return n?n(s):s}get[Symbol.toStringTag](){return\"RequestHandler\"}};function Tg(e){if(e){if(e.kind===\"batch\")return{kind:\"batch\",options:{isolationLevel:e.isolationLevel}};if(e.kind===\"itx\")return{kind:\"itx\",options:lu(e)};yt(e,\"Unknown transaction kind\")}}function lu(e){return{id:e.id,payload:e.payload}}function Cg(e,t){return ni(e)&&t?.kind===\"batch\"&&e.batchRequestIdx!==t.index}function Ag(e){return e.code===\"P2009\"||e.code===\"P2012\"}function uu(e){if(e.kind===\"Union\")return{kind:\"Union\",errors:e.errors.map(uu)};if(Array.isArray(e.selectionPath)){let[,...t]=e.selectionPath;return{...e,selectionPath:t}}return e}var cu=\"5.7.1\";var pu=cu;function du(e){return e.map(t=>{let r={};for(let n of Object.keys(t))r[n]=mu(t[n]);return r})}function mu({prisma__type:e,prisma__value:t}){switch(e){case\"bigint\":return BigInt(t);case\"bytes\":return Buffer.from(t,\"base64\");case\"decimal\":return new Ne(t);case\"datetime\":case\"date\":return new Date(t);case\"time\":return new Date(`1970-01-01T${t}Z`);case\"array\":return t.map(mu);default:return t}}var hu=F(Do());var U=class extends Error{constructor(t){super(t+`\nRead more at https://pris.ly/d/client-constructor`),this.name=\"PrismaClientConstructorValidationError\"}get[Symbol.toStringTag](){return\"PrismaClientConstructorValidationError\"}};v(U,\"PrismaClientConstructorValidationError\");var fu=[\"datasources\",\"datasourceUrl\",\"errorFormat\",\"adapter\",\"log\",\"__internal\"],gu=[\"pretty\",\"colorless\",\"minimal\"],yu=[\"info\",\"query\",\"warn\",\"error\"],Mg={datasources:(e,{datasourceNames:t})=>{if(e){if(typeof e!=\"object\"||Array.isArray(e))throw new U(`Invalid value ${JSON.stringify(e)} for \"datasources\" provided to PrismaClient constructor`);for(let[r,n]of Object.entries(e)){if(!t.includes(r)){let i=Yt(r,t)||` Available datasources: ${t.join(\", \")}`;throw new U(`Unknown datasource ${r} provided to PrismaClient constructor.${i}`)}if(typeof n!=\"object\"||Array.isArray(n))throw new U(`Invalid value ${JSON.stringify(e)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`);if(n&&typeof n==\"object\")for(let[i,o]of Object.entries(n)){if(i!==\"url\")throw new U(`Invalid value ${JSON.stringify(e)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`);if(typeof o!=\"string\")throw new U(`Invalid value ${JSON.stringify(o)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`)}}}},adapter:(e,t)=>{if(e===null)return;if(e===void 0)throw new U('\"adapter\" property must not be undefined, use null to conditionally disable driver adapters.');if(!zn(t).includes(\"driverAdapters\"))throw new U('\"adapter\" property can only be provided to PrismaClient constructor when \"driverAdapters\" preview feature is enabled.');if(gt()===\"binary\")throw new U('Cannot use a driver adapter with the \"binary\" Query Engine. Please use the \"library\" Query Engine.')},datasourceUrl:e=>{if(typeof e<\"u\"&&typeof e!=\"string\")throw new U(`Invalid value ${JSON.stringify(e)} for \"datasourceUrl\" provided to PrismaClient constructor.\nExpected string or undefined.`)},errorFormat:e=>{if(e){if(typeof e!=\"string\")throw new U(`Invalid value ${JSON.stringify(e)} for \"errorFormat\" provided to PrismaClient constructor.`);if(!gu.includes(e)){let t=Yt(e,gu);throw new U(`Invalid errorFormat ${e} provided to PrismaClient constructor.${t}`)}}},log:e=>{if(!e)return;if(!Array.isArray(e))throw new U(`Invalid value ${JSON.stringify(e)} for \"log\" provided to PrismaClient constructor.`);function t(r){if(typeof r==\"string\"&&!yu.includes(r)){let n=Yt(r,yu);throw new U(`Invalid log level \"${r}\" provided to PrismaClient constructor.${n}`)}}for(let r of e){t(r);let n={level:t,emit:i=>{let o=[\"stdout\",\"event\"];if(!o.includes(i)){let s=Yt(i,o);throw new U(`Invalid value ${JSON.stringify(i)} for \"emit\" in logLevel provided to PrismaClient constructor.${s}`)}}};if(r&&typeof r==\"object\")for(let[i,o]of Object.entries(r))if(n[i])n[i](o);else throw new U(`Invalid property ${i} for \"log\" provided to PrismaClient constructor`)}},__internal:e=>{if(!e)return;let t=[\"debug\",\"hooks\",\"engine\",\"measurePerformance\"];if(typeof e!=\"object\")throw new U(`Invalid value ${JSON.stringify(e)} for \"__internal\" to PrismaClient constructor`);for(let[r]of Object.entries(e))if(!t.includes(r)){let n=Yt(r,t);throw new U(`Invalid property ${JSON.stringify(r)} for \"__internal\" provided to PrismaClient constructor.${n}`)}}};function bu(e,t){for(let[r,n]of Object.entries(e)){if(!fu.includes(r)){let i=Yt(r,fu);throw new U(`Unknown property ${r} provided to PrismaClient constructor.${i}`)}Mg[r](n,t)}if(e.datasourceUrl&&e.datasources)throw new U('Can not use \"datasourceUrl\" and \"datasources\" options at the same time. Pick one of them')}function Yt(e,t){if(t.length===0||typeof e!=\"string\")return\"\";let r=Sg(e,t);return r?` Did you mean \"${r}\"?`:\"\"}function Sg(e,t){if(t.length===0)return null;let r=t.map(i=>({value:i,distance:(0,hu.default)(e,i)}));r.sort((i,o)=>i.distance<o.distance?-1:1);let n=r[0];return n.distance<3?n.value:null}function xu(e){return e.length===0?Promise.resolve([]):new Promise((t,r)=>{let n=new Array(e.length),i=null,o=!1,s=0,a=()=>{o||(s++,s===e.length&&(o=!0,i?r(i):t(n)))},l=u=>{o||(o=!0,r(u))};for(let u=0;u<e.length;u++)e[u].then(c=>{n[u]=c,a()},c=>{if(!ni(c)){l(c);return}c.batchRequestIdx===u?l(c):(i||(i=c),a())})})}var lt=$(\"prisma:client\");typeof globalThis==\"object\"&&(globalThis.NODE_CLIENT=!0);var Ig={requestArgsToMiddlewareArgs:e=>e,middlewareArgsToRequestArgs:e=>e},kg=Symbol.for(\"prisma.client.transaction.id\"),Fg={id:0,nextId(){return++this.id}};function _u(e){class t{constructor(n){this._middlewares=new ri;this._createPrismaPromise=jo();this.$extends=Ua;ol(e),n&&bu(n,e);let i=n?.adapter?Yi(n.adapter):void 0,o=new Pu.EventEmitter().on(\"error\",()=>{});this._extensions=Ln.empty(),this._previewFeatures=zn(e),this._clientVersion=e.clientVersion??pu,this._activeProvider=e.activeProvider,this._tracingHelper=nu(this._previewFeatures);let s={rootEnvPath:e.relativeEnvPaths.rootEnvPath&&Br.default.resolve(e.dirname,e.relativeEnvPaths.rootEnvPath),schemaEnvPath:e.relativeEnvPaths.schemaEnvPath&&Br.default.resolve(e.dirname,e.relativeEnvPaths.schemaEnvPath)},a=!i&&ir(s,{conflictCheck:\"none\"})||e.injectableEdgeEnv?.();try{let l=n??{},u=l.__internal??{},c=u.debug===!0;c&&$.enable(\"prisma:client\");let p=Br.default.resolve(e.dirname,e.relativePath);vu.default.existsSync(p)||(p=e.dirname),lt(\"dirname\",e.dirname),lt(\"relativePath\",e.relativePath),lt(\"cwd\",p);let d=u.engine||{};if(l.errorFormat?this._errorFormat=l.errorFormat: false?0:process.env.NO_COLOR?this._errorFormat=\"colorless\":this._errorFormat=\"colorless\",this._runtimeDataModel=e.runtimeDataModel,this._engineConfig={cwd:p,dirname:e.dirname,enableDebugLogs:c,allowTriggerPanic:d.allowTriggerPanic,datamodelPath:Br.default.join(e.dirname,e.filename??\"schema.prisma\"),prismaPath:d.binaryPath??void 0,engineEndpoint:d.endpoint,generator:e.generator,showColors:this._errorFormat===\"pretty\",logLevel:l.log&&ou(l.log),logQueries:l.log&&!!(typeof l.log==\"string\"?l.log===\"query\":l.log.find(f=>typeof f==\"string\"?f===\"query\":f.level===\"query\")),env:a?.parsed??{},flags:[],getQueryEngineWasmModule:e.getQueryEngineWasmModule,clientVersion:e.clientVersion,engineVersion:e.engineVersion,previewFeatures:this._previewFeatures,activeProvider:e.activeProvider,inlineSchema:e.inlineSchema,overrideDatasources:sl(l,e.datasourceNames),inlineDatasources:e.inlineDatasources,inlineSchemaHash:e.inlineSchemaHash,tracingHelper:this._tracingHelper,logEmitter:o,isBundled:e.isBundled,adapter:i},lt(\"clientVersion\",e.clientVersion),this._engine=Fl(e,this._engineConfig),this._requestHandler=new si(this,o),l.log)for(let f of l.log){let y=typeof f==\"string\"?f:f.emit===\"stdout\"?f.level:null;y&&this.$on(y,g=>{ar.log(`${ar.tags[y]??\"\"}`,g.message||g.query)})}this._metrics=new Dt(this._engine)}catch(l){throw l.clientVersion=this._clientVersion,l}return this._appliedParent=wr(this)}get[Symbol.toStringTag](){return\"PrismaClient\"}$use(n){this._middlewares.use(n)}$on(n,i){n===\"beforeExit\"?this._engine.on(\"beforeExit\",i):this._engine.on(n,o=>{let s=o.fields;return i(n===\"query\"?{timestamp:o.timestamp,query:s?.query??o.query,params:s?.params??o.params,duration:s?.duration_ms??o.duration,target:o.target}:{timestamp:o.timestamp,message:s?.message??o.message,target:o.target})})}$connect(){try{return this._engine.start()}catch(n){throw n.clientVersion=this._clientVersion,n}}async $disconnect(){try{await this._engine.stop()}catch(n){throw n.clientVersion=this._clientVersion,n}finally{cs()}}$executeRawInternal(n,i,o,s){let a=this._activeProvider,l=this._engineConfig.adapter?.provider;return this._request({action:\"executeRaw\",args:o,transaction:n,clientMethod:i,argsMapper:qo({clientMethod:i,activeProvider:a,driverAdapterProvider:l}),callsite:ot(this._errorFormat),dataPath:[],middlewareArgsMapper:s})}$executeRaw(n,...i){return this._createPrismaPromise(o=>{if(n.raw!==void 0||n.sql!==void 0){let[s,a]=wu(n,i);return $o(this._activeProvider,s.text,s.values,Array.isArray(n)?\"prisma.$executeRaw`<SQL>`\":\"prisma.$executeRaw(sql`<SQL>`)\"),this.$executeRawInternal(o,\"$executeRaw\",s,a)}throw new se(\"`$executeRaw` is a tag function, please use it like the following:\\n```\\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\\n```\\n\\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\\n\",{clientVersion:this._clientVersion})})}$executeRawUnsafe(n,...i){return this._createPrismaPromise(o=>($o(this._activeProvider,n,i,\"prisma.$executeRawUnsafe(<SQL>, [...values])\"),this.$executeRawInternal(o,\"$executeRawUnsafe\",[n,...i])))}$runCommandRaw(n){if(e.activeProvider!==\"mongodb\")throw new se(`The ${e.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,{clientVersion:this._clientVersion});return this._createPrismaPromise(i=>this._request({args:n,clientMethod:\"$runCommandRaw\",dataPath:[],action:\"runCommandRaw\",argsMapper:Jl,callsite:ot(this._errorFormat),transaction:i}))}async $queryRawInternal(n,i,o,s){let a=this._activeProvider,l=this._engineConfig.adapter?.provider;return this._request({action:\"queryRaw\",args:o,transaction:n,clientMethod:i,argsMapper:qo({clientMethod:i,activeProvider:a,driverAdapterProvider:l}),callsite:ot(this._errorFormat),dataPath:[],middlewareArgsMapper:s}).then(du)}$queryRaw(n,...i){return this._createPrismaPromise(o=>{if(n.raw!==void 0||n.sql!==void 0)return this.$queryRawInternal(o,\"$queryRaw\",...wu(n,i));throw new se(\"`$queryRaw` is a tag function, please use it like the following:\\n```\\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\\n```\\n\\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\\n\",{clientVersion:this._clientVersion})})}$queryRawUnsafe(n,...i){return this._createPrismaPromise(o=>this.$queryRawInternal(o,\"$queryRawUnsafe\",[n,...i]))}_transactionWithArray({promises:n,options:i}){let o=Fg.nextId(),s=iu(n.length),a=n.map((l,u)=>{if(l?.[Symbol.toStringTag]!==\"PrismaPromise\")throw new Error(\"All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.\");let c=i?.isolationLevel,p={kind:\"batch\",id:o,index:u,isolationLevel:c,lock:s};return l.requestTransaction?.(p)??l});return xu(a)}async _transactionWithCallback({callback:n,options:i}){let o={traceparent:this._tracingHelper.getTraceParent()},s=await this._engine.transaction(\"start\",o,i),a;try{let l={kind:\"itx\",...s};a=await n(this._createItxClient(l)),await this._engine.transaction(\"commit\",o,s)}catch(l){throw await this._engine.transaction(\"rollback\",o,s).catch(()=>{}),l}return a}_createItxClient(n){return wr(Oe(On(this),[ce(\"_appliedParent\",()=>this._appliedParent._createItxClient(n)),ce(\"_createPrismaPromise\",()=>jo(n)),ce(kg,()=>n.id),yr(Ji)]))}$transaction(n,i){let o;typeof n==\"function\"?o=()=>this._transactionWithCallback({callback:n,options:i}):o=()=>this._transactionWithArray({promises:n,options:i});let s={name:\"transaction\",attributes:{method:\"$transaction\"}};return this._tracingHelper.runInChildSpan(s,o)}_request(n){n.otelParentCtx=this._tracingHelper.getActiveContext();let i=n.middlewareArgsMapper??Ig,o={args:i.requestArgsToMiddlewareArgs(n.args),dataPath:n.dataPath,runInTransaction:!!n.transaction,action:n.action,model:n.model},s={middleware:{name:\"middleware\",middleware:!0,attributes:{method:\"$use\"},active:!1},operation:{name:\"operation\",attributes:{method:o.action,model:o.model,name:o.model?`${o.model}.${o.action}`:o.action}}},a=-1,l=async u=>{let c=this._middlewares.get(++a);if(c)return this._tracingHelper.runInChildSpan(s.middleware,T=>c(u,A=>(T?.end(),l(A))));let{runInTransaction:p,args:d,...f}=u,y={...n,...f};d&&(y.args=i.middlewareArgsToRequestArgs(d)),n.transaction!==void 0&&p===!1&&delete y.transaction;let g=await za(this,y);return y.model?Ga({result:g,modelName:y.model,args:y.args,extensions:this._extensions,runtimeDataModel:this._runtimeDataModel}):g};return this._tracingHelper.runInChildSpan(s.operation,()=>new Eu.AsyncResource(\"prisma-client-request\").runInAsyncScope(()=>l(o)))}async _executeRequest({args:n,clientMethod:i,dataPath:o,callsite:s,action:a,model:l,argsMapper:u,transaction:c,unpacker:p,otelParentCtx:d,customDataProxyFetch:f}){try{n=u?u(n):n;let y={name:\"serialize\"},g=this._tracingHelper.runInChildSpan(y,()=>Kl({modelName:l,runtimeDataModel:this._runtimeDataModel,action:a,args:n,clientMethod:i,callsite:s,extensions:this._extensions,errorFormat:this._errorFormat,clientVersion:this._clientVersion}));return $.enabled(\"prisma:client\")&&(lt(\"Prisma Client call:\"),lt(`prisma.${i}(${Ta(n)})`),lt(\"Generated request:\"),lt(JSON.stringify(g,null,2)+`\n`)),c?.kind===\"batch\"&&await c.lock,this._requestHandler.request({protocolQuery:g,modelName:l,action:a,clientMethod:i,dataPath:o,callsite:s,args:n,extensions:this._extensions,transaction:c,unpacker:p,otelParentCtx:d,otelChildCtx:this._tracingHelper.getActiveContext(),customDataProxyFetch:f})}catch(y){throw y.clientVersion=this._clientVersion,y}}get $metrics(){if(!this._hasPreviewFlag(\"metrics\"))throw new se(\"`metrics` preview feature must be enabled in order to access metrics API\",{clientVersion:this._clientVersion});return this._metrics}_hasPreviewFlag(n){return!!this._engineConfig.previewFeatures?.includes(n)}}return t}function wu(e,t){return Og(e)?[new me(e,t),Xl]:[e,eu]}function Og(e){return Array.isArray(e)&&Array.isArray(e.raw)}var Dg=new Set([\"toJSON\",\"$$typeof\",\"asymmetricMatch\",Symbol.iterator,Symbol.toStringTag,Symbol.isConcatSpreadable,Symbol.toPrimitive]);function Tu(e){return new Proxy(e,{get(t,r){if(r in t)return t[r];if(!Dg.has(r))throw new TypeError(`Invalid enum value: ${String(r)}`)}})}function Cu(e){ir(e,{conflictCheck:\"warn\"})}0&&(0);\n/*! Bundled license information:\n\ndecimal.js/decimal.mjs:\n  (*!\n   *  decimal.js v10.4.3\n   *  An arbitrary-precision Decimal type for JavaScript.\n   *  https://github.com/MikeMcl/decimal.js\n   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\n   *  MIT Licence\n   *)\n*/\n//# sourceMappingURL=library.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByaXNtYS9jbGllbnQvcnVudGltZS9saWJyYXJ5LmpzIiwibWFwcGluZ3MiOiI7QUFBYSxxQkFBcUIsNkJBQTZCLHVDQUF1QyxrQ0FBa0MsZ0VBQWdFLDJCQUEyQixXQUFXLG1DQUFtQyx1QkFBdUIsdUJBQXVCLEVBQUUsZ0JBQWdCLGdHQUFnRyxtREFBbUQsRUFBRSxVQUFVLHNDQUFzQyx5Q0FBeUMsc0JBQXNCLHNCQUFzQixlQUFlLFNBQVMsS0FBSyxtQkFBbUIsYUFBYSwyREFBMkQseUJBQXlCLFFBQVEsZUFBZSx5Q0FBeUMsdURBQXVELDRGQUE0RixlQUFlLGdDQUFnQyxpSkFBaUosTUFBTSxvREFBb0QsVUFBVSw4REFBOEQsMkNBQTJDLHlDQUF5Qyw4REFBOEQsb0VBQW9FLG9FQUFvRSw4RUFBOEUsa0JBQWtCLGVBQWUsa0JBQWtCLDBIQUEwSCxlQUFlLGtCQUFrQixrSEFBa0gscUJBQXFCLGVBQWUseUNBQXlDLEVBQUUsbUJBQW1CLGFBQWEsZUFBZSwySEFBMkgsVUFBVSx3Q0FBd0MsY0FBYyxRQUFRLFlBQVksV0FBVyxvQ0FBb0MsNkNBQTZDLGdCQUFnQixjQUFjLGlCQUFpQixpQkFBaUIscUJBQXFCLHNDQUFzQywwRkFBMEYsUUFBUSw0Q0FBNEMsdUJBQXVCLElBQUksdUJBQXVCLHlCQUF5QixZQUFZLGtDQUFrQyxVQUFVLG1EQUFtRCwwSUFBMEksK0dBQStHLEtBQUsseUNBQXlDLGdCQUFnQiwrQ0FBK0Msd0JBQXdCLGNBQWMsK0NBQStDLDZEQUE2RCxRQUFRLElBQUksb0lBQW9JLGFBQWEsb0VBQW9FLHNCQUFzQixjQUFjLGdDQUFnQyxRQUFRLHlCQUF5QixJQUFJLG1DQUFtQyx5QkFBeUIsSUFBSSxtQ0FBbUMsU0FBUyxjQUFjLDhFQUE4RSxjQUFjLCtDQUErQyxhQUFhLHNKQUFzSiw0QkFBNEIsY0FBYyxFQUFFLG1CQUFtQixhQUFhLGlCQUFpQixXQUFXLFdBQVcsZ0JBQWdCLGdCQUFnQixpQkFBaUIsU0FB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SSxlQUFlLG9CQUFvQixTQUFTLHNCQUFzQix5REFBeUQsVUFBVSxJQUFJLEVBQUUsZUFBZSxNQUFNLHFCQUFxQixFQUFFLElBQUksQ0FBNmE7QUFDeDlDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVhbS1jaGF0LWFwcGxpY2F0aW9uLy4vbm9kZV9tb2R1bGVzL0BwcmlzbWEvY2xpZW50L3J1bnRpbWUvbGlicmFyeS5qcz80NGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO3ZhciBBdT1PYmplY3QuY3JlYXRlO3ZhciBLcj1PYmplY3QuZGVmaW5lUHJvcGVydHk7dmFyIFJ1PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dmFyIE11PU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO3ZhciBTdT1PYmplY3QuZ2V0UHJvdG90eXBlT2YsSXU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt2YXIgUT0oZSx0KT0+KCk9Pih0fHxlKCh0PXtleHBvcnRzOnt9fSkuZXhwb3J0cyx0KSx0LmV4cG9ydHMpLFR0PShlLHQpPT57Zm9yKHZhciByIGluIHQpS3IoZSxyLHtnZXQ6dFtyXSxlbnVtZXJhYmxlOiEwfSl9LEtvPShlLHQscixuKT0+e2lmKHQmJnR5cGVvZiB0PT1cIm9iamVjdFwifHx0eXBlb2YgdD09XCJmdW5jdGlvblwiKWZvcihsZXQgaSBvZiBNdSh0KSkhSXUuY2FsbChlLGkpJiZpIT09ciYmS3IoZSxpLHtnZXQ6KCk9PnRbaV0sZW51bWVyYWJsZTohKG49UnUodCxpKSl8fG4uZW51bWVyYWJsZX0pO3JldHVybiBlfTt2YXIgRj0oZSx0LHIpPT4ocj1lIT1udWxsP0F1KFN1KGUpKTp7fSxLbyh0fHwhZXx8IWUuX19lc01vZHVsZT9LcihyLFwiZGVmYXVsdFwiLHt2YWx1ZTplLGVudW1lcmFibGU6ITB9KTpyLGUpKSxrdT1lPT5LbyhLcih7fSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxlKTt2YXIgZXM9USgoSGcsWG8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIEN0PTFlMyxBdD1DdCo2MCxSdD1BdCo2MCxjdD1SdCoyNCxGdT1jdCo3LE91PWN0KjM2NS4yNTtYby5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dD10fHx7fTt2YXIgcj10eXBlb2YgZTtpZihyPT09XCJzdHJpbmdcIiYmZS5sZW5ndGg+MClyZXR1cm4gRHUoZSk7aWYocj09PVwibnVtYmVyXCImJmlzRmluaXRlKGUpKXJldHVybiB0Lmxvbmc/THUoZSk6TnUoZSk7dGhyb3cgbmV3IEVycm9yKFwidmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD1cIitKU09OLnN0cmluZ2lmeShlKSl9O2Z1bmN0aW9uIER1KGUpe2lmKGU9U3RyaW5nKGUpLCEoZS5sZW5ndGg+MTAwKSl7dmFyIHQ9L14oLT8oPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKGUpO2lmKHQpe3ZhciByPXBhcnNlRmxvYXQodFsxXSksbj0odFsyXXx8XCJtc1wiKS50b0xvd2VyQ2FzZSgpO3N3aXRjaChuKXtjYXNlXCJ5ZWFyc1wiOmNhc2VcInllYXJcIjpjYXNlXCJ5cnNcIjpjYXNlXCJ5clwiOmNhc2VcInlcIjpyZXR1cm4gcipPdTtjYXNlXCJ3ZWVrc1wiOmNhc2VcIndlZWtcIjpjYXNlXCJ3XCI6cmV0dXJuIHIqRnU7Y2FzZVwiZGF5c1wiOmNhc2VcImRheVwiOmNhc2VcImRcIjpyZXR1cm4gcipjdDtjYXNlXCJob3Vyc1wiOmNhc2VcImhvdXJcIjpjYXNlXCJocnNcIjpjYXNlXCJoclwiOmNhc2VcImhcIjpyZXR1cm4gcipSdDtjYXNlXCJtaW51dGVzXCI6Y2FzZVwibWludXRlXCI6Y2FzZVwibWluc1wiOmNhc2VcIm1pblwiOmNhc2VcIm1cIjpyZXR1cm4gcipBdDtjYXNlXCJzZWNvbmRzXCI6Y2FzZVwic2Vjb25kXCI6Y2FzZVwic2Vjc1wiOmNhc2VcInNlY1wiOmNhc2VcInNcIjpyZXR1cm4gcipDdDtjYXNlXCJtaWxsaXNlY29uZHNcIjpjYXNlXCJtaWxsaXNlY29uZFwiOmNhc2VcIm1zZWNzXCI6Y2FzZVwibXNlY1wiOmNhc2VcIm1zXCI6cmV0dXJuIHI7ZGVmYXVsdDpyZXR1cm59fX19ZnVuY3Rpb24gTnUoZSl7dmFyIHQ9TWF0aC5hYnMoZSk7cmV0dXJuIHQ+PWN0P01hdGgucm91bmQoZS9jdCkrXCJkXCI6dD49UnQ/TWF0aC5yb3VuZChlL1J0KStcImhcIjp0Pj1BdD9NYXRoLnJvdW5kKGUvQXQpK1wibVwiOnQ+PUN0P01hdGgucm91bmQoZS9DdCkrXCJzXCI6ZStcIm1zXCJ9ZnVuY3Rpb24gTHUoZSl7dmFyIHQ9TWF0aC5hYnMoZSk7cmV0dXJuIHQ+PWN0P0dyKGUsdCxjdCxcImRheVwiKTp0Pj1SdD9HcihlLHQsUnQsXCJob3VyXCIpOnQ+PUF0P0dyKGUsdCxBdCxcIm1pbnV0ZVwiKTp0Pj1DdD9HcihlLHQsQ3QsXCJzZWNvbmRcIik6ZStcIiBtc1wifWZ1bmN0aW9uIEdyKGUsdCxyLG4pe3ZhciBpPXQ+PXIqMS41O3JldHVybiBNYXRoLnJvdW5kKGUvcikrXCIgXCIrbisoaT9cInNcIjpcIlwiKX19KTt2YXIgZGk9USgoV2csdHMpPT57XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gJHUoZSl7ci5kZWJ1Zz1yLHIuZGVmYXVsdD1yLHIuY29lcmNlPWwsci5kaXNhYmxlPW8sci5lbmFibGU9aSxyLmVuYWJsZWQ9cyxyLmh1bWFuaXplPWVzKCksci5kZXN0cm95PXUsT2JqZWN0LmtleXMoZSkuZm9yRWFjaChjPT57cltjXT1lW2NdfSksci5uYW1lcz1bXSxyLnNraXBzPVtdLHIuZm9ybWF0dGVycz17fTtmdW5jdGlvbiB0KGMpe2xldCBwPTA7Zm9yKGxldCBkPTA7ZDxjLmxlbmd0aDtkKyspcD0ocDw8NSktcCtjLmNoYXJDb2RlQXQoZCkscHw9MDtyZXR1cm4gci5jb2xvcnNbTWF0aC5hYnMocCklci5jb2xvcnMubGVuZ3RoXX1yLnNlbGVjdENvbG9yPXQ7ZnVuY3Rpb24gcihjKXtsZXQgcCxkPW51bGwsZix5O2Z1bmN0aW9uIGcoLi4uVCl7aWYoIWcuZW5hYmxlZClyZXR1cm47bGV0IEE9ZyxSPU51bWJlcihuZXcgRGF0ZSksRT1SLShwfHxSKTtBLmRpZmY9RSxBLnByZXY9cCxBLmN1cnI9UixwPVIsVFswXT1yLmNvZXJjZShUWzBdKSx0eXBlb2YgVFswXSE9XCJzdHJpbmdcIiYmVC51bnNoaWZ0KFwiJU9cIik7bGV0IFM9MDtUWzBdPVRbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csKGVlLHV0KT0+e2lmKGVlPT09XCIlJVwiKXJldHVyblwiJVwiO1MrKztsZXQgSz1yLmZvcm1hdHRlcnNbdXRdO2lmKHR5cGVvZiBLPT1cImZ1bmN0aW9uXCIpe2xldCBuZT1UW1NdO2VlPUsuY2FsbChBLG5lKSxULnNwbGljZShTLDEpLFMtLX1yZXR1cm4gZWV9KSxyLmZvcm1hdEFyZ3MuY2FsbChBLFQpLChBLmxvZ3x8ci5sb2cpLmFwcGx5KEEsVCl9cmV0dXJuIGcubmFtZXNwYWNlPWMsZy51c2VDb2xvcnM9ci51c2VDb2xvcnMoKSxnLmNvbG9yPXIuc2VsZWN0Q29sb3IoYyksZy5leHRlbmQ9bixnLmRlc3Ryb3k9ci5kZXN0cm95LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnLFwiZW5hYmxlZFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxnZXQ6KCk9PmQhPT1udWxsP2Q6KGYhPT1yLm5hbWVzcGFjZXMmJihmPXIubmFtZXNwYWNlcyx5PXIuZW5hYmxlZChjKSkseSksc2V0OlQ9PntkPVR9fSksdHlwZW9mIHIuaW5pdD09XCJmdW5jdGlvblwiJiZyLmluaXQoZyksZ31mdW5jdGlvbiBuKGMscCl7bGV0IGQ9cih0aGlzLm5hbWVzcGFjZSsodHlwZW9mIHA+XCJ1XCI/XCI6XCI6cCkrYyk7cmV0dXJuIGQubG9nPXRoaXMubG9nLGR9ZnVuY3Rpb24gaShjKXtyLnNhdmUoYyksci5uYW1lc3BhY2VzPWMsci5uYW1lcz1bXSxyLnNraXBzPVtdO2xldCBwLGQ9KHR5cGVvZiBjPT1cInN0cmluZ1wiP2M6XCJcIikuc3BsaXQoL1tcXHMsXSsvKSxmPWQubGVuZ3RoO2ZvcihwPTA7cDxmO3ArKylkW3BdJiYoYz1kW3BdLnJlcGxhY2UoL1xcKi9nLFwiLio/XCIpLGNbMF09PT1cIi1cIj9yLnNraXBzLnB1c2gobmV3IFJlZ0V4cChcIl5cIitjLnNsaWNlKDEpK1wiJFwiKSk6ci5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoXCJeXCIrYytcIiRcIikpKX1mdW5jdGlvbiBvKCl7bGV0IGM9Wy4uLnIubmFtZXMubWFwKGEpLC4uLnIuc2tpcHMubWFwKGEpLm1hcChwPT5cIi1cIitwKV0uam9pbihcIixcIik7cmV0dXJuIHIuZW5hYmxlKFwiXCIpLGN9ZnVuY3Rpb24gcyhjKXtpZihjW2MubGVuZ3RoLTFdPT09XCIqXCIpcmV0dXJuITA7bGV0IHAsZDtmb3IocD0wLGQ9ci5za2lwcy5sZW5ndGg7cDxkO3ArKylpZihyLnNraXBzW3BdLnRlc3QoYykpcmV0dXJuITE7Zm9yKHA9MCxkPXIubmFtZXMubGVuZ3RoO3A8ZDtwKyspaWYoci5uYW1lc1twXS50ZXN0KGMpKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIGEoYyl7cmV0dXJuIGMudG9TdHJpbmcoKS5zdWJzdHJpbmcoMixjLnRvU3RyaW5nKCkubGVuZ3RoLTIpLnJlcGxhY2UoL1xcLlxcKlxcPyQvLFwiKlwiKX1mdW5jdGlvbiBsKGMpe3JldHVybiBjIGluc3RhbmNlb2YgRXJyb3I/Yy5zdGFja3x8Yy5tZXNzYWdlOmN9ZnVuY3Rpb24gdSgpe2NvbnNvbGUud2FybihcIkluc3RhbmNlIG1ldGhvZCBgZGVidWcuZGVzdHJveSgpYCBpcyBkZXByZWNhdGVkIGFuZCBubyBsb25nZXIgZG9lcyBhbnl0aGluZy4gSXQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24gb2YgYGRlYnVnYC5cIil9cmV0dXJuIHIuZW5hYmxlKHIubG9hZCgpKSxyfXRzLmV4cG9ydHM9JHV9KTt2YXIgcnM9USgoaGUsSnIpPT57XCJ1c2Ugc3RyaWN0XCI7aGUuZm9ybWF0QXJncz1qdTtoZS5zYXZlPVZ1O2hlLmxvYWQ9QnU7aGUudXNlQ29sb3JzPXF1O2hlLnN0b3JhZ2U9VXUoKTtoZS5kZXN0cm95PSgoKT0+e2xldCBlPSExO3JldHVybigpPT57ZXx8KGU9ITAsY29uc29sZS53YXJuKFwiSW5zdGFuY2UgbWV0aG9kIGBkZWJ1Zy5kZXN0cm95KClgIGlzIGRlcHJlY2F0ZWQgYW5kIG5vIGxvbmdlciBkb2VzIGFueXRoaW5nLiBJdCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvbiBvZiBgZGVidWdgLlwiKSl9fSkoKTtoZS5jb2xvcnM9W1wiIzAwMDBDQ1wiLFwiIzAwMDBGRlwiLFwiIzAwMzNDQ1wiLFwiIzAwMzNGRlwiLFwiIzAwNjZDQ1wiLFwiIzAwNjZGRlwiLFwiIzAwOTlDQ1wiLFwiIzAwOTlGRlwiLFwiIzAwQ0MwMFwiLFwiIzAwQ0MzM1wiLFwiIzAwQ0M2NlwiLFwiIzAwQ0M5OVwiLFwiIzAwQ0NDQ1wiLFwiIzAwQ0NGRlwiLFwiIzMzMDBDQ1wiLFwiIzMzMDBGRlwiLFwiIzMzMzNDQ1wiLFwiIzMzMzNGRlwiLFwiIzMzNjZDQ1wiLFwiIzMzNjZGRlwiLFwiIzMzOTlDQ1wiLFwiIzMzOTlGRlwiLFwiIzMzQ0MwMFwiLFwiIzMzQ0MzM1wiLFwiIzMzQ0M2NlwiLFwiIzMzQ0M5OVwiLFwiIzMzQ0NDQ1wiLFwiIzMzQ0NGRlwiLFwiIzY2MDBDQ1wiLFwiIzY2MDBGRlwiLFwiIzY2MzNDQ1wiLFwiIzY2MzNGRlwiLFwiIzY2Q0MwMFwiLFwiIzY2Q0MzM1wiLFwiIzk5MDBDQ1wiLFwiIzk5MDBGRlwiLFwiIzk5MzNDQ1wiLFwiIzk5MzNGRlwiLFwiIzk5Q0MwMFwiLFwiIzk5Q0MzM1wiLFwiI0NDMDAwMFwiLFwiI0NDMDAzM1wiLFwiI0NDMDA2NlwiLFwiI0NDMDA5OVwiLFwiI0NDMDBDQ1wiLFwiI0NDMDBGRlwiLFwiI0NDMzMwMFwiLFwiI0NDMzMzM1wiLFwiI0NDMzM2NlwiLFwiI0NDMzM5OVwiLFwiI0NDMzNDQ1wiLFwiI0NDMzNGRlwiLFwiI0NDNjYwMFwiLFwiI0NDNjYzM1wiLFwiI0NDOTkwMFwiLFwiI0NDOTkzM1wiLFwiI0NDQ0MwMFwiLFwiI0NDQ0MzM1wiLFwiI0ZGMDAwMFwiLFwiI0ZGMDAzM1wiLFwiI0ZGMDA2NlwiLFwiI0ZGMDA5OVwiLFwiI0ZGMDBDQ1wiLFwiI0ZGMDBGRlwiLFwiI0ZGMzMwMFwiLFwiI0ZGMzMzM1wiLFwiI0ZGMzM2NlwiLFwiI0ZGMzM5OVwiLFwiI0ZGMzNDQ1wiLFwiI0ZGMzNGRlwiLFwiI0ZGNjYwMFwiLFwiI0ZGNjYzM1wiLFwiI0ZGOTkwMFwiLFwiI0ZGOTkzM1wiLFwiI0ZGQ0MwMFwiLFwiI0ZGQ0MzM1wiXTtmdW5jdGlvbiBxdSgpe3JldHVybiB0eXBlb2Ygd2luZG93PFwidVwiJiZ3aW5kb3cucHJvY2VzcyYmKHdpbmRvdy5wcm9jZXNzLnR5cGU9PT1cInJlbmRlcmVyXCJ8fHdpbmRvdy5wcm9jZXNzLl9fbndqcyk/ITA6dHlwZW9mIG5hdmlnYXRvcjxcInVcIiYmbmF2aWdhdG9yLnVzZXJBZ2VudCYmbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC8oZWRnZXx0cmlkZW50KVxcLyhcXGQrKS8pPyExOnR5cGVvZiBkb2N1bWVudDxcInVcIiYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5XZWJraXRBcHBlYXJhbmNlfHx0eXBlb2Ygd2luZG93PFwidVwiJiZ3aW5kb3cuY29uc29sZSYmKHdpbmRvdy5jb25zb2xlLmZpcmVidWd8fHdpbmRvdy5jb25zb2xlLmV4Y2VwdGlvbiYmd2luZG93LmNvbnNvbGUudGFibGUpfHx0eXBlb2YgbmF2aWdhdG9yPFwidVwiJiZuYXZpZ2F0b3IudXNlckFnZW50JiZuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkubWF0Y2goL2ZpcmVmb3hcXC8oXFxkKykvKSYmcGFyc2VJbnQoUmVnRXhwLiQxLDEwKT49MzF8fHR5cGVvZiBuYXZpZ2F0b3I8XCJ1XCImJm5hdmlnYXRvci51c2VyQWdlbnQmJm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKX1mdW5jdGlvbiBqdShlKXtpZihlWzBdPSh0aGlzLnVzZUNvbG9ycz9cIiVjXCI6XCJcIikrdGhpcy5uYW1lc3BhY2UrKHRoaXMudXNlQ29sb3JzP1wiICVjXCI6XCIgXCIpK2VbMF0rKHRoaXMudXNlQ29sb3JzP1wiJWMgXCI6XCIgXCIpK1wiK1wiK0pyLmV4cG9ydHMuaHVtYW5pemUodGhpcy5kaWZmKSwhdGhpcy51c2VDb2xvcnMpcmV0dXJuO2xldCB0PVwiY29sb3I6IFwiK3RoaXMuY29sb3I7ZS5zcGxpY2UoMSwwLHQsXCJjb2xvcjogaW5oZXJpdFwiKTtsZXQgcj0wLG49MDtlWzBdLnJlcGxhY2UoLyVbYS16QS1aJV0vZyxpPT57aSE9PVwiJSVcIiYmKHIrKyxpPT09XCIlY1wiJiYobj1yKSl9KSxlLnNwbGljZShuLDAsdCl9aGUubG9nPWNvbnNvbGUuZGVidWd8fGNvbnNvbGUubG9nfHwoKCk9Pnt9KTtmdW5jdGlvbiBWdShlKXt0cnl7ZT9oZS5zdG9yYWdlLnNldEl0ZW0oXCJkZWJ1Z1wiLGUpOmhlLnN0b3JhZ2UucmVtb3ZlSXRlbShcImRlYnVnXCIpfWNhdGNoe319ZnVuY3Rpb24gQnUoKXtsZXQgZTt0cnl7ZT1oZS5zdG9yYWdlLmdldEl0ZW0oXCJkZWJ1Z1wiKX1jYXRjaHt9cmV0dXJuIWUmJnR5cGVvZiBwcm9jZXNzPFwidVwiJiZcImVudlwiaW4gcHJvY2VzcyYmKGU9cHJvY2Vzcy5lbnYuREVCVUcpLGV9ZnVuY3Rpb24gVXUoKXt0cnl7cmV0dXJuIGxvY2FsU3RvcmFnZX1jYXRjaHt9fUpyLmV4cG9ydHM9ZGkoKShoZSk7dmFye2Zvcm1hdHRlcnM6S3V9PUpyLmV4cG9ydHM7S3Uuaj1mdW5jdGlvbihlKXt0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGUpfWNhdGNoKHQpe3JldHVyblwiW1VuZXhwZWN0ZWRKU09OUGFyc2VFcnJvcl06IFwiK3QubWVzc2FnZX19fSk7dmFyIG1pPVEoKHpnLG5zKT0+e1widXNlIHN0cmljdFwiO25zLmV4cG9ydHM9KGUsdD1wcm9jZXNzLmFyZ3YpPT57bGV0IHI9ZS5zdGFydHNXaXRoKFwiLVwiKT9cIlwiOmUubGVuZ3RoPT09MT9cIi1cIjpcIi0tXCIsbj10LmluZGV4T2YocitlKSxpPXQuaW5kZXhPZihcIi0tXCIpO3JldHVybiBuIT09LTEmJihpPT09LTF8fG48aSl9fSk7dmFyIHlpPVEoKFlnLG9zKT0+e1widXNlIHN0cmljdFwiO3ZhciBRdT1yZXF1aXJlKFwib3NcIiksaXM9cmVxdWlyZShcInR0eVwiKSxQZT1taSgpLHtlbnY6Sn09cHJvY2VzcyxIZTtQZShcIm5vLWNvbG9yXCIpfHxQZShcIm5vLWNvbG9yc1wiKXx8UGUoXCJjb2xvcj1mYWxzZVwiKXx8UGUoXCJjb2xvcj1uZXZlclwiKT9IZT0wOihQZShcImNvbG9yXCIpfHxQZShcImNvbG9yc1wiKXx8UGUoXCJjb2xvcj10cnVlXCIpfHxQZShcImNvbG9yPWFsd2F5c1wiKSkmJihIZT0xKTtcIkZPUkNFX0NPTE9SXCJpbiBKJiYoSi5GT1JDRV9DT0xPUj09PVwidHJ1ZVwiP0hlPTE6Si5GT1JDRV9DT0xPUj09PVwiZmFsc2VcIj9IZT0wOkhlPUouRk9SQ0VfQ09MT1IubGVuZ3RoPT09MD8xOk1hdGgubWluKHBhcnNlSW50KEouRk9SQ0VfQ09MT1IsMTApLDMpKTtmdW5jdGlvbiBmaShlKXtyZXR1cm4gZT09PTA/ITE6e2xldmVsOmUsaGFzQmFzaWM6ITAsaGFzMjU2OmU+PTIsaGFzMTZtOmU+PTN9fWZ1bmN0aW9uIGdpKGUsdCl7aWYoSGU9PT0wKXJldHVybiAwO2lmKFBlKFwiY29sb3I9MTZtXCIpfHxQZShcImNvbG9yPWZ1bGxcIil8fFBlKFwiY29sb3I9dHJ1ZWNvbG9yXCIpKXJldHVybiAzO2lmKFBlKFwiY29sb3I9MjU2XCIpKXJldHVybiAyO2lmKGUmJiF0JiZIZT09PXZvaWQgMClyZXR1cm4gMDtsZXQgcj1IZXx8MDtpZihKLlRFUk09PT1cImR1bWJcIilyZXR1cm4gcjtpZihwcm9jZXNzLnBsYXRmb3JtPT09XCJ3aW4zMlwiKXtsZXQgbj1RdS5yZWxlYXNlKCkuc3BsaXQoXCIuXCIpO3JldHVybiBOdW1iZXIoblswXSk+PTEwJiZOdW1iZXIoblsyXSk+PTEwNTg2P051bWJlcihuWzJdKT49MTQ5MzE/MzoyOjF9aWYoXCJDSVwiaW4gSilyZXR1cm5bXCJUUkFWSVNcIixcIkNJUkNMRUNJXCIsXCJBUFBWRVlPUlwiLFwiR0lUTEFCX0NJXCIsXCJHSVRIVUJfQUNUSU9OU1wiLFwiQlVJTERLSVRFXCJdLnNvbWUobj0+biBpbiBKKXx8Si5DSV9OQU1FPT09XCJjb2Rlc2hpcFwiPzE6cjtpZihcIlRFQU1DSVRZX1ZFUlNJT05cImluIEopcmV0dXJuL14oOVxcLigwKlsxLTldXFxkKilcXC58XFxkezIsfVxcLikvLnRlc3QoSi5URUFNQ0lUWV9WRVJTSU9OKT8xOjA7aWYoSi5DT0xPUlRFUk09PT1cInRydWVjb2xvclwiKXJldHVybiAzO2lmKFwiVEVSTV9QUk9HUkFNXCJpbiBKKXtsZXQgbj1wYXJzZUludCgoSi5URVJNX1BST0dSQU1fVkVSU0lPTnx8XCJcIikuc3BsaXQoXCIuXCIpWzBdLDEwKTtzd2l0Y2goSi5URVJNX1BST0dSQU0pe2Nhc2VcImlUZXJtLmFwcFwiOnJldHVybiBuPj0zPzM6MjtjYXNlXCJBcHBsZV9UZXJtaW5hbFwiOnJldHVybiAyfX1yZXR1cm4vLTI1Nihjb2xvcik/JC9pLnRlc3QoSi5URVJNKT8yOi9ec2NyZWVufF54dGVybXxednQxMDB8XnZ0MjIwfF5yeHZ0fGNvbG9yfGFuc2l8Y3lnd2lufGxpbnV4L2kudGVzdChKLlRFUk0pfHxcIkNPTE9SVEVSTVwiaW4gSj8xOnJ9ZnVuY3Rpb24gR3UoZSl7bGV0IHQ9Z2koZSxlJiZlLmlzVFRZKTtyZXR1cm4gZmkodCl9b3MuZXhwb3J0cz17c3VwcG9ydHNDb2xvcjpHdSxzdGRvdXQ6ZmkoZ2koITAsaXMuaXNhdHR5KDEpKSksc3RkZXJyOmZpKGdpKCEwLGlzLmlzYXR0eSgyKSkpfX0pO3ZhciBhcz1RKCh0ZSxXcik9PntcInVzZSBzdHJpY3RcIjt2YXIgSnU9cmVxdWlyZShcInR0eVwiKSxIcj1yZXF1aXJlKFwidXRpbFwiKTt0ZS5pbml0PWVjO3RlLmxvZz1ZdTt0ZS5mb3JtYXRBcmdzPVd1O3RlLnNhdmU9WnU7dGUubG9hZD1YdTt0ZS51c2VDb2xvcnM9SHU7dGUuZGVzdHJveT1Ici5kZXByZWNhdGUoKCk9Pnt9LFwiSW5zdGFuY2UgbWV0aG9kIGBkZWJ1Zy5kZXN0cm95KClgIGlzIGRlcHJlY2F0ZWQgYW5kIG5vIGxvbmdlciBkb2VzIGFueXRoaW5nLiBJdCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvbiBvZiBgZGVidWdgLlwiKTt0ZS5jb2xvcnM9WzYsMiwzLDQsNSwxXTt0cnl7bGV0IGU9eWkoKTtlJiYoZS5zdGRlcnJ8fGUpLmxldmVsPj0yJiYodGUuY29sb3JzPVsyMCwyMSwyNiwyNywzMiwzMywzOCwzOSw0MCw0MSw0Miw0Myw0NCw0NSw1Niw1Nyw2Miw2Myw2OCw2OSw3NCw3NSw3Niw3Nyw3OCw3OSw4MCw4MSw5Miw5Myw5OCw5OSwxMTIsMTEzLDEyOCwxMjksMTM0LDEzNSwxNDgsMTQ5LDE2MCwxNjEsMTYyLDE2MywxNjQsMTY1LDE2NiwxNjcsMTY4LDE2OSwxNzAsMTcxLDE3MiwxNzMsMTc4LDE3OSwxODQsMTg1LDE5NiwxOTcsMTk4LDE5OSwyMDAsMjAxLDIwMiwyMDMsMjA0LDIwNSwyMDYsMjA3LDIwOCwyMDksMjE0LDIxNSwyMjAsMjIxXSl9Y2F0Y2h7fXRlLmluc3BlY3RPcHRzPU9iamVjdC5rZXlzKHByb2Nlc3MuZW52KS5maWx0ZXIoZT0+L15kZWJ1Z18vaS50ZXN0KGUpKS5yZWR1Y2UoKGUsdCk9PntsZXQgcj10LnN1YnN0cmluZyg2KS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL18oW2Etel0pL2csKGksbyk9Pm8udG9VcHBlckNhc2UoKSksbj1wcm9jZXNzLmVudlt0XTtyZXR1cm4vXih5ZXN8b258dHJ1ZXxlbmFibGVkKSQvaS50ZXN0KG4pP249ITA6L14obm98b2ZmfGZhbHNlfGRpc2FibGVkKSQvaS50ZXN0KG4pP249ITE6bj09PVwibnVsbFwiP249bnVsbDpuPU51bWJlcihuKSxlW3JdPW4sZX0se30pO2Z1bmN0aW9uIEh1KCl7cmV0dXJuXCJjb2xvcnNcImluIHRlLmluc3BlY3RPcHRzPyEhdGUuaW5zcGVjdE9wdHMuY29sb3JzOkp1LmlzYXR0eShwcm9jZXNzLnN0ZGVyci5mZCl9ZnVuY3Rpb24gV3UoZSl7bGV0e25hbWVzcGFjZTp0LHVzZUNvbG9yczpyfT10aGlzO2lmKHIpe2xldCBuPXRoaXMuY29sb3IsaT1cIlxceDFCWzNcIisobjw4P246XCI4OzU7XCIrbiksbz1gICAke2l9OzFtJHt0fSBcXHgxQlswbWA7ZVswXT1vK2VbMF0uc3BsaXQoYFxuYCkuam9pbihgXG5gK28pLGUucHVzaChpK1wibStcIitXci5leHBvcnRzLmh1bWFuaXplKHRoaXMuZGlmZikrXCJcXHgxQlswbVwiKX1lbHNlIGVbMF09enUoKSt0K1wiIFwiK2VbMF19ZnVuY3Rpb24genUoKXtyZXR1cm4gdGUuaW5zcGVjdE9wdHMuaGlkZURhdGU/XCJcIjpuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkrXCIgXCJ9ZnVuY3Rpb24gWXUoLi4uZSl7cmV0dXJuIHByb2Nlc3Muc3RkZXJyLndyaXRlKEhyLmZvcm1hdCguLi5lKStgXG5gKX1mdW5jdGlvbiBadShlKXtlP3Byb2Nlc3MuZW52LkRFQlVHPWU6ZGVsZXRlIHByb2Nlc3MuZW52LkRFQlVHfWZ1bmN0aW9uIFh1KCl7cmV0dXJuIHByb2Nlc3MuZW52LkRFQlVHfWZ1bmN0aW9uIGVjKGUpe2UuaW5zcGVjdE9wdHM9e307bGV0IHQ9T2JqZWN0LmtleXModGUuaW5zcGVjdE9wdHMpO2ZvcihsZXQgcj0wO3I8dC5sZW5ndGg7cisrKWUuaW5zcGVjdE9wdHNbdFtyXV09dGUuaW5zcGVjdE9wdHNbdFtyXV19V3IuZXhwb3J0cz1kaSgpKHRlKTt2YXJ7Zm9ybWF0dGVyczpzc309V3IuZXhwb3J0cztzcy5vPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmluc3BlY3RPcHRzLmNvbG9ycz10aGlzLnVzZUNvbG9ycyxIci5pbnNwZWN0KGUsdGhpcy5pbnNwZWN0T3B0cykuc3BsaXQoYFxuYCkubWFwKHQ9PnQudHJpbSgpKS5qb2luKFwiIFwiKX07c3MuTz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pbnNwZWN0T3B0cy5jb2xvcnM9dGhpcy51c2VDb2xvcnMsSHIuaW5zcGVjdChlLHRoaXMuaW5zcGVjdE9wdHMpfX0pO3ZhciBscz1RKChaZyxoaSk9PntcInVzZSBzdHJpY3RcIjt0eXBlb2YgcHJvY2Vzcz5cInVcInx8cHJvY2Vzcy50eXBlPT09XCJyZW5kZXJlclwifHxwcm9jZXNzLmJyb3dzZXI9PT0hMHx8cHJvY2Vzcy5fX253anM/aGkuZXhwb3J0cz1ycygpOmhpLmV4cG9ydHM9YXMoKX0pO3ZhciBicz1RKChGeSxfaSk9PntcInVzZSBzdHJpY3RcIjt2YXIgTT1faS5leHBvcnRzO19pLmV4cG9ydHMuZGVmYXVsdD1NO3ZhciBEPVwiXFx4MUJbXCIsZXI9XCJcXHgxQl1cIixJdD1cIlxceDA3XCIscm49XCI7XCIsaHM9cHJvY2Vzcy5lbnYuVEVSTV9QUk9HUkFNPT09XCJBcHBsZV9UZXJtaW5hbFwiO00uY3Vyc29yVG89KGUsdCk9PntpZih0eXBlb2YgZSE9XCJudW1iZXJcIil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIGB4YCBhcmd1bWVudCBpcyByZXF1aXJlZFwiKTtyZXR1cm4gdHlwZW9mIHQhPVwibnVtYmVyXCI/RCsoZSsxKStcIkdcIjpEKyh0KzEpK1wiO1wiKyhlKzEpK1wiSFwifTtNLmN1cnNvck1vdmU9KGUsdCk9PntpZih0eXBlb2YgZSE9XCJudW1iZXJcIil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIGB4YCBhcmd1bWVudCBpcyByZXF1aXJlZFwiKTtsZXQgcj1cIlwiO3JldHVybiBlPDA/cis9RCstZStcIkRcIjplPjAmJihyKz1EK2UrXCJDXCIpLHQ8MD9yKz1EKy10K1wiQVwiOnQ+MCYmKHIrPUQrdCtcIkJcIikscn07TS5jdXJzb3JVcD0oZT0xKT0+RCtlK1wiQVwiO00uY3Vyc29yRG93bj0oZT0xKT0+RCtlK1wiQlwiO00uY3Vyc29yRm9yd2FyZD0oZT0xKT0+RCtlK1wiQ1wiO00uY3Vyc29yQmFja3dhcmQ9KGU9MSk9PkQrZStcIkRcIjtNLmN1cnNvckxlZnQ9RCtcIkdcIjtNLmN1cnNvclNhdmVQb3NpdGlvbj1ocz9cIlxceDFCN1wiOkQrXCJzXCI7TS5jdXJzb3JSZXN0b3JlUG9zaXRpb249aHM/XCJcXHgxQjhcIjpEK1widVwiO00uY3Vyc29yR2V0UG9zaXRpb249RCtcIjZuXCI7TS5jdXJzb3JOZXh0TGluZT1EK1wiRVwiO00uY3Vyc29yUHJldkxpbmU9RCtcIkZcIjtNLmN1cnNvckhpZGU9RCtcIj8yNWxcIjtNLmN1cnNvclNob3c9RCtcIj8yNWhcIjtNLmVyYXNlTGluZXM9ZT0+e2xldCB0PVwiXCI7Zm9yKGxldCByPTA7cjxlO3IrKyl0Kz1NLmVyYXNlTGluZSsocjxlLTE/TS5jdXJzb3JVcCgpOlwiXCIpO3JldHVybiBlJiYodCs9TS5jdXJzb3JMZWZ0KSx0fTtNLmVyYXNlRW5kTGluZT1EK1wiS1wiO00uZXJhc2VTdGFydExpbmU9RCtcIjFLXCI7TS5lcmFzZUxpbmU9RCtcIjJLXCI7TS5lcmFzZURvd249RCtcIkpcIjtNLmVyYXNlVXA9RCtcIjFKXCI7TS5lcmFzZVNjcmVlbj1EK1wiMkpcIjtNLnNjcm9sbFVwPUQrXCJTXCI7TS5zY3JvbGxEb3duPUQrXCJUXCI7TS5jbGVhclNjcmVlbj1cIlxceDFCY1wiO00uY2xlYXJUZXJtaW5hbD1wcm9jZXNzLnBsYXRmb3JtPT09XCJ3aW4zMlwiP2Ake00uZXJhc2VTY3JlZW59JHtEfTBmYDpgJHtNLmVyYXNlU2NyZWVufSR7RH0zSiR7RH1IYDtNLmJlZXA9SXQ7TS5saW5rPShlLHQpPT5bZXIsXCI4XCIscm4scm4sdCxJdCxlLGVyLFwiOFwiLHJuLHJuLEl0XS5qb2luKFwiXCIpO00uaW1hZ2U9KGUsdD17fSk9PntsZXQgcj1gJHtlcn0xMzM3O0ZpbGU9aW5saW5lPTFgO3JldHVybiB0LndpZHRoJiYocis9YDt3aWR0aD0ke3Qud2lkdGh9YCksdC5oZWlnaHQmJihyKz1gO2hlaWdodD0ke3QuaGVpZ2h0fWApLHQucHJlc2VydmVBc3BlY3RSYXRpbz09PSExJiYocis9XCI7cHJlc2VydmVBc3BlY3RSYXRpbz0wXCIpLHIrXCI6XCIrZS50b1N0cmluZyhcImJhc2U2NFwiKStJdH07TS5pVGVybT17c2V0Q3dkOihlPXByb2Nlc3MuY3dkKCkpPT5gJHtlcn01MDtDdXJyZW50RGlyPSR7ZX0ke0l0fWAsYW5ub3RhdGlvbjooZSx0PXt9KT0+e2xldCByPWAke2VyfTEzMzc7YCxuPXR5cGVvZiB0Lng8XCJ1XCIsaT10eXBlb2YgdC55PFwidVwiO2lmKChufHxpKSYmIShuJiZpJiZ0eXBlb2YgdC5sZW5ndGg8XCJ1XCIpKXRocm93IG5ldyBFcnJvcihcImB4YCwgYHlgIGFuZCBgbGVuZ3RoYCBtdXN0IGJlIGRlZmluZWQgd2hlbiBgeGAgb3IgYHlgIGlzIGRlZmluZWRcIik7cmV0dXJuIGU9ZS5yZXBsYWNlKC9cXHwvZyxcIlwiKSxyKz10LmlzSGlkZGVuP1wiQWRkSGlkZGVuQW5ub3RhdGlvbj1cIjpcIkFkZEFubm90YXRpb249XCIsdC5sZW5ndGg+MD9yKz0obj9bZSx0Lmxlbmd0aCx0LngsdC55XTpbdC5sZW5ndGgsZV0pLmpvaW4oXCJ8XCIpOnIrPWUscitJdH19fSk7dmFyIEVzPVEoKE95LHdzKT0+e1widXNlIHN0cmljdFwiO3ZhciBhYz15aSgpLGt0PW1pKCk7ZnVuY3Rpb24geHMoZSl7aWYoL15cXGR7Myw0fSQvLnRlc3QoZSkpe2xldCByPS8oXFxkezEsMn0pKFxcZHsyfSkvLmV4ZWMoZSk7cmV0dXJue21ham9yOjAsbWlub3I6cGFyc2VJbnQoclsxXSwxMCkscGF0Y2g6cGFyc2VJbnQoclsyXSwxMCl9fWxldCB0PShlfHxcIlwiKS5zcGxpdChcIi5cIikubWFwKHI9PnBhcnNlSW50KHIsMTApKTtyZXR1cm57bWFqb3I6dFswXSxtaW5vcjp0WzFdLHBhdGNoOnRbMl19fWZ1bmN0aW9uIFRpKGUpe2xldHtlbnY6dH09cHJvY2VzcztpZihcIkZPUkNFX0hZUEVSTElOS1wiaW4gdClyZXR1cm4hKHQuRk9SQ0VfSFlQRVJMSU5LLmxlbmd0aD4wJiZwYXJzZUludCh0LkZPUkNFX0hZUEVSTElOSywxMCk9PT0wKTtpZihrdChcIm5vLWh5cGVybGlua1wiKXx8a3QoXCJuby1oeXBlcmxpbmtzXCIpfHxrdChcImh5cGVybGluaz1mYWxzZVwiKXx8a3QoXCJoeXBlcmxpbms9bmV2ZXJcIikpcmV0dXJuITE7aWYoa3QoXCJoeXBlcmxpbms9dHJ1ZVwiKXx8a3QoXCJoeXBlcmxpbms9YWx3YXlzXCIpfHxcIk5FVExJRllcImluIHQpcmV0dXJuITA7aWYoIWFjLnN1cHBvcnRzQ29sb3IoZSl8fGUmJiFlLmlzVFRZfHxwcm9jZXNzLnBsYXRmb3JtPT09XCJ3aW4zMlwifHxcIkNJXCJpbiB0fHxcIlRFQU1DSVRZX1ZFUlNJT05cImluIHQpcmV0dXJuITE7aWYoXCJURVJNX1BST0dSQU1cImluIHQpe2xldCByPXhzKHQuVEVSTV9QUk9HUkFNX1ZFUlNJT04pO3N3aXRjaCh0LlRFUk1fUFJPR1JBTSl7Y2FzZVwiaVRlcm0uYXBwXCI6cmV0dXJuIHIubWFqb3I9PT0zP3IubWlub3I+PTE6ci5tYWpvcj4zO2Nhc2VcIldlelRlcm1cIjpyZXR1cm4gci5tYWpvcj49MjAyMDA2MjA7Y2FzZVwidnNjb2RlXCI6cmV0dXJuIHIubWFqb3I+MXx8ci5tYWpvcj09PTEmJnIubWlub3I+PTcyfX1pZihcIlZURV9WRVJTSU9OXCJpbiB0KXtpZih0LlZURV9WRVJTSU9OPT09XCIwLjUwLjBcIilyZXR1cm4hMTtsZXQgcj14cyh0LlZURV9WRVJTSU9OKTtyZXR1cm4gci5tYWpvcj4wfHxyLm1pbm9yPj01MH1yZXR1cm4hMX13cy5leHBvcnRzPXtzdXBwb3J0c0h5cGVybGluazpUaSxzdGRvdXQ6VGkocHJvY2Vzcy5zdGRvdXQpLHN0ZGVycjpUaShwcm9jZXNzLnN0ZGVycil9fSk7dmFyIHZzPVEoKER5LHRyKT0+e1widXNlIHN0cmljdFwiO3ZhciBsYz1icygpLENpPUVzKCksUHM9KGUsdCx7dGFyZ2V0OnI9XCJzdGRvdXRcIiwuLi5ufT17fSk9PkNpW3JdP2xjLmxpbmsoZSx0KTpuLmZhbGxiYWNrPT09ITE/ZTp0eXBlb2Ygbi5mYWxsYmFjaz09XCJmdW5jdGlvblwiP24uZmFsbGJhY2soZSx0KTpgJHtlfSAoXFx1MjAwQiR7dH1cXHUyMDBCKWA7dHIuZXhwb3J0cz0oZSx0LHI9e30pPT5QcyhlLHQscik7dHIuZXhwb3J0cy5zdGRlcnI9KGUsdCxyPXt9KT0+UHMoZSx0LHt0YXJnZXQ6XCJzdGRlcnJcIiwuLi5yfSk7dHIuZXhwb3J0cy5pc1N1cHBvcnRlZD1DaS5zdGRvdXQ7dHIuZXhwb3J0cy5zdGRlcnIuaXNTdXBwb3J0ZWQ9Q2kuc3RkZXJyfSk7dmFyIEZzPVEoKFh5LHZjKT0+e3ZjLmV4cG9ydHM9e25hbWU6XCJkb3RlbnZcIix2ZXJzaW9uOlwiMTYuMC4zXCIsZGVzY3JpcHRpb246XCJMb2FkcyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZnJvbSAuZW52IGZpbGVcIixtYWluOlwibGliL21haW4uanNcIix0eXBlczpcImxpYi9tYWluLmQudHNcIixleHBvcnRzOntcIi5cIjp7cmVxdWlyZTpcIi4vbGliL21haW4uanNcIix0eXBlczpcIi4vbGliL21haW4uZC50c1wiLGRlZmF1bHQ6XCIuL2xpYi9tYWluLmpzXCJ9LFwiLi9jb25maWdcIjpcIi4vY29uZmlnLmpzXCIsXCIuL2NvbmZpZy5qc1wiOlwiLi9jb25maWcuanNcIixcIi4vbGliL2Vudi1vcHRpb25zXCI6XCIuL2xpYi9lbnYtb3B0aW9ucy5qc1wiLFwiLi9saWIvZW52LW9wdGlvbnMuanNcIjpcIi4vbGliL2Vudi1vcHRpb25zLmpzXCIsXCIuL2xpYi9jbGktb3B0aW9uc1wiOlwiLi9saWIvY2xpLW9wdGlvbnMuanNcIixcIi4vbGliL2NsaS1vcHRpb25zLmpzXCI6XCIuL2xpYi9jbGktb3B0aW9ucy5qc1wiLFwiLi9wYWNrYWdlLmpzb25cIjpcIi4vcGFja2FnZS5qc29uXCJ9LHNjcmlwdHM6e1wiZHRzLWNoZWNrXCI6XCJ0c2MgLS1wcm9qZWN0IHRlc3RzL3R5cGVzL3RzY29uZmlnLmpzb25cIixsaW50Olwic3RhbmRhcmRcIixcImxpbnQtcmVhZG1lXCI6XCJzdGFuZGFyZC1tYXJrZG93blwiLHByZXRlc3Q6XCJucG0gcnVuIGxpbnQgJiYgbnBtIHJ1biBkdHMtY2hlY2tcIix0ZXN0OlwidGFwIHRlc3RzLyouanMgLS0xMDAgLVJzcGVjXCIscHJlcmVsZWFzZTpcIm5wbSB0ZXN0XCIscmVsZWFzZTpcInN0YW5kYXJkLXZlcnNpb25cIn0scmVwb3NpdG9yeTp7dHlwZTpcImdpdFwiLHVybDpcImdpdDovL2dpdGh1Yi5jb20vbW90ZG90bGEvZG90ZW52LmdpdFwifSxrZXl3b3JkczpbXCJkb3RlbnZcIixcImVudlwiLFwiLmVudlwiLFwiZW52aXJvbm1lbnRcIixcInZhcmlhYmxlc1wiLFwiY29uZmlnXCIsXCJzZXR0aW5nc1wiXSxyZWFkbWVGaWxlbmFtZTpcIlJFQURNRS5tZFwiLGxpY2Vuc2U6XCJCU0QtMi1DbGF1c2VcIixkZXZEZXBlbmRlbmNpZXM6e1wiQHR5cGVzL25vZGVcIjpcIl4xNy4wLjlcIixkZWNhY2hlOlwiXjQuNi4xXCIsZHRzbGludDpcIl4zLjcuMFwiLHNpbm9uOlwiXjEyLjAuMVwiLHN0YW5kYXJkOlwiXjE2LjAuNFwiLFwic3RhbmRhcmQtbWFya2Rvd25cIjpcIl43LjEuMFwiLFwic3RhbmRhcmQtdmVyc2lvblwiOlwiXjkuMy4yXCIsdGFwOlwiXjE1LjEuNlwiLHRhcjpcIl42LjEuMTFcIix0eXBlc2NyaXB0OlwiXjQuNS40XCJ9LGVuZ2luZXM6e25vZGU6XCI+PTEyXCJ9fX0pO3ZhciBEcz1RKChlaCxsbik9PntcInVzZSBzdHJpY3RcIjt2YXIgX2M9cmVxdWlyZShcImZzXCIpLE9zPXJlcXVpcmUoXCJwYXRoXCIpLFRjPXJlcXVpcmUoXCJvc1wiKSxDYz1GcygpLEFjPUNjLnZlcnNpb24sUmM9Lyg/Ol58XilcXHMqKD86ZXhwb3J0XFxzKyk/KFtcXHcuLV0rKSg/Olxccyo9XFxzKj98Olxccys/KShcXHMqJyg/OlxcXFwnfFteJ10pKid8XFxzKlwiKD86XFxcXFwifFteXCJdKSpcInxcXHMqYCg/OlxcXFxgfFteYF0pKmB8W14jXFxyXFxuXSspP1xccyooPzojLiopPyg/OiR8JCkvbWc7ZnVuY3Rpb24gTWMoZSl7bGV0IHQ9e30scj1lLnRvU3RyaW5nKCk7cj1yLnJlcGxhY2UoL1xcclxcbj8vbWcsYFxuYCk7bGV0IG47Zm9yKDsobj1SYy5leGVjKHIpKSE9bnVsbDspe2xldCBpPW5bMV0sbz1uWzJdfHxcIlwiO289by50cmltKCk7bGV0IHM9b1swXTtvPW8ucmVwbGFjZSgvXihbJ1wiYF0pKFtcXHNcXFNdKilcXDEkL21nLFwiJDJcIikscz09PSdcIicmJihvPW8ucmVwbGFjZSgvXFxcXG4vZyxgXG5gKSxvPW8ucmVwbGFjZSgvXFxcXHIvZyxcIlxcclwiKSksdFtpXT1vfXJldHVybiB0fWZ1bmN0aW9uIFNpKGUpe2NvbnNvbGUubG9nKGBbZG90ZW52QCR7QWN9XVtERUJVR10gJHtlfWApfWZ1bmN0aW9uIFNjKGUpe3JldHVybiBlWzBdPT09XCJ+XCI/T3Muam9pbihUYy5ob21lZGlyKCksZS5zbGljZSgxKSk6ZX1mdW5jdGlvbiBJYyhlKXtsZXQgdD1Pcy5yZXNvbHZlKHByb2Nlc3MuY3dkKCksXCIuZW52XCIpLHI9XCJ1dGY4XCIsbj0hIShlJiZlLmRlYnVnKSxpPSEhKGUmJmUub3ZlcnJpZGUpO2UmJihlLnBhdGghPW51bGwmJih0PVNjKGUucGF0aCkpLGUuZW5jb2RpbmchPW51bGwmJihyPWUuZW5jb2RpbmcpKTt0cnl7bGV0IG89YW4ucGFyc2UoX2MucmVhZEZpbGVTeW5jKHQse2VuY29kaW5nOnJ9KSk7cmV0dXJuIE9iamVjdC5rZXlzKG8pLmZvckVhY2goZnVuY3Rpb24ocyl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHByb2Nlc3MuZW52LHMpPyhpPT09ITAmJihwcm9jZXNzLmVudltzXT1vW3NdKSxuJiZTaShpPT09ITA/YFwiJHtzfVwiIGlzIGFscmVhZHkgZGVmaW5lZCBpbiBcXGBwcm9jZXNzLmVudlxcYCBhbmQgV0FTIG92ZXJ3cml0dGVuYDpgXCIke3N9XCIgaXMgYWxyZWFkeSBkZWZpbmVkIGluIFxcYHByb2Nlc3MuZW52XFxgIGFuZCB3YXMgTk9UIG92ZXJ3cml0dGVuYCkpOnByb2Nlc3MuZW52W3NdPW9bc119KSx7cGFyc2VkOm99fWNhdGNoKG8pe3JldHVybiBuJiZTaShgRmFpbGVkIHRvIGxvYWQgJHt0fSAke28ubWVzc2FnZX1gKSx7ZXJyb3I6b319fXZhciBhbj17Y29uZmlnOkljLHBhcnNlOk1jfTtsbi5leHBvcnRzLmNvbmZpZz1hbi5jb25maWc7bG4uZXhwb3J0cy5wYXJzZT1hbi5wYXJzZTtsbi5leHBvcnRzPWFufSk7dmFyIFZzPVEoKGFoLGpzKT0+e1widXNlIHN0cmljdFwiO2pzLmV4cG9ydHM9ZT0+e2xldCB0PWUubWF0Y2goL15bIFxcdF0qKD89XFxTKS9nbSk7cmV0dXJuIHQ/dC5yZWR1Y2UoKHIsbik9Pk1hdGgubWluKHIsbi5sZW5ndGgpLDEvMCk6MH19KTt2YXIgVXM9USgobGgsQnMpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIERjPVZzKCk7QnMuZXhwb3J0cz1lPT57bGV0IHQ9RGMoZSk7aWYodD09PTApcmV0dXJuIGU7bGV0IHI9bmV3IFJlZ0V4cChgXlsgXFxcXHRdeyR7dH19YCxcImdtXCIpO3JldHVybiBlLnJlcGxhY2UocixcIlwiKX19KTt2YXIgS3M9USgodWgsTmMpPT57TmMuZXhwb3J0cz17bmFtZTpcIkBwcmlzbWEvZW5naW5lcy12ZXJzaW9uXCIsdmVyc2lvbjpcIjUuNy4xLTEuMGNhNWNjYmNmYTZiZGM4MWMwMDNjZjU0OWFiZTQyNjlmNTljNDFlNVwiLG1haW46XCJpbmRleC5qc1wiLHR5cGVzOlwiaW5kZXguZC50c1wiLGxpY2Vuc2U6XCJBcGFjaGUtMi4wXCIsYXV0aG9yOlwiVGltIFN1Y2hhbmVrIDxzdWNoYW5la0BwcmlzbWEuaW8+XCIscHJpc21hOntlbmdpbmVzVmVyc2lvbjpcIjBjYTVjY2JjZmE2YmRjODFjMDAzY2Y1NDlhYmU0MjY5ZjU5YzQxZTVcIn0scmVwb3NpdG9yeTp7dHlwZTpcImdpdFwiLHVybDpcImh0dHBzOi8vZ2l0aHViLmNvbS9wcmlzbWEvZW5naW5lcy13cmFwcGVyLmdpdFwiLGRpcmVjdG9yeTpcInBhY2thZ2VzL2VuZ2luZXMtdmVyc2lvblwifSxkZXZEZXBlbmRlbmNpZXM6e1wiQHR5cGVzL25vZGVcIjpcIjE4LjE5LjNcIix0eXBlc2NyaXB0OlwiNC45LjVcIn0sZmlsZXM6W1wiaW5kZXguanNcIixcImluZGV4LmQudHNcIl0sc2NyaXB0czp7YnVpbGQ6XCJ0c2MgLWRcIn19fSk7dmFyIEZpPVEoY249PntcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoY24sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7Y24uZW5naW5lc1ZlcnNpb249dm9pZCAwO2NuLmVuZ2luZXNWZXJzaW9uPUtzKCkucHJpc21hLmVuZ2luZXNWZXJzaW9ufSk7dmFyICRpPVEoKE1oLEpzKT0+e1widXNlIHN0cmljdFwiO0pzLmV4cG9ydHM9KGUsdD0xLHIpPT57aWYocj17aW5kZW50OlwiIFwiLGluY2x1ZGVFbXB0eUxpbmVzOiExLC4uLnJ9LHR5cGVvZiBlIT1cInN0cmluZ1wiKXRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIFxcYGlucHV0XFxgIHRvIGJlIGEgXFxgc3RyaW5nXFxgLCBnb3QgXFxgJHt0eXBlb2YgZX1cXGBgKTtpZih0eXBlb2YgdCE9XCJudW1iZXJcIil0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBcXGBjb3VudFxcYCB0byBiZSBhIFxcYG51bWJlclxcYCwgZ290IFxcYCR7dHlwZW9mIHR9XFxgYCk7aWYodHlwZW9mIHIuaW5kZW50IT1cInN0cmluZ1wiKXRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIFxcYG9wdGlvbnMuaW5kZW50XFxgIHRvIGJlIGEgXFxgc3RyaW5nXFxgLCBnb3QgXFxgJHt0eXBlb2Ygci5pbmRlbnR9XFxgYCk7aWYodD09PTApcmV0dXJuIGU7bGV0IG49ci5pbmNsdWRlRW1wdHlMaW5lcz8vXi9nbTovXig/IVxccyokKS9nbTtyZXR1cm4gZS5yZXBsYWNlKG4sci5pbmRlbnQucmVwZWF0KHQpKX19KTt2YXIgWXM9USgoa2gsenMpPT57XCJ1c2Ugc3RyaWN0XCI7enMuZXhwb3J0cz0oe29ubHlGaXJzdDplPSExfT17fSk9PntsZXQgdD1bXCJbXFxcXHUwMDFCXFxcXHUwMDlCXVtbXFxcXF0oKSM7P10qKD86KD86KD86KD86O1stYS16QS1aXFxcXGRcXFxcLyMmLjo9PyVAfl9dKykqfFthLXpBLVpcXFxcZF0rKD86O1stYS16QS1aXFxcXGRcXFxcLyMmLjo9PyVAfl9dKikqKT9cXFxcdTAwMDcpXCIsXCIoPzooPzpcXFxcZHsxLDR9KD86O1xcXFxkezAsNH0pKik/W1xcXFxkQS1QUi1UWmNmLW50cXJ5PT48fl0pKVwiXS5qb2luKFwifFwiKTtyZXR1cm4gbmV3IFJlZ0V4cCh0LGU/dm9pZCAwOlwiZ1wiKX19KTt2YXIgQmk9USgoRmgsWnMpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIEdjPVlzKCk7WnMuZXhwb3J0cz1lPT50eXBlb2YgZT09XCJzdHJpbmdcIj9lLnJlcGxhY2UoR2MoKSxcIlwiKTplfSk7dmFyIFhzPVEoKE5oLGRuKT0+e1widXNlIHN0cmljdFwiO2RuLmV4cG9ydHM9KGU9e30pPT57bGV0IHQ7aWYoZS5yZXBvVXJsKXQ9ZS5yZXBvVXJsO2Vsc2UgaWYoZS51c2VyJiZlLnJlcG8pdD1gaHR0cHM6Ly9naXRodWIuY29tLyR7ZS51c2VyfS8ke2UucmVwb31gO2Vsc2UgdGhyb3cgbmV3IEVycm9yKFwiWW91IG5lZWQgdG8gc3BlY2lmeSBlaXRoZXIgdGhlIGByZXBvVXJsYCBvcHRpb24gb3IgYm90aCB0aGUgYHVzZXJgIGFuZCBgcmVwb2Agb3B0aW9uc1wiKTtsZXQgcj1uZXcgVVJMKGAke3R9L2lzc3Vlcy9uZXdgKSxuPVtcImJvZHlcIixcInRpdGxlXCIsXCJsYWJlbHNcIixcInRlbXBsYXRlXCIsXCJtaWxlc3RvbmVcIixcImFzc2lnbmVlXCIsXCJwcm9qZWN0c1wiXTtmb3IobGV0IGkgb2Ygbil7bGV0IG89ZVtpXTtpZihvIT09dm9pZCAwKXtpZihpPT09XCJsYWJlbHNcInx8aT09PVwicHJvamVjdHNcIil7aWYoIUFycmF5LmlzQXJyYXkobykpdGhyb3cgbmV3IFR5cGVFcnJvcihgVGhlIFxcYCR7aX1cXGAgb3B0aW9uIHNob3VsZCBiZSBhbiBhcnJheWApO289by5qb2luKFwiLFwiKX1yLnNlYXJjaFBhcmFtcy5zZXQoaSxvKX19cmV0dXJuIHIudG9TdHJpbmcoKX07ZG4uZXhwb3J0cy5kZWZhdWx0PWRuLmV4cG9ydHN9KTt2YXIgRG89USgod18sT2wpPT57XCJ1c2Ugc3RyaWN0XCI7T2wuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4saSxvKXtyZXR1cm4gdDxyfHxuPHI/dD5uP24rMTp0KzE6aT09PW8/cjpyKzF9cmV0dXJuIGZ1bmN0aW9uKHQscil7aWYodD09PXIpcmV0dXJuIDA7aWYodC5sZW5ndGg+ci5sZW5ndGgpe3ZhciBuPXQ7dD1yLHI9bn1mb3IodmFyIGk9dC5sZW5ndGgsbz1yLmxlbmd0aDtpPjAmJnQuY2hhckNvZGVBdChpLTEpPT09ci5jaGFyQ29kZUF0KG8tMSk7KWktLSxvLS07Zm9yKHZhciBzPTA7czxpJiZ0LmNoYXJDb2RlQXQocyk9PT1yLmNoYXJDb2RlQXQocyk7KXMrKztpZihpLT1zLG8tPXMsaT09PTB8fG88MylyZXR1cm4gbzt2YXIgYT0wLGwsdSxjLHAsZCxmLHksZyxULEEsUixFLFM9W107Zm9yKGw9MDtsPGk7bCsrKVMucHVzaChsKzEpLFMucHVzaCh0LmNoYXJDb2RlQXQocytsKSk7Zm9yKHZhciB3ZT1TLmxlbmd0aC0xO2E8by0zOylmb3IoVD1yLmNoYXJDb2RlQXQocysodT1hKSksQT1yLmNoYXJDb2RlQXQocysoYz1hKzEpKSxSPXIuY2hhckNvZGVBdChzKyhwPWErMikpLEU9ci5jaGFyQ29kZUF0KHMrKGQ9YSszKSksZj1hKz00LGw9MDtsPHdlO2wrPTIpeT1TW2xdLGc9U1tsKzFdLHU9ZSh5LHUsYyxULGcpLGM9ZSh1LGMscCxBLGcpLHA9ZShjLHAsZCxSLGcpLGY9ZShwLGQsZixFLGcpLFNbbF09ZixkPXAscD1jLGM9dSx1PXk7Zm9yKDthPG87KWZvcihUPXIuY2hhckNvZGVBdChzKyh1PWEpKSxmPSsrYSxsPTA7bDx3ZTtsKz0yKXk9U1tsXSxTW2xdPWY9ZSh5LHUsZixULFNbbCsxXSksdT15O3JldHVybiBmfX0oKX0pO3ZhciBOZz17fTtUdChOZyx7RE1NRjooKT0+RWUsRE1NRkNsYXNzOigpPT5RcixEZWJ1ZzooKT0+YmksRGVjaW1hbDooKT0+TmUsRXh0ZW5zaW9uczooKT0+bGksTWV0cmljc0NsaWVudDooKT0+RHQsTm90Rm91bmRFcnJvcjooKT0+QmUsT2JqZWN0RW51bVZhbHVlOigpPT5rZSxQcmlzbWFDbGllbnRJbml0aWFsaXphdGlvbkVycm9yOigpPT5rLFByaXNtYUNsaWVudEtub3duUmVxdWVzdEVycm9yOigpPT5ILFByaXNtYUNsaWVudFJ1c3RQYW5pY0Vycm9yOigpPT5iZSxQcmlzbWFDbGllbnRVbmtub3duUmVxdWVzdEVycm9yOigpPT5XLFByaXNtYUNsaWVudFZhbGlkYXRpb25FcnJvcjooKT0+c2UsUHVibGljOigpPT51aSxTcWw6KCk9Pm1lLFR5cGVzOigpPT5jaSxkZWZpbmVEbW1mUHJvcGVydHk6KCk9PnRhLGRldGVjdFJ1bnRpbWU6KCk9PnhsLGVtcHR5OigpPT5uYSxnZXRQcmlzbWFDbGllbnQ6KCk9Pl91LGl0eENsaWVudERlbnlMaXN0OigpPT5KaSxqb2luOigpPT5yYSxtYWtlU3RyaWN0RW51bTooKT0+VHUsb2JqZWN0RW51bU5hbWVzOigpPT5XYyxvYmplY3RFbnVtVmFsdWVzOigpPT5mbixyYXc6KCk9PlppLHNxbHRhZzooKT0+WGksd2FybkVudkNvbmZsaWN0czooKT0+Q3Usd2Fybk9uY2U6KCk9PmxyfSk7bW9kdWxlLmV4cG9ydHM9a3UoTmcpO3ZhciBsaT17fTtUdChsaSx7ZGVmaW5lRXh0ZW5zaW9uOigpPT5RbyxnZXRFeHRlbnNpb25Db250ZXh0OigpPT5Hb30pO2Z1bmN0aW9uIFFvKGUpe3JldHVybiB0eXBlb2YgZT09XCJmdW5jdGlvblwiP2U6dD0+dC4kZXh0ZW5kcyhlKX1mdW5jdGlvbiBHbyhlKXtyZXR1cm4gZX12YXIgdWk9e307VHQodWkse3ZhbGlkYXRvcjooKT0+Sm99KTtmdW5jdGlvbiBKbyguLi5lKXtyZXR1cm4gdD0+dH12YXIgY2k9e307VHQoY2kse0V4dGVuc2lvbnM6KCk9PkhvLFB1YmxpYzooKT0+V28sUmVzdWx0OigpPT56byxVdGlsczooKT0+WW99KTt2YXIgSG89e307dmFyIFdvPXt9O3ZhciB6bz17fTt2YXIgWW89e307dmFyIEplPShlLHQpPT57bGV0IHI9e307Zm9yKGxldCBuIG9mIGUpe2xldCBpPW5bdF07cltpXT1ufXJldHVybiByfTtmdW5jdGlvbiBabyhlKXtyZXR1cm4gZS5zdWJzdHJpbmcoMCwxKS50b0xvd2VyQ2FzZSgpK2Uuc3Vic3RyaW5nKDEpfXZhciBRcj1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmRvY3VtZW50PXQ7dGhpcy5jb21wb3NpdGVOYW1lcz1uZXcgU2V0KHRoaXMuZGF0YW1vZGVsLnR5cGVzLm1hcChyPT5yLm5hbWUpKSx0aGlzLnR5cGVBbmRNb2RlbE1hcD10aGlzLmJ1aWxkVHlwZU1vZGVsTWFwKCksdGhpcy5tYXBwaW5nc01hcD10aGlzLmJ1aWxkTWFwcGluZ3NNYXAoKSx0aGlzLm91dHB1dFR5cGVNYXA9dGhpcy5idWlsZE1lcmdlZE91dHB1dFR5cGVNYXAoKSx0aGlzLnJvb3RGaWVsZE1hcD10aGlzLmJ1aWxkUm9vdEZpZWxkTWFwKCksdGhpcy5pbnB1dFR5cGVzQnlOYW1lPXRoaXMuYnVpbGRJbnB1dFR5cGVzTWFwKCl9Z2V0IGRhdGFtb2RlbCgpe3JldHVybiB0aGlzLmRvY3VtZW50LmRhdGFtb2RlbH1nZXQgbWFwcGluZ3MoKXtyZXR1cm4gdGhpcy5kb2N1bWVudC5tYXBwaW5nc31nZXQgc2NoZW1hKCl7cmV0dXJuIHRoaXMuZG9jdW1lbnQuc2NoZW1hfWdldCBpbnB1dE9iamVjdFR5cGVzKCl7cmV0dXJuIHRoaXMuc2NoZW1hLmlucHV0T2JqZWN0VHlwZXN9Z2V0IG91dHB1dE9iamVjdFR5cGVzKCl7cmV0dXJuIHRoaXMuc2NoZW1hLm91dHB1dE9iamVjdFR5cGVzfWlzQ29tcG9zaXRlKHQpe3JldHVybiB0aGlzLmNvbXBvc2l0ZU5hbWVzLmhhcyh0KX1nZXRPdGhlck9wZXJhdGlvbk5hbWVzKCl7cmV0dXJuW09iamVjdC52YWx1ZXModGhpcy5tYXBwaW5ncy5vdGhlck9wZXJhdGlvbnMud3JpdGUpLE9iamVjdC52YWx1ZXModGhpcy5tYXBwaW5ncy5vdGhlck9wZXJhdGlvbnMucmVhZCldLmZsYXQoKX1oYXNFbnVtSW5OYW1lc3BhY2UodCxyKXtyZXR1cm4gdGhpcy5zY2hlbWEuZW51bVR5cGVzW3JdPy5maW5kKG49Pm4ubmFtZT09PXQpIT09dm9pZCAwfXJlc29sdmVJbnB1dE9iamVjdFR5cGUodCl7cmV0dXJuIHRoaXMuaW5wdXRUeXBlc0J5TmFtZS5nZXQocGkodC50eXBlLHQubmFtZXNwYWNlKSl9cmVzb2x2ZU91dHB1dE9iamVjdFR5cGUodCl7aWYodC5sb2NhdGlvbj09PVwib3V0cHV0T2JqZWN0VHlwZXNcIilyZXR1cm4gdGhpcy5vdXRwdXRPYmplY3RUeXBlc1t0Lm5hbWVzcGFjZT8/XCJwcmlzbWFcIl0uZmluZChyPT5yLm5hbWU9PT10LnR5cGUpfWJ1aWxkTW9kZWxNYXAoKXtyZXR1cm4gSmUodGhpcy5kYXRhbW9kZWwubW9kZWxzLFwibmFtZVwiKX1idWlsZFR5cGVNYXAoKXtyZXR1cm4gSmUodGhpcy5kYXRhbW9kZWwudHlwZXMsXCJuYW1lXCIpfWJ1aWxkVHlwZU1vZGVsTWFwKCl7cmV0dXJuey4uLnRoaXMuYnVpbGRUeXBlTWFwKCksLi4udGhpcy5idWlsZE1vZGVsTWFwKCl9fWJ1aWxkTWFwcGluZ3NNYXAoKXtyZXR1cm4gSmUodGhpcy5tYXBwaW5ncy5tb2RlbE9wZXJhdGlvbnMsXCJtb2RlbFwiKX1idWlsZE1lcmdlZE91dHB1dFR5cGVNYXAoKXtyZXR1cm57bW9kZWw6SmUodGhpcy5zY2hlbWEub3V0cHV0T2JqZWN0VHlwZXMubW9kZWwsXCJuYW1lXCIpLHByaXNtYTpKZSh0aGlzLnNjaGVtYS5vdXRwdXRPYmplY3RUeXBlcy5wcmlzbWEsXCJuYW1lXCIpfX1idWlsZFJvb3RGaWVsZE1hcCgpe3JldHVybnsuLi5KZSh0aGlzLm91dHB1dFR5cGVNYXAucHJpc21hLlF1ZXJ5LmZpZWxkcyxcIm5hbWVcIiksLi4uSmUodGhpcy5vdXRwdXRUeXBlTWFwLnByaXNtYS5NdXRhdGlvbi5maWVsZHMsXCJuYW1lXCIpfX1idWlsZElucHV0VHlwZXNNYXAoKXtsZXQgdD1uZXcgTWFwO2ZvcihsZXQgciBvZiB0aGlzLmlucHV0T2JqZWN0VHlwZXMucHJpc21hKXQuc2V0KHBpKHIubmFtZSxcInByaXNtYVwiKSxyKTtpZighdGhpcy5pbnB1dE9iamVjdFR5cGVzLm1vZGVsKXJldHVybiB0O2ZvcihsZXQgciBvZiB0aGlzLmlucHV0T2JqZWN0VHlwZXMubW9kZWwpdC5zZXQocGkoci5uYW1lLFwibW9kZWxcIikscik7cmV0dXJuIHR9fTtmdW5jdGlvbiBwaShlLHQpe3JldHVybiB0P2Ake3R9LiR7ZX1gOmV9dmFyIEVlOyh0PT57bGV0IGU7KEU9PihFLmZpbmRVbmlxdWU9XCJmaW5kVW5pcXVlXCIsRS5maW5kVW5pcXVlT3JUaHJvdz1cImZpbmRVbmlxdWVPclRocm93XCIsRS5maW5kRmlyc3Q9XCJmaW5kRmlyc3RcIixFLmZpbmRGaXJzdE9yVGhyb3c9XCJmaW5kRmlyc3RPclRocm93XCIsRS5maW5kTWFueT1cImZpbmRNYW55XCIsRS5jcmVhdGU9XCJjcmVhdGVcIixFLmNyZWF0ZU1hbnk9XCJjcmVhdGVNYW55XCIsRS51cGRhdGU9XCJ1cGRhdGVcIixFLnVwZGF0ZU1hbnk9XCJ1cGRhdGVNYW55XCIsRS51cHNlcnQ9XCJ1cHNlcnRcIixFLmRlbGV0ZT1cImRlbGV0ZVwiLEUuZGVsZXRlTWFueT1cImRlbGV0ZU1hbnlcIixFLmdyb3VwQnk9XCJncm91cEJ5XCIsRS5jb3VudD1cImNvdW50XCIsRS5hZ2dyZWdhdGU9XCJhZ2dyZWdhdGVcIixFLmZpbmRSYXc9XCJmaW5kUmF3XCIsRS5hZ2dyZWdhdGVSYXc9XCJhZ2dyZWdhdGVSYXdcIikpKGU9dC5Nb2RlbEFjdGlvbnx8KHQuTW9kZWxBY3Rpb249e30pKX0pKEVlfHwoRWU9e30pKTt2YXIgenI9RihscygpKSx0Yz0xMDAsWnQ9W107dHlwZW9mIHByb2Nlc3M8XCJ1XCImJnR5cGVvZiBwcm9jZXNzLnN0ZGVycj8ud3JpdGUhPVwiZnVuY3Rpb25cIiYmKHpyLmRlZmF1bHQubG9nPWNvbnNvbGUuZGVidWc/P2NvbnNvbGUubG9nKTtmdW5jdGlvbiByYyhlKXtsZXQgdD0oMCx6ci5kZWZhdWx0KShlKSxyPU9iamVjdC5hc3NpZ24oKC4uLm4pPT4odC5sb2c9ci5sb2csbi5sZW5ndGghPT0wJiZadC5wdXNoKFtlLC4uLm5dKSxadC5sZW5ndGg+dGMmJlp0LnNoaWZ0KCksdChcIlwiLC4uLm4pKSx0KTtyZXR1cm4gcn12YXIgYmk9T2JqZWN0LmFzc2lnbihyYyx6ci5kZWZhdWx0KTtmdW5jdGlvbiB1cyhlPTc1MDApe2xldCB0PVp0Lm1hcChyPT5yLm1hcChuPT50eXBlb2Ygbj09XCJzdHJpbmdcIj9uOkpTT04uc3RyaW5naWZ5KG4pKS5qb2luKFwiIFwiKSkuam9pbihgXG5gKTtyZXR1cm4gdC5sZW5ndGg8ZT90OnQuc2xpY2UoLWUpfWZ1bmN0aW9uIGNzKCl7WnQubGVuZ3RoPTB9dmFyICQ9Ymk7dmFyIHhpLHBzLGRzLG1zLGZzPSEwO3R5cGVvZiBwcm9jZXNzPFwidVwiJiYoe0ZPUkNFX0NPTE9SOnhpLE5PREVfRElTQUJMRV9DT0xPUlM6cHMsTk9fQ09MT1I6ZHMsVEVSTTptc309cHJvY2Vzcy5lbnZ8fHt9LGZzPXByb2Nlc3Muc3Rkb3V0JiZwcm9jZXNzLnN0ZG91dC5pc1RUWSk7dmFyIG5jPXtlbmFibGVkOiFwcyYmZHM9PW51bGwmJm1zIT09XCJkdW1iXCImJih4aSE9bnVsbCYmeGkhPT1cIjBcInx8ZnMpfTtmdW5jdGlvbiBxKGUsdCl7bGV0IHI9bmV3IFJlZ0V4cChgXFxcXHgxYlxcXFxbJHt0fW1gLFwiZ1wiKSxuPWBcXHgxQlske2V9bWAsaT1gXFx4MUJbJHt0fW1gO3JldHVybiBmdW5jdGlvbihvKXtyZXR1cm4hbmMuZW5hYmxlZHx8bz09bnVsbD9vOm4rKH4oXCJcIitvKS5pbmRleE9mKGkpP28ucmVwbGFjZShyLGkrbik6bykraX19dmFyIGV5PXEoMCwwKSxwZT1xKDEsMjIpLFdlPXEoMiwyMiksdHk9cSgzLDIzKSx1ZT1xKDQsMjQpLHJ5PXEoNywyNyksbnk9cSg4LDI4KSxpeT1xKDksMjkpLG95PXEoMzAsMzkpLHZlPXEoMzEsMzkpLHB0PXEoMzIsMzkpLFJlPXEoMzMsMzkpLE10PXEoMzQsMzkpLHN5PXEoMzUsMzkpLHplPXEoMzYsMzkpLGF5PXEoMzcsMzkpLFlyPXEoOTAsMzkpLGx5PXEoOTAsMzkpLHV5PXEoNDAsNDkpLGN5PXEoNDEsNDkpLHB5PXEoNDIsNDkpLGR5PXEoNDMsNDkpLG15PXEoNDQsNDkpLGZ5PXEoNDUsNDkpLGd5PXEoNDYsNDkpLHl5PXEoNDcsNDkpO3ZhciBncz1GKHJlcXVpcmUoXCJmc1wiKSk7ZnVuY3Rpb24gd2koKXtsZXQgZT1wcm9jZXNzLmVudi5QUklTTUFfUVVFUllfRU5HSU5FX0xJQlJBUlk7aWYoIShlJiZncy5kZWZhdWx0LmV4aXN0c1N5bmMoZSkpJiZwcm9jZXNzLmFyY2g9PT1cImlhMzJcIil0aHJvdyBuZXcgRXJyb3IoJ1RoZSBkZWZhdWx0IHF1ZXJ5IGVuZ2luZSB0eXBlIChOb2RlLUFQSSwgXCJsaWJyYXJ5XCIpIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGZvciAzMmJpdCBOb2RlLiBQbGVhc2Ugc2V0IGBlbmdpbmVUeXBlID0gXCJiaW5hcnlcImAgaW4gdGhlIFwiZ2VuZXJhdG9yXCIgYmxvY2sgb2YgeW91ciBcInNjaGVtYS5wcmlzbWFcIiBmaWxlIChvciB1c2UgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBcIlBSSVNNQV9DTElFTlRfRU5HSU5FX1RZUEU9YmluYXJ5XCIgYW5kL29yIFwiUFJJU01BX0NMSV9RVUVSWV9FTkdJTkVfVFlQRT1iaW5hcnlcIi4pJyl9dmFyIFpyPVwibGlicXVlcnlfZW5naW5lXCI7ZnVuY3Rpb24gWHIoZSx0KXtsZXQgcj10PT09XCJ1cmxcIjtyZXR1cm4gZS5pbmNsdWRlcyhcIndpbmRvd3NcIik/cj9cInF1ZXJ5X2VuZ2luZS5kbGwubm9kZVwiOmBxdWVyeV9lbmdpbmUtJHtlfS5kbGwubm9kZWA6ZS5pbmNsdWRlcyhcImRhcndpblwiKT9yP2Ake1pyfS5keWxpYi5ub2RlYDpgJHtacn0tJHtlfS5keWxpYi5ub2RlYDpyP2Ake1pyfS5zby5ub2RlYDpgJHtacn0tJHtlfS5zby5ub2RlYH12YXIgQXM9RihyZXF1aXJlKFwiY2hpbGRfcHJvY2Vzc1wiKSksQWk9RihyZXF1aXJlKFwiZnMvcHJvbWlzZXNcIikpLG9uPUYocmVxdWlyZShcIm9zXCIpKTt2YXIgVmU9U3ltYm9sLmZvcihcIkB0cy1wYXR0ZXJuL21hdGNoZXJcIiksaWM9U3ltYm9sLmZvcihcIkB0cy1wYXR0ZXJuL2lzVmFyaWFkaWNcIiksdG49XCJAdHMtcGF0dGVybi9hbm9ueW1vdXMtc2VsZWN0LWtleVwiLEVpPWU9PiEhKGUmJnR5cGVvZiBlPT1cIm9iamVjdFwiKSxlbj1lPT5lJiYhIWVbVmVdLEllPShlLHQscik9PntpZihlbihlKSl7bGV0IG49ZVtWZV0oKSx7bWF0Y2hlZDppLHNlbGVjdGlvbnM6b309bi5tYXRjaCh0KTtyZXR1cm4gaSYmbyYmT2JqZWN0LmtleXMobykuZm9yRWFjaChzPT5yKHMsb1tzXSkpLGl9aWYoRWkoZSkpe2lmKCFFaSh0KSlyZXR1cm4hMTtpZihBcnJheS5pc0FycmF5KGUpKXtpZighQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4hMTtsZXQgbj1bXSxpPVtdLG89W107Zm9yKGxldCBzIG9mIGUua2V5cygpKXtsZXQgYT1lW3NdO2VuKGEpJiZhW2ljXT9vLnB1c2goYSk6by5sZW5ndGg/aS5wdXNoKGEpOm4ucHVzaChhKX1pZihvLmxlbmd0aCl7aWYoby5sZW5ndGg+MSl0aHJvdyBuZXcgRXJyb3IoXCJQYXR0ZXJuIGVycm9yOiBVc2luZyBgLi4uUC5hcnJheSguLi4pYCBzZXZlcmFsIHRpbWVzIGluIGEgc2luZ2xlIHBhdHRlcm4gaXMgbm90IGFsbG93ZWQuXCIpO2lmKHQubGVuZ3RoPG4ubGVuZ3RoK2kubGVuZ3RoKXJldHVybiExO2xldCBzPXQuc2xpY2UoMCxuLmxlbmd0aCksYT1pLmxlbmd0aD09PTA/W106dC5zbGljZSgtaS5sZW5ndGgpLGw9dC5zbGljZShuLmxlbmd0aCxpLmxlbmd0aD09PTA/MS8wOi1pLmxlbmd0aCk7cmV0dXJuIG4uZXZlcnkoKHUsYyk9PkllKHUsc1tjXSxyKSkmJmkuZXZlcnkoKHUsYyk9PkllKHUsYVtjXSxyKSkmJihvLmxlbmd0aD09PTB8fEllKG9bMF0sbCxyKSl9cmV0dXJuIGUubGVuZ3RoPT09dC5sZW5ndGgmJmUuZXZlcnkoKHMsYSk9PkllKHMsdFthXSxyKSl9cmV0dXJuIE9iamVjdC5rZXlzKGUpLmV2ZXJ5KG49PntsZXQgaT1lW25dO3JldHVybihuIGluIHR8fGVuKG89aSkmJm9bVmVdKCkubWF0Y2hlclR5cGU9PT1cIm9wdGlvbmFsXCIpJiZJZShpLHRbbl0scik7dmFyIG99KX1yZXR1cm4gT2JqZWN0LmlzKHQsZSl9LFhlPWU9Pnt2YXIgdCxyLG47cmV0dXJuIEVpKGUpP2VuKGUpPyh0PShyPShuPWVbVmVdKCkpLmdldFNlbGVjdGlvbktleXMpPT1udWxsP3ZvaWQgMDpyLmNhbGwobikpIT1udWxsP3Q6W106QXJyYXkuaXNBcnJheShlKT9YdChlLFhlKTpYdChPYmplY3QudmFsdWVzKGUpLFhlKTpbXX0sWHQ9KGUsdCk9PmUucmVkdWNlKChyLG4pPT5yLmNvbmNhdCh0KG4pKSxbXSk7ZnVuY3Rpb24gX2UoZSl7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSx7b3B0aW9uYWw6KCk9Pm9jKGUpLGFuZDp0PT5CKGUsdCksb3I6dD0+c2MoZSx0KSxzZWxlY3Q6dD0+dD09PXZvaWQgMD95cyhlKTp5cyh0LGUpfSl9ZnVuY3Rpb24gb2MoZSl7cmV0dXJuIF9lKHtbVmVdOigpPT4oe21hdGNoOnQ9PntsZXQgcj17fSxuPShpLG8pPT57cltpXT1vfTtyZXR1cm4gdD09PXZvaWQgMD8oWGUoZSkuZm9yRWFjaChpPT5uKGksdm9pZCAwKSkse21hdGNoZWQ6ITAsc2VsZWN0aW9uczpyfSk6e21hdGNoZWQ6SWUoZSx0LG4pLHNlbGVjdGlvbnM6cn19LGdldFNlbGVjdGlvbktleXM6KCk9PlhlKGUpLG1hdGNoZXJUeXBlOlwib3B0aW9uYWxcIn0pfSl9ZnVuY3Rpb24gQiguLi5lKXtyZXR1cm4gX2Uoe1tWZV06KCk9Pih7bWF0Y2g6dD0+e2xldCByPXt9LG49KGksbyk9PntyW2ldPW99O3JldHVybnttYXRjaGVkOmUuZXZlcnkoaT0+SWUoaSx0LG4pKSxzZWxlY3Rpb25zOnJ9fSxnZXRTZWxlY3Rpb25LZXlzOigpPT5YdChlLFhlKSxtYXRjaGVyVHlwZTpcImFuZFwifSl9KX1mdW5jdGlvbiBzYyguLi5lKXtyZXR1cm4gX2Uoe1tWZV06KCk9Pih7bWF0Y2g6dD0+e2xldCByPXt9LG49KGksbyk9PntyW2ldPW99O3JldHVybiBYdChlLFhlKS5mb3JFYWNoKGk9Pm4oaSx2b2lkIDApKSx7bWF0Y2hlZDplLnNvbWUoaT0+SWUoaSx0LG4pKSxzZWxlY3Rpb25zOnJ9fSxnZXRTZWxlY3Rpb25LZXlzOigpPT5YdChlLFhlKSxtYXRjaGVyVHlwZTpcIm9yXCJ9KX0pfWZ1bmN0aW9uIE8oZSl7cmV0dXJue1tWZV06KCk9Pih7bWF0Y2g6dD0+KHttYXRjaGVkOiEhZSh0KX0pfSl9fWZ1bmN0aW9uIHlzKC4uLmUpe2xldCB0PXR5cGVvZiBlWzBdPT1cInN0cmluZ1wiP2VbMF06dm9pZCAwLHI9ZS5sZW5ndGg9PT0yP2VbMV06dHlwZW9mIGVbMF09PVwic3RyaW5nXCI/dm9pZCAwOmVbMF07cmV0dXJuIF9lKHtbVmVdOigpPT4oe21hdGNoOm49PntsZXQgaT17W3Q/P3RuXTpufTtyZXR1cm57bWF0Y2hlZDpyPT09dm9pZCAwfHxJZShyLG4sKG8scyk9PntpW29dPXN9KSxzZWxlY3Rpb25zOml9fSxnZXRTZWxlY3Rpb25LZXlzOigpPT5bdD8/dG5dLmNvbmNhdChyPT09dm9pZCAwP1tdOlhlKHIpKX0pfSl9ZnVuY3Rpb24gTWUoZSl7cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwifWZ1bmN0aW9uIGR0KGUpe3JldHVybiB0eXBlb2YgZT09XCJzdHJpbmdcIn1mdW5jdGlvbiBZZShlKXtyZXR1cm4gdHlwZW9mIGU9PVwiYmlnaW50XCJ9dmFyIFR5PV9lKE8oZnVuY3Rpb24oZSl7cmV0dXJuITB9KSk7dmFyIG10PWU9Pk9iamVjdC5hc3NpZ24oX2UoZSkse3N0YXJ0c1dpdGg6dD0+e3JldHVybiBtdChCKGUsKHI9dCxPKG49PmR0KG4pJiZuLnN0YXJ0c1dpdGgocikpKSkpO3ZhciByfSxlbmRzV2l0aDp0PT57cmV0dXJuIG10KEIoZSwocj10LE8obj0+ZHQobikmJm4uZW5kc1dpdGgocikpKSkpO3ZhciByfSxtaW5MZW5ndGg6dD0+bXQoQihlLChyPT5PKG49PmR0KG4pJiZuLmxlbmd0aD49cikpKHQpKSksbWF4TGVuZ3RoOnQ9Pm10KEIoZSwocj0+TyhuPT5kdChuKSYmbi5sZW5ndGg8PXIpKSh0KSkpLGluY2x1ZGVzOnQ9PntyZXR1cm4gbXQoQihlLChyPXQsTyhuPT5kdChuKSYmbi5pbmNsdWRlcyhyKSkpKSk7dmFyIHJ9LHJlZ2V4OnQ9PntyZXR1cm4gbXQoQihlLChyPXQsTyhuPT5kdChuKSYmISFuLm1hdGNoKHIpKSkpKTt2YXIgcn19KSxDeT1tdChPKGR0KSksU2U9ZT0+T2JqZWN0LmFzc2lnbihfZShlKSx7YmV0d2VlbjoodCxyKT0+U2UoQihlLCgobixpKT0+TyhvPT5NZShvKSYmbjw9byYmaT49bykpKHQscikpKSxsdDp0PT5TZShCKGUsKHI9Pk8obj0+TWUobikmJm48cikpKHQpKSksZ3Q6dD0+U2UoQihlLChyPT5PKG49Pk1lKG4pJiZuPnIpKSh0KSkpLGx0ZTp0PT5TZShCKGUsKHI9Pk8obj0+TWUobikmJm48PXIpKSh0KSkpLGd0ZTp0PT5TZShCKGUsKHI9Pk8obj0+TWUobikmJm4+PXIpKSh0KSkpLGludDooKT0+U2UoQihlLE8odD0+TWUodCkmJk51bWJlci5pc0ludGVnZXIodCkpKSksZmluaXRlOigpPT5TZShCKGUsTyh0PT5NZSh0KSYmTnVtYmVyLmlzRmluaXRlKHQpKSkpLHBvc2l0aXZlOigpPT5TZShCKGUsTyh0PT5NZSh0KSYmdD4wKSkpLG5lZ2F0aXZlOigpPT5TZShCKGUsTyh0PT5NZSh0KSYmdDwwKSkpfSksQXk9U2UoTyhNZSkpLFplPWU9Pk9iamVjdC5hc3NpZ24oX2UoZSkse2JldHdlZW46KHQscik9PlplKEIoZSwoKG4saSk9Pk8obz0+WWUobykmJm48PW8mJmk+PW8pKSh0LHIpKSksbHQ6dD0+WmUoQihlLChyPT5PKG49PlllKG4pJiZuPHIpKSh0KSkpLGd0OnQ9PlplKEIoZSwocj0+TyhuPT5ZZShuKSYmbj5yKSkodCkpKSxsdGU6dD0+WmUoQihlLChyPT5PKG49PlllKG4pJiZuPD1yKSkodCkpKSxndGU6dD0+WmUoQihlLChyPT5PKG49PlllKG4pJiZuPj1yKSkodCkpKSxwb3NpdGl2ZTooKT0+WmUoQihlLE8odD0+WWUodCkmJnQ+MCkpKSxuZWdhdGl2ZTooKT0+WmUoQihlLE8odD0+WWUodCkmJnQ8MCkpKX0pLFJ5PVplKE8oWWUpKSxNeT1fZShPKGZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZT09XCJib29sZWFuXCJ9KSksU3k9X2UoTyhmdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGU9PVwic3ltYm9sXCJ9KSksSXk9X2UoTyhmdW5jdGlvbihlKXtyZXR1cm4gZT09bnVsbH0pKTt2YXIgUGk9e21hdGNoZWQ6ITEsdmFsdWU6dm9pZCAwfTtmdW5jdGlvbiBTdChlKXtyZXR1cm4gbmV3IHZpKGUsUGkpfXZhciB2aT1jbGFzcyBle2NvbnN0cnVjdG9yKHQscil7dGhpcy5pbnB1dD12b2lkIDAsdGhpcy5zdGF0ZT12b2lkIDAsdGhpcy5pbnB1dD10LHRoaXMuc3RhdGU9cn13aXRoKC4uLnQpe2lmKHRoaXMuc3RhdGUubWF0Y2hlZClyZXR1cm4gdGhpcztsZXQgcj10W3QubGVuZ3RoLTFdLG49W3RbMF1dLGk7dC5sZW5ndGg9PT0zJiZ0eXBlb2YgdFsxXT09XCJmdW5jdGlvblwiPyhuLnB1c2godFswXSksaT10WzFdKTp0Lmxlbmd0aD4yJiZuLnB1c2goLi4udC5zbGljZSgxLHQubGVuZ3RoLTEpKTtsZXQgbz0hMSxzPXt9LGE9KHUsYyk9PntvPSEwLHNbdV09Y30sbD0hbi5zb21lKHU9PkllKHUsdGhpcy5pbnB1dCxhKSl8fGkmJiFpKHRoaXMuaW5wdXQpP1BpOnttYXRjaGVkOiEwLHZhbHVlOnIobz90biBpbiBzP3NbdG5dOnM6dGhpcy5pbnB1dCx0aGlzLmlucHV0KX07cmV0dXJuIG5ldyBlKHRoaXMuaW5wdXQsbCl9d2hlbih0LHIpe2lmKHRoaXMuc3RhdGUubWF0Y2hlZClyZXR1cm4gdGhpcztsZXQgbj0hIXQodGhpcy5pbnB1dCk7cmV0dXJuIG5ldyBlKHRoaXMuaW5wdXQsbj97bWF0Y2hlZDohMCx2YWx1ZTpyKHRoaXMuaW5wdXQsdGhpcy5pbnB1dCl9OlBpKX1vdGhlcndpc2UodCl7cmV0dXJuIHRoaXMuc3RhdGUubWF0Y2hlZD90aGlzLnN0YXRlLnZhbHVlOnQodGhpcy5pbnB1dCl9ZXhoYXVzdGl2ZSgpe3JldHVybiB0aGlzLnJ1bigpfXJ1bigpe2lmKHRoaXMuc3RhdGUubWF0Y2hlZClyZXR1cm4gdGhpcy5zdGF0ZS52YWx1ZTtsZXQgdDt0cnl7dD1KU09OLnN0cmluZ2lmeSh0aGlzLmlucHV0KX1jYXRjaHt0PXRoaXMuaW5wdXR9dGhyb3cgbmV3IEVycm9yKGBQYXR0ZXJuIG1hdGNoaW5nIGVycm9yOiBubyBwYXR0ZXJuIG1hdGNoZXMgdmFsdWUgJHt0fWApfXJldHVyblR5cGUoKXtyZXR1cm4gdGhpc319O3ZhciBScz1yZXF1aXJlKFwidXRpbFwiKTt2YXIgX3M9Rih2cygpKTtmdW5jdGlvbiBycihlKXtyZXR1cm4oMCxfcy5kZWZhdWx0KShlLGUse2ZhbGxiYWNrOnVlfSl9dmFyIHVjPXt3YXJuOlJlKFwicHJpc21hOndhcm5cIil9LGNjPXt3YXJuOigpPT4hcHJvY2Vzcy5lbnYuUFJJU01BX0RJU0FCTEVfV0FSTklOR1N9O2Z1bmN0aW9uIG5yKGUsLi4udCl7Y2Mud2FybigpJiZjb25zb2xlLndhcm4oYCR7dWMud2Fybn0gJHtlfWAsLi4udCl9dmFyIHBjPSgwLFJzLnByb21pc2lmeSkoQXMuZGVmYXVsdC5leGVjKSxkZT0kKFwicHJpc21hOmdldC1wbGF0Zm9ybVwiKSxkYz1bXCIxLjAueFwiLFwiMS4xLnhcIixcIjMuMC54XCJdO2FzeW5jIGZ1bmN0aW9uIE1zKCl7bGV0IGU9b24uZGVmYXVsdC5wbGF0Zm9ybSgpLHQ9cHJvY2Vzcy5hcmNoO2lmKGU9PT1cImZyZWVic2RcIil7bGV0IHM9YXdhaXQgc24oXCJmcmVlYnNkLXZlcnNpb25cIik7aWYocyYmcy50cmltKCkubGVuZ3RoPjApe2xldCBsPS9eKFxcZCspXFwuPy8uZXhlYyhzKTtpZihsKXJldHVybntwbGF0Zm9ybTpcImZyZWVic2RcIix0YXJnZXREaXN0cm86YGZyZWVic2Qke2xbMV19YCxhcmNoOnR9fX1pZihlIT09XCJsaW51eFwiKXJldHVybntwbGF0Zm9ybTplLGFyY2g6dH07bGV0IHI9YXdhaXQgZmMoKSxuPWF3YWl0IFBjKCksaT15Yyh7YXJjaDp0LGFyY2hGcm9tVW5hbWU6bixmYW1pbHlEaXN0cm86ci5mYW1pbHlEaXN0cm99KSx7bGlic3NsOm99PWF3YWl0IGhjKGkpO3JldHVybntwbGF0Zm9ybTpcImxpbnV4XCIsbGlic3NsOm8sYXJjaDp0LGFyY2hGcm9tVW5hbWU6biwuLi5yfX1mdW5jdGlvbiBtYyhlKXtsZXQgdD0vXklEPVwiPyhbXlwiXFxuXSopXCI/JC9pbSxyPS9eSURfTElLRT1cIj8oW15cIlxcbl0qKVwiPyQvaW0sbj10LmV4ZWMoZSksaT1uJiZuWzFdJiZuWzFdLnRvTG93ZXJDYXNlKCl8fFwiXCIsbz1yLmV4ZWMoZSkscz1vJiZvWzFdJiZvWzFdLnRvTG93ZXJDYXNlKCl8fFwiXCIsYT1TdCh7aWQ6aSxpZExpa2U6c30pLndpdGgoe2lkOlwiYWxwaW5lXCJ9LCh7aWQ6bH0pPT4oe3RhcmdldERpc3RybzpcIm11c2xcIixmYW1pbHlEaXN0cm86bCxvcmlnaW5hbERpc3RybzpsfSkpLndpdGgoe2lkOlwicmFzcGJpYW5cIn0sKHtpZDpsfSk9Pih7dGFyZ2V0RGlzdHJvOlwiYXJtXCIsZmFtaWx5RGlzdHJvOlwiZGViaWFuXCIsb3JpZ2luYWxEaXN0cm86bH0pKS53aXRoKHtpZDpcIm5peG9zXCJ9LCh7aWQ6bH0pPT4oe3RhcmdldERpc3RybzpcIm5peG9zXCIsb3JpZ2luYWxEaXN0cm86bCxmYW1pbHlEaXN0cm86XCJuaXhvc1wifSkpLndpdGgoe2lkOlwiZGViaWFuXCJ9LHtpZDpcInVidW50dVwifSwoe2lkOmx9KT0+KHt0YXJnZXREaXN0cm86XCJkZWJpYW5cIixmYW1pbHlEaXN0cm86XCJkZWJpYW5cIixvcmlnaW5hbERpc3RybzpsfSkpLndpdGgoe2lkOlwicmhlbFwifSx7aWQ6XCJjZW50b3NcIn0se2lkOlwiZmVkb3JhXCJ9LCh7aWQ6bH0pPT4oe3RhcmdldERpc3RybzpcInJoZWxcIixmYW1pbHlEaXN0cm86XCJyaGVsXCIsb3JpZ2luYWxEaXN0cm86bH0pKS53aGVuKCh7aWRMaWtlOmx9KT0+bC5pbmNsdWRlcyhcImRlYmlhblwiKXx8bC5pbmNsdWRlcyhcInVidW50dVwiKSwoe2lkOmx9KT0+KHt0YXJnZXREaXN0cm86XCJkZWJpYW5cIixmYW1pbHlEaXN0cm86XCJkZWJpYW5cIixvcmlnaW5hbERpc3RybzpsfSkpLndoZW4oKHtpZExpa2U6bH0pPT5pPT09XCJhcmNoXCJ8fGwuaW5jbHVkZXMoXCJhcmNoXCIpLCh7aWQ6bH0pPT4oe3RhcmdldERpc3RybzpcImRlYmlhblwiLGZhbWlseURpc3RybzpcImFyY2hcIixvcmlnaW5hbERpc3RybzpsfSkpLndoZW4oKHtpZExpa2U6bH0pPT5sLmluY2x1ZGVzKFwiY2VudG9zXCIpfHxsLmluY2x1ZGVzKFwiZmVkb3JhXCIpfHxsLmluY2x1ZGVzKFwicmhlbFwiKXx8bC5pbmNsdWRlcyhcInN1c2VcIiksKHtpZDpsfSk9Pih7dGFyZ2V0RGlzdHJvOlwicmhlbFwiLGZhbWlseURpc3RybzpcInJoZWxcIixvcmlnaW5hbERpc3RybzpsfSkpLm90aGVyd2lzZSgoe2lkOmx9KT0+KHt0YXJnZXREaXN0cm86dm9pZCAwLGZhbWlseURpc3Rybzp2b2lkIDAsb3JpZ2luYWxEaXN0cm86bH0pKTtyZXR1cm4gZGUoYEZvdW5kIGRpc3RybyBpbmZvOlxuJHtKU09OLnN0cmluZ2lmeShhLG51bGwsMil9YCksYX1hc3luYyBmdW5jdGlvbiBmYygpe2xldCBlPVwiL2V0Yy9vcy1yZWxlYXNlXCI7dHJ5e2xldCB0PWF3YWl0IEFpLmRlZmF1bHQucmVhZEZpbGUoZSx7ZW5jb2Rpbmc6XCJ1dGYtOFwifSk7cmV0dXJuIG1jKHQpfWNhdGNoe3JldHVybnt0YXJnZXREaXN0cm86dm9pZCAwLGZhbWlseURpc3Rybzp2b2lkIDAsb3JpZ2luYWxEaXN0cm86dm9pZCAwfX19ZnVuY3Rpb24gZ2MoZSl7bGV0IHQ9L15PcGVuU1NMXFxzKFxcZCtcXC5cXGQrKVxcLlxcZCsvLmV4ZWMoZSk7aWYodCl7bGV0IHI9YCR7dFsxXX0ueGA7cmV0dXJuIFNzKHIpfX1mdW5jdGlvbiBUcyhlKXtsZXQgdD0vbGlic3NsXFwuc29cXC4oXFxkKShcXC5cXGQpPy8uZXhlYyhlKTtpZih0KXtsZXQgcj1gJHt0WzFdfSR7dFsyXT8/XCIuMFwifS54YDtyZXR1cm4gU3Mocil9fWZ1bmN0aW9uIFNzKGUpe2xldCB0PSgoKT0+e2lmKGtzKGUpKXJldHVybiBlO2xldCByPWUuc3BsaXQoXCIuXCIpO3JldHVybiByWzFdPVwiMFwiLHIuam9pbihcIi5cIil9KSgpO2lmKGRjLmluY2x1ZGVzKHQpKXJldHVybiB0fWZ1bmN0aW9uIHljKGUpe3JldHVybiBTdChlKS53aXRoKHtmYW1pbHlEaXN0cm86XCJtdXNsXCJ9LCgpPT4oZGUoJ1RyeWluZyBwbGF0Zm9ybS1zcGVjaWZpYyBwYXRocyBmb3IgXCJhbHBpbmVcIicpLFtcIi9saWJcIl0pKS53aXRoKHtmYW1pbHlEaXN0cm86XCJkZWJpYW5cIn0sKHthcmNoRnJvbVVuYW1lOnR9KT0+KGRlKCdUcnlpbmcgcGxhdGZvcm0tc3BlY2lmaWMgcGF0aHMgZm9yIFwiZGViaWFuXCIgKGFuZCBcInVidW50dVwiKScpLFtgL3Vzci9saWIvJHt0fS1saW51eC1nbnVgLGAvbGliLyR7dH0tbGludXgtZ251YF0pKS53aXRoKHtmYW1pbHlEaXN0cm86XCJyaGVsXCJ9LCgpPT4oZGUoJ1RyeWluZyBwbGF0Zm9ybS1zcGVjaWZpYyBwYXRocyBmb3IgXCJyaGVsXCInKSxbXCIvbGliNjRcIixcIi91c3IvbGliNjRcIl0pKS5vdGhlcndpc2UoKHtmYW1pbHlEaXN0cm86dCxhcmNoOnIsYXJjaEZyb21VbmFtZTpufSk9PihkZShgRG9uJ3Qga25vdyBhbnkgcGxhdGZvcm0tc3BlY2lmaWMgcGF0aHMgZm9yIFwiJHt0fVwiIG9uICR7cn0gKCR7bn0pYCksW10pKX1hc3luYyBmdW5jdGlvbiBoYyhlKXtsZXQgdD0nZ3JlcCAtdiBcImxpYnNzbC5zby4wXCInLHI9YXdhaXQgQ3MoZSk7aWYocil7ZGUoYEZvdW5kIGxpYnNzbC5zbyBmaWxlIHVzaW5nIHBsYXRmb3JtLXNwZWNpZmljIHBhdGhzOiAke3J9YCk7bGV0IG89VHMocik7aWYoZGUoYFRoZSBwYXJzZWQgbGlic3NsIHZlcnNpb24gaXM6ICR7b31gKSxvKXJldHVybntsaWJzc2w6byxzdHJhdGVneTpcImxpYnNzbC1zcGVjaWZpYy1wYXRoXCJ9fWRlKCdGYWxsaW5nIGJhY2sgdG8gXCJsZGNvbmZpZ1wiIGFuZCBvdGhlciBnZW5lcmljIHBhdGhzJyk7bGV0IG49YXdhaXQgc24oYGxkY29uZmlnIC1wIHwgc2VkIFwicy8uKj0+cyovL1wiIHwgc2VkIFwic3wuKi98fFwiIHwgZ3JlcCBsaWJzc2wgfCBzb3J0IHwgJHt0fWApO2lmKG58fChuPWF3YWl0IENzKFtcIi9saWI2NFwiLFwiL3Vzci9saWI2NFwiLFwiL2xpYlwiXSkpLG4pe2RlKGBGb3VuZCBsaWJzc2wuc28gZmlsZSB1c2luZyBcImxkY29uZmlnXCIgb3Igb3RoZXIgZ2VuZXJpYyBwYXRoczogJHtufWApO2xldCBvPVRzKG4pO2lmKGRlKGBUaGUgcGFyc2VkIGxpYnNzbCB2ZXJzaW9uIGlzOiAke299YCksbylyZXR1cm57bGlic3NsOm8sc3RyYXRlZ3k6XCJsZGNvbmZpZ1wifX1sZXQgaT1hd2FpdCBzbihcIm9wZW5zc2wgdmVyc2lvbiAtdlwiKTtpZihpKXtkZShgRm91bmQgb3BlbnNzbCBiaW5hcnkgd2l0aCB2ZXJzaW9uOiAke2l9YCk7bGV0IG89Z2MoaSk7aWYoZGUoYFRoZSBwYXJzZWQgb3BlbnNzbCB2ZXJzaW9uIGlzOiAke299YCksbylyZXR1cm57bGlic3NsOm8sc3RyYXRlZ3k6XCJvcGVuc3NsLWJpbmFyeVwifX1yZXR1cm4gZGUoXCJDb3VsZG4ndCBmaW5kIGFueSB2ZXJzaW9uIG9mIGxpYnNzbCBvciBPcGVuU1NMIGluIHRoZSBzeXN0ZW1cIikse319YXN5bmMgZnVuY3Rpb24gQ3MoZSl7Zm9yKGxldCB0IG9mIGUpe2xldCByPWF3YWl0IGJjKHQpO2lmKHIpcmV0dXJuIHJ9fWFzeW5jIGZ1bmN0aW9uIGJjKGUpe3RyeXtyZXR1cm4oYXdhaXQgQWkuZGVmYXVsdC5yZWFkZGlyKGUpKS5maW5kKHI9PnIuc3RhcnRzV2l0aChcImxpYnNzbC5zby5cIikmJiFyLnN0YXJ0c1dpdGgoXCJsaWJzc2wuc28uMFwiKSl9Y2F0Y2godCl7aWYodC5jb2RlPT09XCJFTk9FTlRcIilyZXR1cm47dGhyb3cgdH19YXN5bmMgZnVuY3Rpb24gZnQoKXtsZXR7YmluYXJ5VGFyZ2V0OmV9PWF3YWl0IElzKCk7cmV0dXJuIGV9ZnVuY3Rpb24geGMoZSl7cmV0dXJuIGUuYmluYXJ5VGFyZ2V0IT09dm9pZCAwfWFzeW5jIGZ1bmN0aW9uIFJpKCl7bGV0e21lbW9pemVkOmUsLi4udH09YXdhaXQgSXMoKTtyZXR1cm4gdH12YXIgbm49e307YXN5bmMgZnVuY3Rpb24gSXMoKXtpZih4YyhubikpcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7Li4ubm4sbWVtb2l6ZWQ6ITB9KTtsZXQgZT1hd2FpdCBNcygpLHQ9d2MoZSk7cmV0dXJuIG5uPXsuLi5lLGJpbmFyeVRhcmdldDp0fSx7Li4ubm4sbWVtb2l6ZWQ6ITF9fWZ1bmN0aW9uIHdjKGUpe2xldHtwbGF0Zm9ybTp0LGFyY2g6cixhcmNoRnJvbVVuYW1lOm4sbGlic3NsOmksdGFyZ2V0RGlzdHJvOm8sZmFtaWx5RGlzdHJvOnMsb3JpZ2luYWxEaXN0cm86YX09ZTt0PT09XCJsaW51eFwiJiYhW1wieDY0XCIsXCJhcm02NFwiXS5pbmNsdWRlcyhyKSYmbnIoYFByaXNtYSBvbmx5IG9mZmljaWFsbHkgc3VwcG9ydHMgTGludXggb24gYW1kNjQgKHg4Nl82NCkgYW5kIGFybTY0IChhYXJjaDY0KSBzeXN0ZW0gYXJjaGl0ZWN0dXJlcy4gSWYgeW91IGFyZSB1c2luZyB5b3VyIG93biBjdXN0b20gUHJpc21hIGVuZ2luZXMsIHlvdSBjYW4gaWdub3JlIHRoaXMgd2FybmluZywgYXMgbG9uZyBhcyB5b3UndmUgY29tcGlsZWQgdGhlIGVuZ2luZXMgZm9yIHlvdXIgc3lzdGVtIGFyY2hpdGVjdHVyZSBcIiR7bn1cIi5gKTtsZXQgbD1cIjEuMS54XCI7aWYodD09PVwibGludXhcIiYmaT09PXZvaWQgMCl7bGV0IGM9U3Qoe2ZhbWlseURpc3RybzpzfSkud2l0aCh7ZmFtaWx5RGlzdHJvOlwiZGViaWFuXCJ9LCgpPT5cIlBsZWFzZSBtYW51YWxseSBpbnN0YWxsIE9wZW5TU0wgdmlhIGBhcHQtZ2V0IHVwZGF0ZSAteSAmJiBhcHQtZ2V0IGluc3RhbGwgLXkgb3BlbnNzbGAgYW5kIHRyeSBpbnN0YWxsaW5nIFByaXNtYSBhZ2Fpbi4gSWYgeW91J3JlIHJ1bm5pbmcgUHJpc21hIG9uIERvY2tlciwgYWRkIHRoaXMgY29tbWFuZCB0byB5b3VyIERvY2tlcmZpbGUsIG9yIHN3aXRjaCB0byBhbiBpbWFnZSB0aGF0IGFscmVhZHkgaGFzIE9wZW5TU0wgaW5zdGFsbGVkLlwiKS5vdGhlcndpc2UoKCk9PlwiUGxlYXNlIG1hbnVhbGx5IGluc3RhbGwgT3BlblNTTCBhbmQgdHJ5IGluc3RhbGxpbmcgUHJpc21hIGFnYWluLlwiKTtucihgUHJpc21hIGZhaWxlZCB0byBkZXRlY3QgdGhlIGxpYnNzbC9vcGVuc3NsIHZlcnNpb24gdG8gdXNlLCBhbmQgbWF5IG5vdCB3b3JrIGFzIGV4cGVjdGVkLiBEZWZhdWx0aW5nIHRvIFwib3BlbnNzbC0ke2x9XCIuXG4ke2N9YCl9bGV0IHU9XCJkZWJpYW5cIjtpZih0PT09XCJsaW51eFwiJiZvPT09dm9pZCAwJiZucihgUHJpc21hIGRvZXNuJ3Qga25vdyB3aGljaCBlbmdpbmVzIHRvIGRvd25sb2FkIGZvciB0aGUgTGludXggZGlzdHJvIFwiJHthfVwiLiBGYWxsaW5nIGJhY2sgdG8gUHJpc21hIGVuZ2luZXMgYnVpbHQgXCIke3V9XCIuXG5QbGVhc2UgcmVwb3J0IHlvdXIgZXhwZXJpZW5jZSBieSBjcmVhdGluZyBhbiBpc3N1ZSBhdCAke3JyKFwiaHR0cHM6Ly9naXRodWIuY29tL3ByaXNtYS9wcmlzbWEvaXNzdWVzXCIpfSBzbyB3ZSBjYW4gYWRkIHlvdXIgZGlzdHJvIHRvIHRoZSBsaXN0IG9mIGtub3duIHN1cHBvcnRlZCBkaXN0cm9zLmApLHQ9PT1cImRhcndpblwiJiZyPT09XCJhcm02NFwiKXJldHVyblwiZGFyd2luLWFybTY0XCI7aWYodD09PVwiZGFyd2luXCIpcmV0dXJuXCJkYXJ3aW5cIjtpZih0PT09XCJ3aW4zMlwiKXJldHVyblwid2luZG93c1wiO2lmKHQ9PT1cImZyZWVic2RcIilyZXR1cm4gbztpZih0PT09XCJvcGVuYnNkXCIpcmV0dXJuXCJvcGVuYnNkXCI7aWYodD09PVwibmV0YnNkXCIpcmV0dXJuXCJuZXRic2RcIjtpZih0PT09XCJsaW51eFwiJiZvPT09XCJuaXhvc1wiKXJldHVyblwibGludXgtbml4b3NcIjtpZih0PT09XCJsaW51eFwiJiZyPT09XCJhcm02NFwiKXJldHVybmAke289PT1cIm11c2xcIj9cImxpbnV4LW11c2wtYXJtNjRcIjpcImxpbnV4LWFybTY0XCJ9LW9wZW5zc2wtJHtpfHxsfWA7aWYodD09PVwibGludXhcIiYmcj09PVwiYXJtXCIpcmV0dXJuYGxpbnV4LWFybS1vcGVuc3NsLSR7aXx8bH1gO2lmKHQ9PT1cImxpbnV4XCImJm89PT1cIm11c2xcIil7bGV0IGM9XCJsaW51eC1tdXNsXCI7cmV0dXJuIWl8fGtzKGkpP2M6YCR7Y30tb3BlbnNzbC0ke2l9YH1yZXR1cm4gdD09PVwibGludXhcIiYmbyYmaT9gJHtvfS1vcGVuc3NsLSR7aX1gOih0IT09XCJsaW51eFwiJiZucihgUHJpc21hIGRldGVjdGVkIHVua25vd24gT1MgXCIke3R9XCIgYW5kIG1heSBub3Qgd29yayBhcyBleHBlY3RlZC4gRGVmYXVsdGluZyB0byBcImxpbnV4XCIuYCksaT9gJHt1fS1vcGVuc3NsLSR7aX1gOm8/YCR7b30tb3BlbnNzbC0ke2x9YDpgJHt1fS1vcGVuc3NsLSR7bH1gKX1hc3luYyBmdW5jdGlvbiBFYyhlKXt0cnl7cmV0dXJuIGF3YWl0IGUoKX1jYXRjaHtyZXR1cm59fWZ1bmN0aW9uIHNuKGUpe3JldHVybiBFYyhhc3luYygpPT57bGV0IHQ9YXdhaXQgcGMoZSk7cmV0dXJuIGRlKGBDb21tYW5kIFwiJHtlfVwiIHN1Y2Nlc3NmdWxseSByZXR1cm5lZCBcIiR7dC5zdGRvdXR9XCJgKSx0LnN0ZG91dH0pfWFzeW5jIGZ1bmN0aW9uIFBjKCl7cmV0dXJuIHR5cGVvZiBvbi5kZWZhdWx0Lm1hY2hpbmU9PVwiZnVuY3Rpb25cIj9vbi5kZWZhdWx0Lm1hY2hpbmUoKTooYXdhaXQgc24oXCJ1bmFtZSAtbVwiKSk/LnRyaW0oKX1mdW5jdGlvbiBrcyhlKXtyZXR1cm4gZS5zdGFydHNXaXRoKFwiMS5cIil9dmFyIE1pPVtcImRhcndpblwiLFwiZGFyd2luLWFybTY0XCIsXCJkZWJpYW4tb3BlbnNzbC0xLjAueFwiLFwiZGViaWFuLW9wZW5zc2wtMS4xLnhcIixcImRlYmlhbi1vcGVuc3NsLTMuMC54XCIsXCJyaGVsLW9wZW5zc2wtMS4wLnhcIixcInJoZWwtb3BlbnNzbC0xLjEueFwiLFwicmhlbC1vcGVuc3NsLTMuMC54XCIsXCJsaW51eC1hcm02NC1vcGVuc3NsLTEuMS54XCIsXCJsaW51eC1hcm02NC1vcGVuc3NsLTEuMC54XCIsXCJsaW51eC1hcm02NC1vcGVuc3NsLTMuMC54XCIsXCJsaW51eC1hcm0tb3BlbnNzbC0xLjEueFwiLFwibGludXgtYXJtLW9wZW5zc2wtMS4wLnhcIixcImxpbnV4LWFybS1vcGVuc3NsLTMuMC54XCIsXCJsaW51eC1tdXNsXCIsXCJsaW51eC1tdXNsLW9wZW5zc2wtMy4wLnhcIixcImxpbnV4LW11c2wtYXJtNjQtb3BlbnNzbC0xLjEueFwiLFwibGludXgtbXVzbC1hcm02NC1vcGVuc3NsLTMuMC54XCIsXCJsaW51eC1uaXhvc1wiLFwibGludXgtc3RhdGljLXg2NFwiLFwibGludXgtc3RhdGljLWFybTY0XCIsXCJ3aW5kb3dzXCIsXCJmcmVlYnNkMTFcIixcImZyZWVic2QxMlwiLFwiZnJlZWJzZDEzXCIsXCJvcGVuYnNkXCIsXCJuZXRic2RcIixcImFybVwiXTt2YXIga2k9RihEcygpKSx1bj1GKHJlcXVpcmUoXCJmc1wiKSk7dmFyIEZ0PUYocmVxdWlyZShcInBhdGhcIikpO2Z1bmN0aW9uIE5zKGUpe2xldCB0PWUuaWdub3JlUHJvY2Vzc0Vudj97fTpwcm9jZXNzLmVudixyPW49Pm4ubWF0Y2goLyguP1xcJHsoPzpbYS16QS1aMC05X10rKT99KS9nKT8ucmVkdWNlKGZ1bmN0aW9uKG8scyl7bGV0IGE9LyguPylcXCR7KFthLXpBLVowLTlfXSspP30vZy5leGVjKHMpO2lmKCFhKXJldHVybiBvO2xldCBsPWFbMV0sdSxjO2lmKGw9PT1cIlxcXFxcIiljPWFbMF0sdT1jLnJlcGxhY2UoXCJcXFxcJFwiLFwiJFwiKTtlbHNle2xldCBwPWFbMl07Yz1hWzBdLnN1YnN0cmluZyhsLmxlbmd0aCksdT1PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LHApP3RbcF06ZS5wYXJzZWRbcF18fFwiXCIsdT1yKHUpfXJldHVybiBvLnJlcGxhY2UoYyx1KX0sbik/P247Zm9yKGxldCBuIGluIGUucGFyc2VkKXtsZXQgaT1PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pP3Rbbl06ZS5wYXJzZWRbbl07ZS5wYXJzZWRbbl09cihpKX1mb3IobGV0IG4gaW4gZS5wYXJzZWQpdFtuXT1lLnBhcnNlZFtuXTtyZXR1cm4gZX12YXIgSWk9JChcInByaXNtYTp0cnlMb2FkRW52XCIpO2Z1bmN0aW9uIGlyKHtyb290RW52UGF0aDplLHNjaGVtYUVudlBhdGg6dH0scj17Y29uZmxpY3RDaGVjazpcIm5vbmVcIn0pe2xldCBuPUxzKGUpO3IuY29uZmxpY3RDaGVjayE9PVwibm9uZVwiJiZrYyhuLHQsci5jb25mbGljdENoZWNrKTtsZXQgaT1udWxsO3JldHVybiAkcyhuPy5wYXRoLHQpfHwoaT1Mcyh0KSksIW4mJiFpJiZJaShcIk5vIEVudmlyb25tZW50IHZhcmlhYmxlcyBsb2FkZWRcIiksaT8uZG90ZW52UmVzdWx0LmVycm9yP2NvbnNvbGUuZXJyb3IodmUocGUoXCJTY2hlbWEgRW52IEVycm9yOiBcIikpK2kuZG90ZW52UmVzdWx0LmVycm9yKTp7bWVzc2FnZTpbbj8ubWVzc2FnZSxpPy5tZXNzYWdlXS5maWx0ZXIoQm9vbGVhbikuam9pbihgXG5gKSxwYXJzZWQ6ey4uLm4/LmRvdGVudlJlc3VsdD8ucGFyc2VkLC4uLmk/LmRvdGVudlJlc3VsdD8ucGFyc2VkfX19ZnVuY3Rpb24ga2MoZSx0LHIpe2xldCBuPWU/LmRvdGVudlJlc3VsdC5wYXJzZWQsaT0hJHMoZT8ucGF0aCx0KTtpZihuJiZ0JiZpJiZ1bi5kZWZhdWx0LmV4aXN0c1N5bmModCkpe2xldCBvPWtpLmRlZmF1bHQucGFyc2UodW4uZGVmYXVsdC5yZWFkRmlsZVN5bmModCkpLHM9W107Zm9yKGxldCBhIGluIG8pblthXT09PW9bYV0mJnMucHVzaChhKTtpZihzLmxlbmd0aD4wKXtsZXQgYT1GdC5kZWZhdWx0LnJlbGF0aXZlKHByb2Nlc3MuY3dkKCksZS5wYXRoKSxsPUZ0LmRlZmF1bHQucmVsYXRpdmUocHJvY2Vzcy5jd2QoKSx0KTtpZihyPT09XCJlcnJvclwiKXtsZXQgdT1gVGhlcmUgaXMgYSBjb25mbGljdCBiZXR3ZWVuIGVudiB2YXIke3MubGVuZ3RoPjE/XCJzXCI6XCJcIn0gaW4gJHt1ZShhKX0gYW5kICR7dWUobCl9XG5Db25mbGljdGluZyBlbnYgdmFyczpcbiR7cy5tYXAoYz0+YCAgJHtwZShjKX1gKS5qb2luKGBcbmApfVxuXG5XZSBzdWdnZXN0IHRvIG1vdmUgdGhlIGNvbnRlbnRzIG9mICR7dWUobCl9IHRvICR7dWUoYSl9IHRvIGNvbnNvbGlkYXRlIHlvdXIgZW52IHZhcnMuXG5gO3Rocm93IG5ldyBFcnJvcih1KX1lbHNlIGlmKHI9PT1cIndhcm5cIil7bGV0IHU9YENvbmZsaWN0IGZvciBlbnYgdmFyJHtzLmxlbmd0aD4xP1wic1wiOlwiXCJ9ICR7cy5tYXAoYz0+cGUoYykpLmpvaW4oXCIsIFwiKX0gaW4gJHt1ZShhKX0gYW5kICR7dWUobCl9XG5FbnYgdmFycyBmcm9tICR7dWUobCl9IG92ZXJ3cml0ZSB0aGUgb25lcyBmcm9tICR7dWUoYSl9XG4gICAgICBgO2NvbnNvbGUud2FybihgJHtSZShcIndhcm4ocHJpc21hKVwiKX0gJHt1fWApfX19fWZ1bmN0aW9uIExzKGUpe2lmKEZjKGUpKXtJaShgRW52aXJvbm1lbnQgdmFyaWFibGVzIGxvYWRlZCBmcm9tICR7ZX1gKTtsZXQgdD1raS5kZWZhdWx0LmNvbmZpZyh7cGF0aDplLGRlYnVnOnByb2Nlc3MuZW52LkRPVEVOVl9DT05GSUdfREVCVUc/ITA6dm9pZCAwfSk7cmV0dXJue2RvdGVudlJlc3VsdDpOcyh0KSxtZXNzYWdlOldlKGBFbnZpcm9ubWVudCB2YXJpYWJsZXMgbG9hZGVkIGZyb20gJHtGdC5kZWZhdWx0LnJlbGF0aXZlKHByb2Nlc3MuY3dkKCksZSl9YCkscGF0aDplfX1lbHNlIElpKGBFbnZpcm9ubWVudCB2YXJpYWJsZXMgbm90IGZvdW5kIGF0ICR7ZX1gKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiAkcyhlLHQpe3JldHVybiBlJiZ0JiZGdC5kZWZhdWx0LnJlc29sdmUoZSk9PT1GdC5kZWZhdWx0LnJlc29sdmUodCl9ZnVuY3Rpb24gRmMoZSl7cmV0dXJuISEoZSYmdW4uZGVmYXVsdC5leGlzdHNTeW5jKGUpKX12YXIgcXM9XCJsaWJyYXJ5XCI7ZnVuY3Rpb24gZ3QoZSl7bGV0IHQ9T2MoKTtyZXR1cm4gdHx8KGU/LmNvbmZpZy5lbmdpbmVUeXBlPT09XCJsaWJyYXJ5XCI/XCJsaWJyYXJ5XCI6ZT8uY29uZmlnLmVuZ2luZVR5cGU9PT1cImJpbmFyeVwiP1wiYmluYXJ5XCI6ZT8uY29uZmlnLmVuZ2luZVR5cGU9PT1cIndhc21cIj9cIndhc21cIjpxcyl9ZnVuY3Rpb24gT2MoKXtsZXQgZT1wcm9jZXNzLmVudi5QUklTTUFfQ0xJRU5UX0VOR0lORV9UWVBFO3JldHVybiBlPT09XCJsaWJyYXJ5XCI/XCJsaWJyYXJ5XCI6ZT09PVwiYmluYXJ5XCI/XCJiaW5hcnlcIjplPT09XCJ3YXNtXCI/XCJ3YXNtXCI6dm9pZCAwfXZhciBMYz1GKEZpKCkpO3ZhciBqPUYocmVxdWlyZShcInBhdGhcIikpLCRjPUYoRmkoKSkseGg9JChcInByaXNtYTplbmdpbmVzXCIpO2Z1bmN0aW9uIFFzKCl7cmV0dXJuIGouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL1wiKX12YXIgd2g9XCJsaWJxdWVyeS1lbmdpbmVcIjtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9xdWVyeS1lbmdpbmUtZGFyd2luXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL3F1ZXJ5LWVuZ2luZS1kYXJ3aW4tYXJtNjRcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vcXVlcnktZW5naW5lLWRlYmlhbi1vcGVuc3NsLTEuMC54XCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL3F1ZXJ5LWVuZ2luZS1kZWJpYW4tb3BlbnNzbC0xLjEueFwiKTtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9xdWVyeS1lbmdpbmUtZGViaWFuLW9wZW5zc2wtMy4wLnhcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vcXVlcnktZW5naW5lLWxpbnV4LXN0YXRpYy14NjRcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vcXVlcnktZW5naW5lLWxpbnV4LXN0YXRpYy1hcm02NFwiKTtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9xdWVyeS1lbmdpbmUtcmhlbC1vcGVuc3NsLTEuMC54XCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL3F1ZXJ5LWVuZ2luZS1yaGVsLW9wZW5zc2wtMS4xLnhcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vcXVlcnktZW5naW5lLXJoZWwtb3BlbnNzbC0zLjAueFwiKTtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9saWJxdWVyeV9lbmdpbmUtZGFyd2luLmR5bGliLm5vZGVcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vbGlicXVlcnlfZW5naW5lLWRhcndpbi1hcm02NC5keWxpYi5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1kZWJpYW4tb3BlbnNzbC0xLjAueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1kZWJpYW4tb3BlbnNzbC0xLjEueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1kZWJpYW4tb3BlbnNzbC0zLjAueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1saW51eC1hcm02NC1vcGVuc3NsLTEuMC54LnNvLm5vZGVcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vbGlicXVlcnlfZW5naW5lLWxpbnV4LWFybTY0LW9wZW5zc2wtMS4xLnguc28ubm9kZVwiKTtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9saWJxdWVyeV9lbmdpbmUtbGludXgtYXJtNjQtb3BlbnNzbC0zLjAueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1saW51eC1tdXNsLnNvLm5vZGVcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vbGlicXVlcnlfZW5naW5lLWxpbnV4LW11c2wtb3BlbnNzbC0zLjAueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL2xpYnF1ZXJ5X2VuZ2luZS1yaGVsLW9wZW5zc2wtMS4wLnguc28ubm9kZVwiKTtqLmRlZmF1bHQuam9pbihfX2Rpcm5hbWUsXCIuLi9saWJxdWVyeV9lbmdpbmUtcmhlbC1vcGVuc3NsLTEuMS54LnNvLm5vZGVcIik7ai5kZWZhdWx0LmpvaW4oX19kaXJuYW1lLFwiLi4vbGlicXVlcnlfZW5naW5lLXJoZWwtb3BlbnNzbC0zLjAueC5zby5ub2RlXCIpO2ouZGVmYXVsdC5qb2luKF9fZGlybmFtZSxcIi4uL3F1ZXJ5X2VuZ2luZS13aW5kb3dzLmRsbC5ub2RlXCIpO3ZhciBPaT1GKHJlcXVpcmUoXCJmc1wiKSksR3M9JChcImNobW9kUGx1c1hcIik7ZnVuY3Rpb24gRGkoZSl7aWYocHJvY2Vzcy5wbGF0Zm9ybT09PVwid2luMzJcIilyZXR1cm47bGV0IHQ9T2kuZGVmYXVsdC5zdGF0U3luYyhlKSxyPXQubW9kZXw2NHw4fDE7aWYodC5tb2RlPT09cil7R3MoYEV4ZWN1dGlvbiBwZXJtaXNzaW9ucyBvZiAke2V9IGFyZSBmaW5lYCk7cmV0dXJufWxldCBuPXIudG9TdHJpbmcoOCkuc2xpY2UoLTMpO0dzKGBIYXZlIHRvIGNhbGwgY2htb2RQbHVzWCBvbiAke2V9YCksT2kuZGVmYXVsdC5jaG1vZFN5bmMoZSxuKX1mdW5jdGlvbiBOaShlKXtsZXQgdD1lLmUscj1hPT5gUHJpc21hIGNhbm5vdCBmaW5kIHRoZSByZXF1aXJlZCBcXGAke2F9XFxgIHN5c3RlbSBsaWJyYXJ5IGluIHlvdXIgc3lzdGVtYCxuPXQubWVzc2FnZS5pbmNsdWRlcyhcImNhbm5vdCBvcGVuIHNoYXJlZCBvYmplY3QgZmlsZVwiKSxpPWBQbGVhc2UgcmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb24gYWJvdXQgUHJpc21hJ3Mgc3lzdGVtIHJlcXVpcmVtZW50czogJHtycihcImh0dHBzOi8vcHJpcy5seS9kL3N5c3RlbS1yZXF1aXJlbWVudHNcIil9YCxvPWBVbmFibGUgdG8gcmVxdWlyZShcXGAke1dlKGUuaWQpfVxcYCkuYCxzPVN0KHttZXNzYWdlOnQubWVzc2FnZSxjb2RlOnQuY29kZX0pLndpdGgoe2NvZGU6XCJFTk9FTlRcIn0sKCk9PlwiRmlsZSBkb2VzIG5vdCBleGlzdC5cIikud2hlbigoe21lc3NhZ2U6YX0pPT5uJiZhLmluY2x1ZGVzKFwibGlielwiKSwoKT0+YCR7cihcImxpYnpcIil9LiBQbGVhc2UgaW5zdGFsbCBpdCBhbmQgdHJ5IGFnYWluLmApLndoZW4oKHttZXNzYWdlOmF9KT0+biYmYS5pbmNsdWRlcyhcImxpYmdjY19zXCIpLCgpPT5gJHtyKFwibGliZ2NjX3NcIil9LiBQbGVhc2UgaW5zdGFsbCBpdCBhbmQgdHJ5IGFnYWluLmApLndoZW4oKHttZXNzYWdlOmF9KT0+biYmYS5pbmNsdWRlcyhcImxpYnNzbFwiKSwoKT0+e2xldCBhPWUucGxhdGZvcm1JbmZvLmxpYnNzbD9gb3BlbnNzbC0ke2UucGxhdGZvcm1JbmZvLmxpYnNzbH1gOlwib3BlbnNzbFwiO3JldHVybmAke3IoXCJsaWJzc2xcIil9LiBQbGVhc2UgaW5zdGFsbCAke2F9IGFuZCB0cnkgYWdhaW4uYH0pLndoZW4oKHttZXNzYWdlOmF9KT0+YS5pbmNsdWRlcyhcIkdMSUJDXCIpLCgpPT5gUHJpc21hIGhhcyBkZXRlY3RlZCBhbiBpbmNvbXBhdGlibGUgdmVyc2lvbiBvZiB0aGUgXFxgZ2xpYmNcXGAgQyBzdGFuZGFyZCBsaWJyYXJ5IGluc3RhbGxlZCBpbiB5b3VyIHN5c3RlbS4gVGhpcyBwcm9iYWJseSBtZWFucyB5b3VyIHN5c3RlbSBtYXkgYmUgdG9vIG9sZCB0byBydW4gUHJpc21hLiAke2l9YCkud2hlbigoe21lc3NhZ2U6YX0pPT5lLnBsYXRmb3JtSW5mby5wbGF0Zm9ybT09PVwibGludXhcIiYmYS5pbmNsdWRlcyhcInN5bWJvbCBub3QgZm91bmRcIiksKCk9PmBUaGUgUHJpc21hIGVuZ2luZXMgYXJlIG5vdCBjb21wYXRpYmxlIHdpdGggeW91ciBzeXN0ZW0gJHtlLnBsYXRmb3JtSW5mby5vcmlnaW5hbERpc3Ryb30gb24gKCR7ZS5wbGF0Zm9ybUluZm8uYXJjaEZyb21VbmFtZX0pIHdoaWNoIHVzZXMgdGhlIFxcYCR7ZS5wbGF0Zm9ybUluZm8uYmluYXJ5VGFyZ2V0fVxcYCBiaW5hcnlUYXJnZXQgYnkgZGVmYXVsdC4gJHtpfWApLm90aGVyd2lzZSgoKT0+YFRoZSBQcmlzbWEgZW5naW5lcyBkbyBub3Qgc2VlbSB0byBiZSBjb21wYXRpYmxlIHdpdGggeW91ciBzeXN0ZW0uICR7aX1gKTtyZXR1cm5gJHtvfVxuJHtzfVxuXG5EZXRhaWxzOiAke3QubWVzc2FnZX1gfXZhciBvcj1GKHJlcXVpcmUoXCJwYXRoXCIpKTtmdW5jdGlvbiBMaShlKXtyZXR1cm4gb3IuZGVmYXVsdC5zZXA9PT1vci5kZWZhdWx0LnBvc2l4LnNlcD9lOmUuc3BsaXQob3IuZGVmYXVsdC5zZXApLmpvaW4ob3IuZGVmYXVsdC5wb3NpeC5zZXApfXZhciBIcz1GKCRpKCkpO2Z1bmN0aW9uIGppKGUpe3JldHVybiBTdHJpbmcobmV3IHFpKGUpKX12YXIgcWk9Y2xhc3N7Y29uc3RydWN0b3IodCl7dGhpcy5jb25maWc9dH10b1N0cmluZygpe2xldHtjb25maWc6dH09dGhpcyxyPXQucHJvdmlkZXIuZnJvbUVudlZhcj9gZW52KFwiJHt0LnByb3ZpZGVyLmZyb21FbnZWYXJ9XCIpYDp0LnByb3ZpZGVyLnZhbHVlLG49SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh7cHJvdmlkZXI6cixiaW5hcnlUYXJnZXRzOnFjKHQuYmluYXJ5VGFyZ2V0cyl9KSk7cmV0dXJuYGdlbmVyYXRvciAke3QubmFtZX0ge1xuJHsoMCxIcy5kZWZhdWx0KShqYyhuKSwyKX1cbn1gfX07ZnVuY3Rpb24gcWMoZSl7bGV0IHQ7aWYoZS5sZW5ndGg+MCl7bGV0IHI9ZS5maW5kKG49Pm4uZnJvbUVudlZhciE9PW51bGwpO3I/dD1gZW52KFwiJHtyLmZyb21FbnZWYXJ9XCIpYDp0PWUubWFwKG49Pm4ubmF0aXZlP1wibmF0aXZlXCI6bi52YWx1ZSl9ZWxzZSB0PXZvaWQgMDtyZXR1cm4gdH1mdW5jdGlvbiBqYyhlKXtsZXQgdD1PYmplY3Qua2V5cyhlKS5yZWR1Y2UoKHIsbik9Pk1hdGgubWF4KHIsbi5sZW5ndGgpLDApO3JldHVybiBPYmplY3QuZW50cmllcyhlKS5tYXAoKFtyLG5dKT0+YCR7ci5wYWRFbmQodCl9ID0gJHtWYyhuKX1gKS5qb2luKGBcbmApfWZ1bmN0aW9uIFZjKGUpe3JldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGUsKHQscik9PkFycmF5LmlzQXJyYXkocik/YFske3IubWFwKG49PkpTT04uc3RyaW5naWZ5KG4pKS5qb2luKFwiLCBcIil9XWA6SlNPTi5zdHJpbmdpZnkocikpKX12YXIgYXI9e307VHQoYXIse2Vycm9yOigpPT5LYyxpbmZvOigpPT5VYyxsb2c6KCk9PkJjLHF1ZXJ5OigpPT5RYyxzaG91bGQ6KCk9PldzLHRhZ3M6KCk9PnNyLHdhcm46KCk9PlZpfSk7dmFyIHNyPXtlcnJvcjp2ZShcInByaXNtYTplcnJvclwiKSx3YXJuOlJlKFwicHJpc21hOndhcm5cIiksaW5mbzp6ZShcInByaXNtYTppbmZvXCIpLHF1ZXJ5Ok10KFwicHJpc21hOnF1ZXJ5XCIpfSxXcz17d2FybjooKT0+IXByb2Nlc3MuZW52LlBSSVNNQV9ESVNBQkxFX1dBUk5JTkdTfTtmdW5jdGlvbiBCYyguLi5lKXtjb25zb2xlLmxvZyguLi5lKX1mdW5jdGlvbiBWaShlLC4uLnQpe1dzLndhcm4oKSYmY29uc29sZS53YXJuKGAke3NyLndhcm59ICR7ZX1gLC4uLnQpfWZ1bmN0aW9uIFVjKGUsLi4udCl7Y29uc29sZS5pbmZvKGAke3NyLmluZm99ICR7ZX1gLC4uLnQpfWZ1bmN0aW9uIEtjKGUsLi4udCl7Y29uc29sZS5lcnJvcihgJHtzci5lcnJvcn0gJHtlfWAsLi4udCl9ZnVuY3Rpb24gUWMoZSwuLi50KXtjb25zb2xlLmxvZyhgJHtzci5xdWVyeX0gJHtlfWAsLi4udCl9ZnVuY3Rpb24gcG4oZSx0KXtpZighZSl0aHJvdyBuZXcgRXJyb3IoYCR7dH0uIFRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbi4gSWYgeW91IHNlZSB0aGlzIGVycm9yLCBwbGVhc2UsIG9wZW4gYW4gaXNzdWUgYXQgaHR0cHM6Ly9wcmlzLmx5L3ByaXNtYS1wcmlzbWEtYnVnLXJlcG9ydGApfWZ1bmN0aW9uIHl0KGUsdCl7dGhyb3cgbmV3IEVycm9yKHQpfWZ1bmN0aW9uIFVpKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfXZhciBLaT0oZSx0KT0+ZS5yZWR1Y2UoKHIsbik9PihyW3QobildPW4scikse30pO2Z1bmN0aW9uIE90KGUsdCl7bGV0IHI9e307Zm9yKGxldCBuIG9mIE9iamVjdC5rZXlzKGUpKXJbbl09dChlW25dLG4pO3JldHVybiByfWZ1bmN0aW9uIFFpKGUsdCl7aWYoZS5sZW5ndGg9PT0wKXJldHVybjtsZXQgcj1lWzBdO2ZvcihsZXQgbj0xO248ZS5sZW5ndGg7bisrKXQocixlW25dKTwwJiYocj1lW25dKTtyZXR1cm4gcn1mdW5jdGlvbiB2KGUsdCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJuYW1lXCIse3ZhbHVlOnQsY29uZmlndXJhYmxlOiEwfSl9dmFyIGVhPW5ldyBTZXQsbHI9KGUsdCwuLi5yKT0+e2VhLmhhcyhlKXx8KGVhLmFkZChlKSxWaSh0LC4uLnIpKX07dmFyIEg9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihyLHtjb2RlOm4sY2xpZW50VmVyc2lvbjppLG1ldGE6byxiYXRjaFJlcXVlc3RJZHg6c30pe3N1cGVyKHIpO3RoaXMubmFtZT1cIlByaXNtYUNsaWVudEtub3duUmVxdWVzdEVycm9yXCIsdGhpcy5jb2RlPW4sdGhpcy5jbGllbnRWZXJzaW9uPWksdGhpcy5tZXRhPW8sT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJiYXRjaFJlcXVlc3RJZHhcIix7dmFsdWU6cyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfSl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm5cIlByaXNtYUNsaWVudEtub3duUmVxdWVzdEVycm9yXCJ9fTt2KEgsXCJQcmlzbWFDbGllbnRLbm93blJlcXVlc3RFcnJvclwiKTt2YXIgQmU9Y2xhc3MgZXh0ZW5kcyBIe2NvbnN0cnVjdG9yKHQscil7c3VwZXIodCx7Y29kZTpcIlAyMDI1XCIsY2xpZW50VmVyc2lvbjpyfSksdGhpcy5uYW1lPVwiTm90Rm91bmRFcnJvclwifX07dihCZSxcIk5vdEZvdW5kRXJyb3JcIik7dmFyIGs9Y2xhc3MgZSBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHIsbixpKXtzdXBlcihyKTt0aGlzLm5hbWU9XCJQcmlzbWFDbGllbnRJbml0aWFsaXphdGlvbkVycm9yXCIsdGhpcy5jbGllbnRWZXJzaW9uPW4sdGhpcy5lcnJvckNvZGU9aSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShlKX1nZXRbU3ltYm9sLnRvU3RyaW5nVGFnXSgpe3JldHVyblwiUHJpc21hQ2xpZW50SW5pdGlhbGl6YXRpb25FcnJvclwifX07dihrLFwiUHJpc21hQ2xpZW50SW5pdGlhbGl6YXRpb25FcnJvclwiKTt2YXIgYmU9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihyLG4pe3N1cGVyKHIpO3RoaXMubmFtZT1cIlByaXNtYUNsaWVudFJ1c3RQYW5pY0Vycm9yXCIsdGhpcy5jbGllbnRWZXJzaW9uPW59Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm5cIlByaXNtYUNsaWVudFJ1c3RQYW5pY0Vycm9yXCJ9fTt2KGJlLFwiUHJpc21hQ2xpZW50UnVzdFBhbmljRXJyb3JcIik7dmFyIFc9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihyLHtjbGllbnRWZXJzaW9uOm4sYmF0Y2hSZXF1ZXN0SWR4Oml9KXtzdXBlcihyKTt0aGlzLm5hbWU9XCJQcmlzbWFDbGllbnRVbmtub3duUmVxdWVzdEVycm9yXCIsdGhpcy5jbGllbnRWZXJzaW9uPW4sT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJiYXRjaFJlcXVlc3RJZHhcIix7dmFsdWU6aSx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm5cIlByaXNtYUNsaWVudFVua25vd25SZXF1ZXN0RXJyb3JcIn19O3YoVyxcIlByaXNtYUNsaWVudFVua25vd25SZXF1ZXN0RXJyb3JcIik7dmFyIHNlPWNsYXNzIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3Iocix7Y2xpZW50VmVyc2lvbjpufSl7c3VwZXIocik7dGhpcy5uYW1lPVwiUHJpc21hQ2xpZW50VmFsaWRhdGlvbkVycm9yXCI7dGhpcy5jbGllbnRWZXJzaW9uPW59Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm5cIlByaXNtYUNsaWVudFZhbGlkYXRpb25FcnJvclwifX07dihzZSxcIlByaXNtYUNsaWVudFZhbGlkYXRpb25FcnJvclwiKTt2YXIgRHQ9Y2xhc3N7Y29uc3RydWN0b3IodCl7dGhpcy5fZW5naW5lPXR9cHJvbWV0aGV1cyh0KXtyZXR1cm4gdGhpcy5fZW5naW5lLm1ldHJpY3Moe2Zvcm1hdDpcInByb21ldGhldXNcIiwuLi50fSl9anNvbih0KXtyZXR1cm4gdGhpcy5fZW5naW5lLm1ldHJpY3Moe2Zvcm1hdDpcImpzb25cIiwuLi50fSl9fTtmdW5jdGlvbiBjcihlKXtsZXQgdDtyZXR1cm57Z2V0KCl7cmV0dXJuIHR8fCh0PXt2YWx1ZTplKCl9KSx0LnZhbHVlfX19ZnVuY3Rpb24gdGEoZSx0KXtsZXQgcj1jcigoKT0+SmModCkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiZG1tZlwiLHtnZXQ6KCk9PnIuZ2V0KCl9KX1mdW5jdGlvbiBKYyhlKXtyZXR1cm57ZGF0YW1vZGVsOnttb2RlbHM6R2koZS5tb2RlbHMpLGVudW1zOkdpKGUuZW51bXMpLHR5cGVzOkdpKGUudHlwZXMpfX19ZnVuY3Rpb24gR2koZSl7cmV0dXJuIE9iamVjdC5lbnRyaWVzKGUpLm1hcCgoW3Qscl0pPT4oe25hbWU6dCwuLi5yfSkpfXZhciBIYz1bXCIkY29ubmVjdFwiLFwiJGRpc2Nvbm5lY3RcIixcIiRvblwiLFwiJHRyYW5zYWN0aW9uXCIsXCIkdXNlXCIsXCIkZXh0ZW5kc1wiXSxKaT1IYzt2YXIgV2M9W1wiSnNvbk51bGxWYWx1ZUlucHV0XCIsXCJOdWxsYWJsZUpzb25OdWxsVmFsdWVJbnB1dFwiLFwiSnNvbk51bGxWYWx1ZUZpbHRlclwiXSxtbj1TeW1ib2woKSxIaT1uZXcgV2Vha01hcCxrZT1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0PT09bW4/SGkuc2V0KHRoaXMsYFByaXNtYS4ke3RoaXMuX2dldE5hbWUoKX1gKTpIaS5zZXQodGhpcyxgbmV3IFByaXNtYS4ke3RoaXMuX2dldE5hbWVzcGFjZSgpfS4ke3RoaXMuX2dldE5hbWUoKX0oKWApfV9nZXROYW1lKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZX10b1N0cmluZygpe3JldHVybiBIaS5nZXQodGhpcyl9fSxwcj1jbGFzcyBleHRlbmRzIGtle19nZXROYW1lc3BhY2UoKXtyZXR1cm5cIk51bGxUeXBlc1wifX0sZHI9Y2xhc3MgZXh0ZW5kcyBwcnt9O1dpKGRyLFwiRGJOdWxsXCIpO3ZhciBtcj1jbGFzcyBleHRlbmRzIHBye307V2kobXIsXCJKc29uTnVsbFwiKTt2YXIgZnI9Y2xhc3MgZXh0ZW5kcyBwcnt9O1dpKGZyLFwiQW55TnVsbFwiKTt2YXIgZm49e2NsYXNzZXM6e0RiTnVsbDpkcixKc29uTnVsbDptcixBbnlOdWxsOmZyfSxpbnN0YW5jZXM6e0RiTnVsbDpuZXcgZHIobW4pLEpzb25OdWxsOm5ldyBtcihtbiksQW55TnVsbDpuZXcgZnIobW4pfX07ZnVuY3Rpb24gV2koZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIm5hbWVcIix7dmFsdWU6dCxjb25maWd1cmFibGU6ITB9KX1mdW5jdGlvbiBnbihlKXtyZXR1cm57b2s6ITEsZXJyb3I6ZSxtYXAoKXtyZXR1cm4gZ24oZSl9LGZsYXRNYXAoKXtyZXR1cm4gZ24oZSl9fX12YXIgemk9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLnJlZ2lzdGVyZWRFcnJvcnM9W119Y29uc3VtZUVycm9yKHQpe3JldHVybiB0aGlzLnJlZ2lzdGVyZWRFcnJvcnNbdF19cmVnaXN0ZXJOZXdFcnJvcih0KXtsZXQgcj0wO2Zvcig7dGhpcy5yZWdpc3RlcmVkRXJyb3JzW3JdIT09dm9pZCAwOylyKys7cmV0dXJuIHRoaXMucmVnaXN0ZXJlZEVycm9yc1tyXT17ZXJyb3I6dH0scn19LFlpPWU9PntsZXQgdD1uZXcgemkscj1odCh0LGUuc3RhcnRUcmFuc2FjdGlvbi5iaW5kKGUpKTtyZXR1cm57ZXJyb3JSZWdpc3RyeTp0LHF1ZXJ5UmF3Omh0KHQsZS5xdWVyeVJhdy5iaW5kKGUpKSxleGVjdXRlUmF3Omh0KHQsZS5leGVjdXRlUmF3LmJpbmQoZSkpLHByb3ZpZGVyOmUucHJvdmlkZXIsc3RhcnRUcmFuc2FjdGlvbjphc3luYyguLi5uKT0+KGF3YWl0IHIoLi4ubikpLm1hcChvPT56Yyh0LG8pKX19LHpjPShlLHQpPT4oe3Byb3ZpZGVyOnQucHJvdmlkZXIsb3B0aW9uczp0Lm9wdGlvbnMscXVlcnlSYXc6aHQoZSx0LnF1ZXJ5UmF3LmJpbmQodCkpLGV4ZWN1dGVSYXc6aHQoZSx0LmV4ZWN1dGVSYXcuYmluZCh0KSksY29tbWl0Omh0KGUsdC5jb21taXQuYmluZCh0KSkscm9sbGJhY2s6aHQoZSx0LnJvbGxiYWNrLmJpbmQodCkpfSk7ZnVuY3Rpb24gaHQoZSx0KXtyZXR1cm4gYXN5bmMoLi4ucik9Pnt0cnl7cmV0dXJuIGF3YWl0IHQoLi4ucil9Y2F0Y2gobil7bGV0IGk9ZS5yZWdpc3Rlck5ld0Vycm9yKG4pO3JldHVybiBnbih7a2luZDpcIkdlbmVyaWNKc1wiLGlkOml9KX19fXZhciBFdT1yZXF1aXJlKFwiYXN5bmNfaG9va3NcIiksUHU9cmVxdWlyZShcImV2ZW50c1wiKSx2dT1GKHJlcXVpcmUoXCJmc1wiKSksQnI9RihyZXF1aXJlKFwicGF0aFwiKSk7dmFyIG1lPWNsYXNzIGV7Y29uc3RydWN0b3IodCxyKXtpZih0Lmxlbmd0aC0xIT09ci5sZW5ndGgpdGhyb3cgdC5sZW5ndGg9PT0wP25ldyBUeXBlRXJyb3IoXCJFeHBlY3RlZCBhdCBsZWFzdCAxIHN0cmluZ1wiKTpuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCAke3QubGVuZ3RofSBzdHJpbmdzIHRvIGhhdmUgJHt0Lmxlbmd0aC0xfSB2YWx1ZXNgKTtsZXQgbj1yLnJlZHVjZSgocyxhKT0+cysoYSBpbnN0YW5jZW9mIGU/YS52YWx1ZXMubGVuZ3RoOjEpLDApO3RoaXMudmFsdWVzPW5ldyBBcnJheShuKSx0aGlzLnN0cmluZ3M9bmV3IEFycmF5KG4rMSksdGhpcy5zdHJpbmdzWzBdPXRbMF07bGV0IGk9MCxvPTA7Zm9yKDtpPHIubGVuZ3RoOyl7bGV0IHM9cltpKytdLGE9dFtpXTtpZihzIGluc3RhbmNlb2YgZSl7dGhpcy5zdHJpbmdzW29dKz1zLnN0cmluZ3NbMF07bGV0IGw9MDtmb3IoO2w8cy52YWx1ZXMubGVuZ3RoOyl0aGlzLnZhbHVlc1tvKytdPXMudmFsdWVzW2wrK10sdGhpcy5zdHJpbmdzW29dPXMuc3RyaW5nc1tsXTt0aGlzLnN0cmluZ3Nbb10rPWF9ZWxzZSB0aGlzLnZhbHVlc1tvKytdPXMsdGhpcy5zdHJpbmdzW29dPWF9fWdldCB0ZXh0KCl7bGV0IHQ9dGhpcy5zdHJpbmdzLmxlbmd0aCxyPTEsbj10aGlzLnN0cmluZ3NbMF07Zm9yKDtyPHQ7KW4rPWAkJHtyfSR7dGhpcy5zdHJpbmdzW3IrK119YDtyZXR1cm4gbn1nZXQgc3FsKCl7bGV0IHQ9dGhpcy5zdHJpbmdzLmxlbmd0aCxyPTEsbj10aGlzLnN0cmluZ3NbMF07Zm9yKDtyPHQ7KW4rPWA/JHt0aGlzLnN0cmluZ3NbcisrXX1gO3JldHVybiBufWdldCBzdGF0ZW1lbnQoKXtsZXQgdD10aGlzLnN0cmluZ3MubGVuZ3RoLHI9MSxuPXRoaXMuc3RyaW5nc1swXTtmb3IoO3I8dDspbis9YDoke3J9JHt0aGlzLnN0cmluZ3NbcisrXX1gO3JldHVybiBufWluc3BlY3QoKXtyZXR1cm57dGV4dDp0aGlzLnRleHQsc3FsOnRoaXMuc3FsLHZhbHVlczp0aGlzLnZhbHVlc319fTtmdW5jdGlvbiByYShlLHQ9XCIsXCIscj1cIlwiLG49XCJcIil7aWYoZS5sZW5ndGg9PT0wKXRocm93IG5ldyBUeXBlRXJyb3IoXCJFeHBlY3RlZCBgam9pbihbXSlgIHRvIGJlIGNhbGxlZCB3aXRoIGFuIGFycmF5IG9mIG11bHRpcGxlIGVsZW1lbnRzLCBidXQgZ290IGFuIGVtcHR5IGFycmF5XCIpO3JldHVybiBuZXcgbWUoW3IsLi4uQXJyYXkoZS5sZW5ndGgtMSkuZmlsbCh0KSxuXSxlKX1mdW5jdGlvbiBaaShlKXtyZXR1cm4gbmV3IG1lKFtlXSxbXSl9dmFyIG5hPVppKFwiXCIpO2Z1bmN0aW9uIFhpKGUsLi4udCl7cmV0dXJuIG5ldyBtZShlLHQpfWZ1bmN0aW9uIGdyKGUpe3JldHVybntnZXRLZXlzKCl7cmV0dXJuIE9iamVjdC5rZXlzKGUpfSxnZXRQcm9wZXJ0eVZhbHVlKHQpe3JldHVybiBlW3RdfX19ZnVuY3Rpb24gY2UoZSx0KXtyZXR1cm57Z2V0S2V5cygpe3JldHVybltlXX0sZ2V0UHJvcGVydHlWYWx1ZSgpe3JldHVybiB0KCl9fX12YXIgRmU9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9tYXA9bmV3IE1hcH1nZXQodCl7cmV0dXJuIHRoaXMuX21hcC5nZXQodCk/LnZhbHVlfXNldCh0LHIpe3RoaXMuX21hcC5zZXQodCx7dmFsdWU6cn0pfWdldE9yQ3JlYXRlKHQscil7bGV0IG49dGhpcy5fbWFwLmdldCh0KTtpZihuKXJldHVybiBuLnZhbHVlO2xldCBpPXIoKTtyZXR1cm4gdGhpcy5zZXQodCxpKSxpfX07ZnVuY3Rpb24gYnQoZSl7bGV0IHQ9bmV3IEZlO3JldHVybntnZXRLZXlzKCl7cmV0dXJuIGUuZ2V0S2V5cygpfSxnZXRQcm9wZXJ0eVZhbHVlKHIpe3JldHVybiB0LmdldE9yQ3JlYXRlKHIsKCk9PmUuZ2V0UHJvcGVydHlWYWx1ZShyKSl9LGdldFByb3BlcnR5RGVzY3JpcHRvcihyKXtyZXR1cm4gZS5nZXRQcm9wZXJ0eURlc2NyaXB0b3I/LihyKX19fXZhciBzYT1yZXF1aXJlKFwidXRpbFwiKTt2YXIgeW49e2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfTtmdW5jdGlvbiBobihlKXtsZXQgdD1uZXcgU2V0KGUpO3JldHVybntnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6KCk9PnluLGhhczoocixuKT0+dC5oYXMobiksc2V0OihyLG4saSk9PnQuYWRkKG4pJiZSZWZsZWN0LnNldChyLG4saSksb3duS2V5czooKT0+Wy4uLnRdfX12YXIgaWE9U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpO2Z1bmN0aW9uIE9lKGUsdCl7bGV0IHI9WWModCksbj1uZXcgU2V0LGk9bmV3IFByb3h5KGUse2dldChvLHMpe2lmKG4uaGFzKHMpKXJldHVybiBvW3NdO2xldCBhPXIuZ2V0KHMpO3JldHVybiBhP2EuZ2V0UHJvcGVydHlWYWx1ZShzKTpvW3NdfSxoYXMobyxzKXtpZihuLmhhcyhzKSlyZXR1cm4hMDtsZXQgYT1yLmdldChzKTtyZXR1cm4gYT9hLmhhcz8uKHMpPz8hMDpSZWZsZWN0LmhhcyhvLHMpfSxvd25LZXlzKG8pe2xldCBzPW9hKFJlZmxlY3Qub3duS2V5cyhvKSxyKSxhPW9hKEFycmF5LmZyb20oci5rZXlzKCkpLHIpO3JldHVyblsuLi5uZXcgU2V0KFsuLi5zLC4uLmEsLi4ubl0pXX0sc2V0KG8scyxhKXtyZXR1cm4gci5nZXQocyk/LmdldFByb3BlcnR5RGVzY3JpcHRvcj8uKHMpPy53cml0YWJsZT09PSExPyExOihuLmFkZChzKSxSZWZsZWN0LnNldChvLHMsYSkpfSxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobyxzKXtsZXQgYT1SZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvLHMpO2lmKGEmJiFhLmNvbmZpZ3VyYWJsZSlyZXR1cm4gYTtsZXQgbD1yLmdldChzKTtyZXR1cm4gbD9sLmdldFByb3BlcnR5RGVzY3JpcHRvcj97Li4ueW4sLi4ubD8uZ2V0UHJvcGVydHlEZXNjcmlwdG9yKHMpfTp5bjphfSxkZWZpbmVQcm9wZXJ0eShvLHMsYSl7cmV0dXJuIG4uYWRkKHMpLFJlZmxlY3QuZGVmaW5lUHJvcGVydHkobyxzLGEpfX0pO3JldHVybiBpW2lhXT1mdW5jdGlvbihvLHMsYT1zYS5pbnNwZWN0KXtsZXQgbD17Li4udGhpc307cmV0dXJuIGRlbGV0ZSBsW2lhXSxhKGwscyl9LGl9ZnVuY3Rpb24gWWMoZSl7bGV0IHQ9bmV3IE1hcDtmb3IobGV0IHIgb2YgZSl7bGV0IG49ci5nZXRLZXlzKCk7Zm9yKGxldCBpIG9mIG4pdC5zZXQoaSxyKX1yZXR1cm4gdH1mdW5jdGlvbiBvYShlLHQpe3JldHVybiBlLmZpbHRlcihyPT50LmdldChyKT8uaGFzPy4ocik/PyEwKX1mdW5jdGlvbiB5cihlKXtyZXR1cm57Z2V0S2V5cygpe3JldHVybiBlfSxoYXMoKXtyZXR1cm4hMX0sZ2V0UHJvcGVydHlWYWx1ZSgpe319fXZhciBOdD1jbGFzc3tjb25zdHJ1Y3Rvcih0PTAscil7dGhpcy5jb250ZXh0PXI7dGhpcy5saW5lcz1bXTt0aGlzLmN1cnJlbnRMaW5lPVwiXCI7dGhpcy5jdXJyZW50SW5kZW50PTA7dGhpcy5jdXJyZW50SW5kZW50PXR9d3JpdGUodCl7cmV0dXJuIHR5cGVvZiB0PT1cInN0cmluZ1wiP3RoaXMuY3VycmVudExpbmUrPXQ6dC53cml0ZSh0aGlzKSx0aGlzfXdyaXRlSm9pbmVkKHQscil7bGV0IG49ci5sZW5ndGgtMTtmb3IobGV0IGk9MDtpPHIubGVuZ3RoO2krKyl0aGlzLndyaXRlKHJbaV0pLGkhPT1uJiZ0aGlzLndyaXRlKHQpO3JldHVybiB0aGlzfXdyaXRlTGluZSh0KXtyZXR1cm4gdGhpcy53cml0ZSh0KS5uZXdMaW5lKCl9bmV3TGluZSgpe3RoaXMubGluZXMucHVzaCh0aGlzLmluZGVudGVkQ3VycmVudExpbmUoKSksdGhpcy5jdXJyZW50TGluZT1cIlwiLHRoaXMubWFyZ2luU3ltYm9sPXZvaWQgMDtsZXQgdD10aGlzLmFmdGVyTmV4dE5ld0xpbmVDYWxsYmFjaztyZXR1cm4gdGhpcy5hZnRlck5leHROZXdMaW5lQ2FsbGJhY2s9dm9pZCAwLHQ/LigpLHRoaXN9d2l0aEluZGVudCh0KXtyZXR1cm4gdGhpcy5pbmRlbnQoKSx0KHRoaXMpLHRoaXMudW5pbmRlbnQoKSx0aGlzfWFmdGVyTmV4dE5ld2xpbmUodCl7cmV0dXJuIHRoaXMuYWZ0ZXJOZXh0TmV3TGluZUNhbGxiYWNrPXQsdGhpc31pbmRlbnQoKXtyZXR1cm4gdGhpcy5jdXJyZW50SW5kZW50KyssdGhpc311bmluZGVudCgpe3JldHVybiB0aGlzLmN1cnJlbnRJbmRlbnQ+MCYmdGhpcy5jdXJyZW50SW5kZW50LS0sdGhpc31hZGRNYXJnaW5TeW1ib2wodCl7cmV0dXJuIHRoaXMubWFyZ2luU3ltYm9sPXQsdGhpc310b1N0cmluZygpe3JldHVybiB0aGlzLmxpbmVzLmNvbmNhdCh0aGlzLmluZGVudGVkQ3VycmVudExpbmUoKSkuam9pbihgXG5gKX1nZXRDdXJyZW50TGluZUxlbmd0aCgpe3JldHVybiB0aGlzLmN1cnJlbnRMaW5lLmxlbmd0aH1pbmRlbnRlZEN1cnJlbnRMaW5lKCl7bGV0IHQ9dGhpcy5jdXJyZW50TGluZS5wYWRTdGFydCh0aGlzLmN1cnJlbnRMaW5lLmxlbmd0aCsyKnRoaXMuY3VycmVudEluZGVudCk7cmV0dXJuIHRoaXMubWFyZ2luU3ltYm9sP3RoaXMubWFyZ2luU3ltYm9sK3Quc2xpY2UoMSk6dH19O2Z1bmN0aW9uIEx0KGUpe3JldHVybiBlIGluc3RhbmNlb2YgRGF0ZXx8T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpPT09XCJbb2JqZWN0IERhdGVdXCJ9ZnVuY3Rpb24gYm4oZSl7cmV0dXJuIGUudG9TdHJpbmcoKSE9PVwiSW52YWxpZCBEYXRlXCJ9dmFyICR0PTllMTUsbnQ9MWU5LGVvPVwiMDEyMzQ1Njc4OWFiY2RlZlwiLHduPVwiMi4zMDI1ODUwOTI5OTQwNDU2ODQwMTc5OTE0NTQ2ODQzNjQyMDc2MDExMDE0ODg2Mjg3NzI5NzYwMzMzMjc5MDA5Njc1NzI2MDk2NzczNTI0ODAyMzU5OTcyMDUwODk1OTgyOTgzNDE5Njc3ODQwNDIyODYyNDg2MzM0MDk1MjU0NjUwODI4MDY3NTY2NjYyODczNjkwOTg3ODE2ODk0ODI5MDcyMDgzMjU1NTQ2ODA4NDM3OTk4OTQ4MjYyMzMxOTg1MjgzOTM1MDUzMDg5NjUzNzc3MzI2Mjg4NDYxNjMzNjYyMjIyODc2OTgyMTk4ODY3NDY1NDM2Njc0NzQ0MDQyNDMyNzQzNjUxNTUwNDg5MzQzMTQ5MzkzOTE0Nzk2MTk0MDQ0MDAyMjIxMDUxMDE3MTQxNzQ4MDAzNjg4MDg0MDEyNjQ3MDgwNjg1NTY3NzQzMjE2MjI4MzU1MjIwMTE0ODA0NjYzNzE1NjU5MTIxMzczNDUwNzQ3ODU2OTQ3NjgzNDYzNjE2NzkyMTAxODA2NDQ1MDcwNjQ4MDAwMjc3NTAyNjg0OTE2NzQ2NTUwNTg2ODU2OTM1NjczNDIwNjcwNTgxMTM2NDI5MjI0NTU0NDA1NzU4OTI1NzI0MjA4MjQxMzE0Njk1Njg5MDE2NzU4OTQwMjU2Nzc2MzExMzU2OTE5MjkyMDMzMzc2NTg3MTQxNjYwMjMwMTA1NzAzMDg5NjM0NTcyMDc1NDQwMzcwODQ3NDY5OTQwMTY4MjY5MjgyODA4NDgxMTg0Mjg5MzE0ODQ4NTI0OTQ4NjQ0ODcxOTI3ODA5Njc2MjcxMjc1Nzc1Mzk3MDI3NjY4NjA1OTUyNDk2NzE2Njc0MTgzNDg1NzA0NDIyNTA3MTk3OTY1MDA0NzE0OTUxMDUwNDkyMjE0Nzc2NTY3NjM2OTM4NjYyOTc2OTc5NTIyMTEwNzE4MjY0NTQ5NzM0NzcyNjYyNDI1NzA5NDI5MzIyNTgyNzk4NTAyNTg1NTA5Nzg1MjY1MzgzMjA3NjA2NzI2MzE3MTY0MzA5NTA1OTk1MDg3ODA3NTIzNzEwMzMzMTAxMTk3ODU3NTQ3MzMxNTQxNDIxODA4NDI3NTQzODYzNTkxNzc4MTE3MDU0MzA5ODI3NDgyMzg1MDQ1NjQ4MDE5MDk1NjEwMjk5MjkxODI0MzE4MjM3NTI1MzU3NzA5NzUwNTM5NTY1MTg3Njk3NTEwMzc0OTcwODg4NjkyMTgwMjA1MTg5MzM5NTA3MjM4NTM5MjA1MTQ0NjM0MTk3MjY1Mjg3Mjg2OTY1MTEwODYyNTcxNDkyMTk4ODQ5OTc4NzQ4ODczNzcxMzQ1Njg2MjA5MTY3MDU4XCIsRW49XCIzLjE0MTU5MjY1MzU4OTc5MzIzODQ2MjY0MzM4MzI3OTUwMjg4NDE5NzE2OTM5OTM3NTEwNTgyMDk3NDk0NDU5MjMwNzgxNjQwNjI4NjIwODk5ODYyODAzNDgyNTM0MjExNzA2Nzk4MjE0ODA4NjUxMzI4MjMwNjY0NzA5Mzg0NDYwOTU1MDU4MjIzMTcyNTM1OTQwODEyODQ4MTExNzQ1MDI4NDEwMjcwMTkzODUyMTEwNTU1OTY0NDYyMjk0ODk1NDkzMDM4MTk2NDQyODgxMDk3NTY2NTkzMzQ0NjEyODQ3NTY0ODIzMzc4Njc4MzE2NTI3MTIwMTkwOTE0NTY0ODU2NjkyMzQ2MDM0ODYxMDQ1NDMyNjY0ODIxMzM5MzYwNzI2MDI0OTE0MTI3MzcyNDU4NzAwNjYwNjMxNTU4ODE3NDg4MTUyMDkyMDk2MjgyOTI1NDA5MTcxNTM2NDM2Nzg5MjU5MDM2MDAxMTMzMDUzMDU0ODgyMDQ2NjUyMTM4NDE0Njk1MTk0MTUxMTYwOTQzMzA1NzI3MDM2NTc1OTU5MTk1MzA5MjE4NjExNzM4MTkzMjYxMTc5MzEwNTExODU0ODA3NDQ2MjM3OTk2Mjc0OTU2NzM1MTg4NTc1MjcyNDg5MTIyNzkzODE4MzAxMTk0OTEyOTgzMzY3MzM2MjQ0MDY1NjY0MzA4NjAyMTM5NDk0NjM5NTIyNDczNzE5MDcwMjE3OTg2MDk0MzcwMjc3MDUzOTIxNzE3NjI5MzE3Njc1MjM4NDY3NDgxODQ2NzY2OTQwNTEzMjAwMDU2ODEyNzE0NTI2MzU2MDgyNzc4NTc3MTM0Mjc1Nzc4OTYwOTE3MzYzNzE3ODcyMTQ2ODQ0MDkwMTIyNDk1MzQzMDE0NjU0OTU4NTM3MTA1MDc5MjI3OTY4OTI1ODkyMzU0MjAxOTk1NjExMjEyOTAyMTk2MDg2NDAzNDQxODE1OTgxMzYyOTc3NDc3MTMwOTk2MDUxODcwNzIxMTM0OTk5OTk5ODM3Mjk3ODA0OTk1MTA1OTczMTczMjgxNjA5NjMxODU5NTAyNDQ1OTQ1NTM0NjkwODMwMjY0MjUyMjMwODI1MzM0NDY4NTAzNTI2MTkzMTE4ODE3MTAxMDAwMzEzNzgzODc1Mjg4NjU4NzUzMzIwODM4MTQyMDYxNzE3NzY2OTE0NzMwMzU5ODI1MzQ5MDQyODc1NTQ2ODczMTE1OTU2Mjg2Mzg4MjM1Mzc4NzU5Mzc1MTk1Nzc4MTg1Nzc4MDUzMjE3MTIyNjgwNjYxMzAwMTkyNzg3NjYxMTE5NTkwOTIxNjQyMDE5ODkzODA5NTI1NzIwMTA2NTQ4NTg2MzI3ODlcIix0bz17cHJlY2lzaW9uOjIwLHJvdW5kaW5nOjQsbW9kdWxvOjEsdG9FeHBOZWc6LTcsdG9FeHBQb3M6MjEsbWluRTotJHQsbWF4RTokdCxjcnlwdG86ITF9LGNhLFVlLF89ITAsdm49XCJbRGVjaW1hbEVycm9yXSBcIixydD12bitcIkludmFsaWQgYXJndW1lbnQ6IFwiLHBhPXZuK1wiUHJlY2lzaW9uIGxpbWl0IGV4Y2VlZGVkXCIsZGE9dm4rXCJjcnlwdG8gdW5hdmFpbGFibGVcIixtYT1cIltvYmplY3QgRGVjaW1hbF1cIixhZT1NYXRoLmZsb29yLEc9TWF0aC5wb3csWmM9L14wYihbMDFdKyhcXC5bMDFdKik/fFxcLlswMV0rKShwWystXT9cXGQrKT8kL2ksWGM9L14weChbMC05YS1mXSsoXFwuWzAtOWEtZl0qKT98XFwuWzAtOWEtZl0rKShwWystXT9cXGQrKT8kL2ksZXA9L14wbyhbMC03XSsoXFwuWzAtN10qKT98XFwuWzAtN10rKShwWystXT9cXGQrKT8kL2ksZmE9L14oXFxkKyhcXC5cXGQqKT98XFwuXFxkKykoZVsrLV0/XFxkKyk/JC9pLENlPTFlNyxQPTcsdHA9OTAwNzE5OTI1NDc0MDk5MSxycD13bi5sZW5ndGgtMSxybz1Fbi5sZW5ndGgtMSxtPXt0b1N0cmluZ1RhZzptYX07bS5hYnNvbHV0ZVZhbHVlPW0uYWJzPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IHRoaXMuY29uc3RydWN0b3IodGhpcyk7cmV0dXJuIGUuczwwJiYoZS5zPTEpLHgoZSl9O20uY2VpbD1mdW5jdGlvbigpe3JldHVybiB4KG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMpLHRoaXMuZSsxLDIpfTttLmNsYW1wZWRUbz1tLmNsYW1wPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj10aGlzLGk9bi5jb25zdHJ1Y3RvcjtpZihlPW5ldyBpKGUpLHQ9bmV3IGkodCksIWUuc3x8IXQucylyZXR1cm4gbmV3IGkoTmFOKTtpZihlLmd0KHQpKXRocm93IEVycm9yKHJ0K3QpO3JldHVybiByPW4uY21wKGUpLHI8MD9lOm4uY21wKHQpPjA/dDpuZXcgaShuKX07bS5jb21wYXJlZFRvPW0uY21wPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixpLG89dGhpcyxzPW8uZCxhPShlPW5ldyBvLmNvbnN0cnVjdG9yKGUpKS5kLGw9by5zLHU9ZS5zO2lmKCFzfHwhYSlyZXR1cm4hbHx8IXU/TmFOOmwhPT11P2w6cz09PWE/MDohc15sPDA/MTotMTtpZighc1swXXx8IWFbMF0pcmV0dXJuIHNbMF0/bDphWzBdPy11OjA7aWYobCE9PXUpcmV0dXJuIGw7aWYoby5lIT09ZS5lKXJldHVybiBvLmU+ZS5lXmw8MD8xOi0xO2ZvcihuPXMubGVuZ3RoLGk9YS5sZW5ndGgsdD0wLHI9bjxpP246aTt0PHI7Kyt0KWlmKHNbdF0hPT1hW3RdKXJldHVybiBzW3RdPmFbdF1ebDwwPzE6LTE7cmV0dXJuIG49PT1pPzA6bj5pXmw8MD8xOi0xfTttLmNvc2luZT1tLmNvcz1mdW5jdGlvbigpe3ZhciBlLHQscj10aGlzLG49ci5jb25zdHJ1Y3RvcjtyZXR1cm4gci5kP3IuZFswXT8oZT1uLnByZWNpc2lvbix0PW4ucm91bmRpbmcsbi5wcmVjaXNpb249ZStNYXRoLm1heChyLmUsci5zZCgpKStQLG4ucm91bmRpbmc9MSxyPW5wKG4seGEobixyKSksbi5wcmVjaXNpb249ZSxuLnJvdW5kaW5nPXQseChVZT09Mnx8VWU9PTM/ci5uZWcoKTpyLGUsdCwhMCkpOm5ldyBuKDEpOm5ldyBuKE5hTil9O20uY3ViZVJvb3Q9bS5jYnJ0PWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4saSxvLHMsYSxsLHUsYz10aGlzLHA9Yy5jb25zdHJ1Y3RvcjtpZighYy5pc0Zpbml0ZSgpfHxjLmlzWmVybygpKXJldHVybiBuZXcgcChjKTtmb3IoXz0hMSxvPWMucypHKGMucypjLDEvMyksIW98fE1hdGguYWJzKG8pPT0xLzA/KHI9cmUoYy5kKSxlPWMuZSwobz0oZS1yLmxlbmd0aCsxKSUzKSYmKHIrPW89PTF8fG89PS0yP1wiMFwiOlwiMDBcIiksbz1HKHIsMS8zKSxlPWFlKChlKzEpLzMpLShlJTM9PShlPDA/LTE6MikpLG89PTEvMD9yPVwiNWVcIitlOihyPW8udG9FeHBvbmVudGlhbCgpLHI9ci5zbGljZSgwLHIuaW5kZXhPZihcImVcIikrMSkrZSksbj1uZXcgcChyKSxuLnM9Yy5zKTpuPW5ldyBwKG8udG9TdHJpbmcoKSkscz0oZT1wLnByZWNpc2lvbikrMzs7KWlmKGE9bixsPWEudGltZXMoYSkudGltZXMoYSksdT1sLnBsdXMoYyksbj1MKHUucGx1cyhjKS50aW1lcyhhKSx1LnBsdXMobCkscysyLDEpLHJlKGEuZCkuc2xpY2UoMCxzKT09PShyPXJlKG4uZCkpLnNsaWNlKDAscykpaWYocj1yLnNsaWNlKHMtMyxzKzEpLHI9PVwiOTk5OVwifHwhaSYmcj09XCI0OTk5XCIpe2lmKCFpJiYoeChhLGUrMSwwKSxhLnRpbWVzKGEpLnRpbWVzKGEpLmVxKGMpKSl7bj1hO2JyZWFrfXMrPTQsaT0xfWVsc2V7KCErcnx8IStyLnNsaWNlKDEpJiZyLmNoYXJBdCgwKT09XCI1XCIpJiYoeChuLGUrMSwxKSx0PSFuLnRpbWVzKG4pLnRpbWVzKG4pLmVxKGMpKTticmVha31yZXR1cm4gXz0hMCx4KG4sZSxwLnJvdW5kaW5nLHQpfTttLmRlY2ltYWxQbGFjZXM9bS5kcD1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5kLHI9TmFOO2lmKHQpe2lmKGU9dC5sZW5ndGgtMSxyPShlLWFlKHRoaXMuZS9QKSkqUCxlPXRbZV0sZSlmb3IoO2UlMTA9PTA7ZS89MTApci0tO3I8MCYmKHI9MCl9cmV0dXJuIHJ9O20uZGl2aWRlZEJ5PW0uZGl2PWZ1bmN0aW9uKGUpe3JldHVybiBMKHRoaXMsbmV3IHRoaXMuY29uc3RydWN0b3IoZSkpfTttLmRpdmlkZWRUb0ludGVnZXJCeT1tLmRpdlRvSW50PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10LmNvbnN0cnVjdG9yO3JldHVybiB4KEwodCxuZXcgcihlKSwwLDEsMSksci5wcmVjaXNpb24sci5yb3VuZGluZyl9O20uZXF1YWxzPW0uZXE9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuY21wKGUpPT09MH07bS5mbG9vcj1mdW5jdGlvbigpe3JldHVybiB4KG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMpLHRoaXMuZSsxLDMpfTttLmdyZWF0ZXJUaGFuPW0uZ3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuY21wKGUpPjB9O20uZ3JlYXRlclRoYW5PckVxdWFsVG89bS5ndGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5jbXAoZSk7cmV0dXJuIHQ9PTF8fHQ9PT0wfTttLmh5cGVyYm9saWNDb3NpbmU9bS5jb3NoPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4saSxvPXRoaXMscz1vLmNvbnN0cnVjdG9yLGE9bmV3IHMoMSk7aWYoIW8uaXNGaW5pdGUoKSlyZXR1cm4gbmV3IHMoby5zPzEvMDpOYU4pO2lmKG8uaXNaZXJvKCkpcmV0dXJuIGE7cj1zLnByZWNpc2lvbixuPXMucm91bmRpbmcscy5wcmVjaXNpb249citNYXRoLm1heChvLmUsby5zZCgpKSs0LHMucm91bmRpbmc9MSxpPW8uZC5sZW5ndGgsaTwzMj8oZT1NYXRoLmNlaWwoaS8zKSx0PSgxL1RuKDQsZSkpLnRvU3RyaW5nKCkpOihlPTE2LHQ9XCIyLjMyODMwNjQzNjUzODY5NjI4OTA2MjVlLTEwXCIpLG89cXQocywxLG8udGltZXModCksbmV3IHMoMSksITApO2Zvcih2YXIgbCx1PWUsYz1uZXcgcyg4KTt1LS07KWw9by50aW1lcyhvKSxvPWEubWludXMobC50aW1lcyhjLm1pbnVzKGwudGltZXMoYykpKSk7cmV0dXJuIHgobyxzLnByZWNpc2lvbj1yLHMucm91bmRpbmc9biwhMCl9O20uaHlwZXJib2xpY1NpbmU9bS5zaW5oPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLG4saT10aGlzLG89aS5jb25zdHJ1Y3RvcjtpZighaS5pc0Zpbml0ZSgpfHxpLmlzWmVybygpKXJldHVybiBuZXcgbyhpKTtpZih0PW8ucHJlY2lzaW9uLHI9by5yb3VuZGluZyxvLnByZWNpc2lvbj10K01hdGgubWF4KGkuZSxpLnNkKCkpKzQsby5yb3VuZGluZz0xLG49aS5kLmxlbmd0aCxuPDMpaT1xdChvLDIsaSxpLCEwKTtlbHNle2U9MS40Kk1hdGguc3FydChuKSxlPWU+MTY/MTY6ZXwwLGk9aS50aW1lcygxL1RuKDUsZSkpLGk9cXQobywyLGksaSwhMCk7Zm9yKHZhciBzLGE9bmV3IG8oNSksbD1uZXcgbygxNiksdT1uZXcgbygyMCk7ZS0tOylzPWkudGltZXMoaSksaT1pLnRpbWVzKGEucGx1cyhzLnRpbWVzKGwudGltZXMocykucGx1cyh1KSkpKX1yZXR1cm4gby5wcmVjaXNpb249dCxvLnJvdW5kaW5nPXIseChpLHQsciwhMCl9O20uaHlwZXJib2xpY1RhbmdlbnQ9bS50YW5oPWZ1bmN0aW9uKCl7dmFyIGUsdCxyPXRoaXMsbj1yLmNvbnN0cnVjdG9yO3JldHVybiByLmlzRmluaXRlKCk/ci5pc1plcm8oKT9uZXcgbihyKTooZT1uLnByZWNpc2lvbix0PW4ucm91bmRpbmcsbi5wcmVjaXNpb249ZSs3LG4ucm91bmRpbmc9MSxMKHIuc2luaCgpLHIuY29zaCgpLG4ucHJlY2lzaW9uPWUsbi5yb3VuZGluZz10KSk6bmV3IG4oci5zKX07bS5pbnZlcnNlQ29zaW5lPW0uYWNvcz1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpcyxyPXQuY29uc3RydWN0b3Isbj10LmFicygpLmNtcCgxKSxpPXIucHJlY2lzaW9uLG89ci5yb3VuZGluZztyZXR1cm4gbiE9PS0xP249PT0wP3QuaXNOZWcoKT9UZShyLGksbyk6bmV3IHIoMCk6bmV3IHIoTmFOKTp0LmlzWmVybygpP1RlKHIsaSs0LG8pLnRpbWVzKC41KTooci5wcmVjaXNpb249aSs2LHIucm91bmRpbmc9MSx0PXQuYXNpbigpLGU9VGUocixpKzQsbykudGltZXMoLjUpLHIucHJlY2lzaW9uPWksci5yb3VuZGluZz1vLGUubWludXModCkpfTttLmludmVyc2VIeXBlcmJvbGljQ29zaW5lPW0uYWNvc2g9ZnVuY3Rpb24oKXt2YXIgZSx0LHI9dGhpcyxuPXIuY29uc3RydWN0b3I7cmV0dXJuIHIubHRlKDEpP25ldyBuKHIuZXEoMSk/MDpOYU4pOnIuaXNGaW5pdGUoKT8oZT1uLnByZWNpc2lvbix0PW4ucm91bmRpbmcsbi5wcmVjaXNpb249ZStNYXRoLm1heChNYXRoLmFicyhyLmUpLHIuc2QoKSkrNCxuLnJvdW5kaW5nPTEsXz0hMSxyPXIudGltZXMocikubWludXMoMSkuc3FydCgpLnBsdXMociksXz0hMCxuLnByZWNpc2lvbj1lLG4ucm91bmRpbmc9dCxyLmxuKCkpOm5ldyBuKHIpfTttLmludmVyc2VIeXBlcmJvbGljU2luZT1tLmFzaW5oPWZ1bmN0aW9uKCl7dmFyIGUsdCxyPXRoaXMsbj1yLmNvbnN0cnVjdG9yO3JldHVybiFyLmlzRmluaXRlKCl8fHIuaXNaZXJvKCk/bmV3IG4ocik6KGU9bi5wcmVjaXNpb24sdD1uLnJvdW5kaW5nLG4ucHJlY2lzaW9uPWUrMipNYXRoLm1heChNYXRoLmFicyhyLmUpLHIuc2QoKSkrNixuLnJvdW5kaW5nPTEsXz0hMSxyPXIudGltZXMocikucGx1cygxKS5zcXJ0KCkucGx1cyhyKSxfPSEwLG4ucHJlY2lzaW9uPWUsbi5yb3VuZGluZz10LHIubG4oKSl9O20uaW52ZXJzZUh5cGVyYm9saWNUYW5nZW50PW0uYXRhbmg9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbixpPXRoaXMsbz1pLmNvbnN0cnVjdG9yO3JldHVybiBpLmlzRmluaXRlKCk/aS5lPj0wP25ldyBvKGkuYWJzKCkuZXEoMSk/aS5zLzA6aS5pc1plcm8oKT9pOk5hTik6KGU9by5wcmVjaXNpb24sdD1vLnJvdW5kaW5nLG49aS5zZCgpLE1hdGgubWF4KG4sZSk8MiotaS5lLTE/eChuZXcgbyhpKSxlLHQsITApOihvLnByZWNpc2lvbj1yPW4taS5lLGk9TChpLnBsdXMoMSksbmV3IG8oMSkubWludXMoaSkscitlLDEpLG8ucHJlY2lzaW9uPWUrNCxvLnJvdW5kaW5nPTEsaT1pLmxuKCksby5wcmVjaXNpb249ZSxvLnJvdW5kaW5nPXQsaS50aW1lcyguNSkpKTpuZXcgbyhOYU4pfTttLmludmVyc2VTaW5lPW0uYXNpbj1mdW5jdGlvbigpe3ZhciBlLHQscixuLGk9dGhpcyxvPWkuY29uc3RydWN0b3I7cmV0dXJuIGkuaXNaZXJvKCk/bmV3IG8oaSk6KHQ9aS5hYnMoKS5jbXAoMSkscj1vLnByZWNpc2lvbixuPW8ucm91bmRpbmcsdCE9PS0xP3Q9PT0wPyhlPVRlKG8scis0LG4pLnRpbWVzKC41KSxlLnM9aS5zLGUpOm5ldyBvKE5hTik6KG8ucHJlY2lzaW9uPXIrNixvLnJvdW5kaW5nPTEsaT1pLmRpdihuZXcgbygxKS5taW51cyhpLnRpbWVzKGkpKS5zcXJ0KCkucGx1cygxKSkuYXRhbigpLG8ucHJlY2lzaW9uPXIsby5yb3VuZGluZz1uLGkudGltZXMoMikpKX07bS5pbnZlcnNlVGFuZ2VudD1tLmF0YW49ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbixpLG8scyxhLGwsdT10aGlzLGM9dS5jb25zdHJ1Y3RvcixwPWMucHJlY2lzaW9uLGQ9Yy5yb3VuZGluZztpZih1LmlzRmluaXRlKCkpe2lmKHUuaXNaZXJvKCkpcmV0dXJuIG5ldyBjKHUpO2lmKHUuYWJzKCkuZXEoMSkmJnArNDw9cm8pcmV0dXJuIHM9VGUoYyxwKzQsZCkudGltZXMoLjI1KSxzLnM9dS5zLHN9ZWxzZXtpZighdS5zKXJldHVybiBuZXcgYyhOYU4pO2lmKHArNDw9cm8pcmV0dXJuIHM9VGUoYyxwKzQsZCkudGltZXMoLjUpLHMucz11LnMsc31mb3IoYy5wcmVjaXNpb249YT1wKzEwLGMucm91bmRpbmc9MSxyPU1hdGgubWluKDI4LGEvUCsyfDApLGU9cjtlOy0tZSl1PXUuZGl2KHUudGltZXModSkucGx1cygxKS5zcXJ0KCkucGx1cygxKSk7Zm9yKF89ITEsdD1NYXRoLmNlaWwoYS9QKSxuPTEsbD11LnRpbWVzKHUpLHM9bmV3IGModSksaT11O2UhPT0tMTspaWYoaT1pLnRpbWVzKGwpLG89cy5taW51cyhpLmRpdihuKz0yKSksaT1pLnRpbWVzKGwpLHM9by5wbHVzKGkuZGl2KG4rPTIpKSxzLmRbdF0hPT12b2lkIDApZm9yKGU9dDtzLmRbZV09PT1vLmRbZV0mJmUtLTspO3JldHVybiByJiYocz1zLnRpbWVzKDI8PHItMSkpLF89ITAseChzLGMucHJlY2lzaW9uPXAsYy5yb3VuZGluZz1kLCEwKX07bS5pc0Zpbml0ZT1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5kfTttLmlzSW50ZWdlcj1tLmlzSW50PWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmQmJmFlKHRoaXMuZS9QKT50aGlzLmQubGVuZ3RoLTJ9O20uaXNOYU49ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zfTttLmlzTmVnYXRpdmU9bS5pc05lZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnM8MH07bS5pc1Bvc2l0aXZlPW0uaXNQb3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zPjB9O20uaXNaZXJvPWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmQmJnRoaXMuZFswXT09PTB9O20ubGVzc1RoYW49bS5sdD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jbXAoZSk8MH07bS5sZXNzVGhhbk9yRXF1YWxUbz1tLmx0ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jbXAoZSk8MX07bS5sb2dhcml0aG09bS5sb2c9ZnVuY3Rpb24oZSl7dmFyIHQscixuLGksbyxzLGEsbCx1PXRoaXMsYz11LmNvbnN0cnVjdG9yLHA9Yy5wcmVjaXNpb24sZD1jLnJvdW5kaW5nLGY9NTtpZihlPT1udWxsKWU9bmV3IGMoMTApLHQ9ITA7ZWxzZXtpZihlPW5ldyBjKGUpLHI9ZS5kLGUuczwwfHwhcnx8IXJbMF18fGUuZXEoMSkpcmV0dXJuIG5ldyBjKE5hTik7dD1lLmVxKDEwKX1pZihyPXUuZCx1LnM8MHx8IXJ8fCFyWzBdfHx1LmVxKDEpKXJldHVybiBuZXcgYyhyJiYhclswXT8tMS8wOnUucyE9MT9OYU46cj8wOjEvMCk7aWYodClpZihyLmxlbmd0aD4xKW89ITA7ZWxzZXtmb3IoaT1yWzBdO2klMTA9PT0wOylpLz0xMDtvPWkhPT0xfWlmKF89ITEsYT1wK2Yscz10dCh1LGEpLG49dD9QbihjLGErMTApOnR0KGUsYSksbD1MKHMsbixhLDEpLGhyKGwuZCxpPXAsZCkpZG8gaWYoYSs9MTAscz10dCh1LGEpLG49dD9QbihjLGErMTApOnR0KGUsYSksbD1MKHMsbixhLDEpLCFvKXsrcmUobC5kKS5zbGljZShpKzEsaSsxNSkrMT09MWUxNCYmKGw9eChsLHArMSwwKSk7YnJlYWt9d2hpbGUoaHIobC5kLGkrPTEwLGQpKTtyZXR1cm4gXz0hMCx4KGwscCxkKX07bS5taW51cz1tLnN1Yj1mdW5jdGlvbihlKXt2YXIgdCxyLG4saSxvLHMsYSxsLHUsYyxwLGQsZj10aGlzLHk9Zi5jb25zdHJ1Y3RvcjtpZihlPW5ldyB5KGUpLCFmLmR8fCFlLmQpcmV0dXJuIWYuc3x8IWUucz9lPW5ldyB5KE5hTik6Zi5kP2Uucz0tZS5zOmU9bmV3IHkoZS5kfHxmLnMhPT1lLnM/ZjpOYU4pLGU7aWYoZi5zIT1lLnMpcmV0dXJuIGUucz0tZS5zLGYucGx1cyhlKTtpZih1PWYuZCxkPWUuZCxhPXkucHJlY2lzaW9uLGw9eS5yb3VuZGluZywhdVswXXx8IWRbMF0pe2lmKGRbMF0pZS5zPS1lLnM7ZWxzZSBpZih1WzBdKWU9bmV3IHkoZik7ZWxzZSByZXR1cm4gbmV3IHkobD09PTM/LTA6MCk7cmV0dXJuIF8/eChlLGEsbCk6ZX1pZihyPWFlKGUuZS9QKSxjPWFlKGYuZS9QKSx1PXUuc2xpY2UoKSxvPWMtcixvKXtmb3IocD1vPDAscD8odD11LG89LW8scz1kLmxlbmd0aCk6KHQ9ZCxyPWMscz11Lmxlbmd0aCksbj1NYXRoLm1heChNYXRoLmNlaWwoYS9QKSxzKSsyLG8+biYmKG89bix0Lmxlbmd0aD0xKSx0LnJldmVyc2UoKSxuPW87bi0tOyl0LnB1c2goMCk7dC5yZXZlcnNlKCl9ZWxzZXtmb3Iobj11Lmxlbmd0aCxzPWQubGVuZ3RoLHA9bjxzLHAmJihzPW4pLG49MDtuPHM7bisrKWlmKHVbbl0hPWRbbl0pe3A9dVtuXTxkW25dO2JyZWFrfW89MH1mb3IocCYmKHQ9dSx1PWQsZD10LGUucz0tZS5zKSxzPXUubGVuZ3RoLG49ZC5sZW5ndGgtcztuPjA7LS1uKXVbcysrXT0wO2ZvcihuPWQubGVuZ3RoO24+bzspe2lmKHVbLS1uXTxkW25dKXtmb3IoaT1uO2kmJnVbLS1pXT09PTA7KXVbaV09Q2UtMTstLXVbaV0sdVtuXSs9Q2V9dVtuXS09ZFtuXX1mb3IoO3VbLS1zXT09PTA7KXUucG9wKCk7Zm9yKDt1WzBdPT09MDt1LnNoaWZ0KCkpLS1yO3JldHVybiB1WzBdPyhlLmQ9dSxlLmU9X24odSxyKSxfP3goZSxhLGwpOmUpOm5ldyB5KGw9PT0zPy0wOjApfTttLm1vZHVsbz1tLm1vZD1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXMsbj1yLmNvbnN0cnVjdG9yO3JldHVybiBlPW5ldyBuKGUpLCFyLmR8fCFlLnN8fGUuZCYmIWUuZFswXT9uZXcgbihOYU4pOiFlLmR8fHIuZCYmIXIuZFswXT94KG5ldyBuKHIpLG4ucHJlY2lzaW9uLG4ucm91bmRpbmcpOihfPSExLG4ubW9kdWxvPT05Pyh0PUwocixlLmFicygpLDAsMywxKSx0LnMqPWUucyk6dD1MKHIsZSwwLG4ubW9kdWxvLDEpLHQ9dC50aW1lcyhlKSxfPSEwLHIubWludXModCkpfTttLm5hdHVyYWxFeHBvbmVudGlhbD1tLmV4cD1mdW5jdGlvbigpe3JldHVybiBubyh0aGlzKX07bS5uYXR1cmFsTG9nYXJpdGhtPW0ubG49ZnVuY3Rpb24oKXtyZXR1cm4gdHQodGhpcyl9O20ubmVnYXRlZD1tLm5lZz1mdW5jdGlvbigpe3ZhciBlPW5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMpO3JldHVybiBlLnM9LWUucyx4KGUpfTttLnBsdXM9bS5hZGQ9ZnVuY3Rpb24oZSl7dmFyIHQscixuLGksbyxzLGEsbCx1LGMscD10aGlzLGQ9cC5jb25zdHJ1Y3RvcjtpZihlPW5ldyBkKGUpLCFwLmR8fCFlLmQpcmV0dXJuIXAuc3x8IWUucz9lPW5ldyBkKE5hTik6cC5kfHwoZT1uZXcgZChlLmR8fHAucz09PWUucz9wOk5hTikpLGU7aWYocC5zIT1lLnMpcmV0dXJuIGUucz0tZS5zLHAubWludXMoZSk7aWYodT1wLmQsYz1lLmQsYT1kLnByZWNpc2lvbixsPWQucm91bmRpbmcsIXVbMF18fCFjWzBdKXJldHVybiBjWzBdfHwoZT1uZXcgZChwKSksXz94KGUsYSxsKTplO2lmKG89YWUocC5lL1ApLG49YWUoZS5lL1ApLHU9dS5zbGljZSgpLGk9by1uLGkpe2ZvcihpPDA/KHI9dSxpPS1pLHM9Yy5sZW5ndGgpOihyPWMsbj1vLHM9dS5sZW5ndGgpLG89TWF0aC5jZWlsKGEvUCkscz1vPnM/bysxOnMrMSxpPnMmJihpPXMsci5sZW5ndGg9MSksci5yZXZlcnNlKCk7aS0tOylyLnB1c2goMCk7ci5yZXZlcnNlKCl9Zm9yKHM9dS5sZW5ndGgsaT1jLmxlbmd0aCxzLWk8MCYmKGk9cyxyPWMsYz11LHU9ciksdD0wO2k7KXQ9KHVbLS1pXT11W2ldK2NbaV0rdCkvQ2V8MCx1W2ldJT1DZTtmb3IodCYmKHUudW5zaGlmdCh0KSwrK24pLHM9dS5sZW5ndGg7dVstLXNdPT0wOyl1LnBvcCgpO3JldHVybiBlLmQ9dSxlLmU9X24odSxuKSxfP3goZSxhLGwpOmV9O20ucHJlY2lzaW9uPW0uc2Q9ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKGUhPT12b2lkIDAmJmUhPT0hIWUmJmUhPT0xJiZlIT09MCl0aHJvdyBFcnJvcihydCtlKTtyZXR1cm4gci5kPyh0PWdhKHIuZCksZSYmci5lKzE+dCYmKHQ9ci5lKzEpKTp0PU5hTix0fTttLnJvdW5kPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuY29uc3RydWN0b3I7cmV0dXJuIHgobmV3IHQoZSksZS5lKzEsdC5yb3VuZGluZyl9O20uc2luZT1tLnNpbj1mdW5jdGlvbigpe3ZhciBlLHQscj10aGlzLG49ci5jb25zdHJ1Y3RvcjtyZXR1cm4gci5pc0Zpbml0ZSgpP3IuaXNaZXJvKCk/bmV3IG4ocik6KGU9bi5wcmVjaXNpb24sdD1uLnJvdW5kaW5nLG4ucHJlY2lzaW9uPWUrTWF0aC5tYXgoci5lLHIuc2QoKSkrUCxuLnJvdW5kaW5nPTEscj1vcChuLHhhKG4scikpLG4ucHJlY2lzaW9uPWUsbi5yb3VuZGluZz10LHgoVWU+Mj9yLm5lZygpOnIsZSx0LCEwKSk6bmV3IG4oTmFOKX07bS5zcXVhcmVSb290PW0uc3FydD1mdW5jdGlvbigpe3ZhciBlLHQscixuLGksbyxzPXRoaXMsYT1zLmQsbD1zLmUsdT1zLnMsYz1zLmNvbnN0cnVjdG9yO2lmKHUhPT0xfHwhYXx8IWFbMF0pcmV0dXJuIG5ldyBjKCF1fHx1PDAmJighYXx8YVswXSk/TmFOOmE/czoxLzApO2ZvcihfPSExLHU9TWF0aC5zcXJ0KCtzKSx1PT0wfHx1PT0xLzA/KHQ9cmUoYSksKHQubGVuZ3RoK2wpJTI9PTAmJih0Kz1cIjBcIiksdT1NYXRoLnNxcnQodCksbD1hZSgobCsxKS8yKS0obDwwfHxsJTIpLHU9PTEvMD90PVwiNWVcIitsOih0PXUudG9FeHBvbmVudGlhbCgpLHQ9dC5zbGljZSgwLHQuaW5kZXhPZihcImVcIikrMSkrbCksbj1uZXcgYyh0KSk6bj1uZXcgYyh1LnRvU3RyaW5nKCkpLHI9KGw9Yy5wcmVjaXNpb24pKzM7OylpZihvPW4sbj1vLnBsdXMoTChzLG8scisyLDEpKS50aW1lcyguNSkscmUoby5kKS5zbGljZSgwLHIpPT09KHQ9cmUobi5kKSkuc2xpY2UoMCxyKSlpZih0PXQuc2xpY2Uoci0zLHIrMSksdD09XCI5OTk5XCJ8fCFpJiZ0PT1cIjQ5OTlcIil7aWYoIWkmJih4KG8sbCsxLDApLG8udGltZXMobykuZXEocykpKXtuPW87YnJlYWt9cis9NCxpPTF9ZWxzZXsoISt0fHwhK3Quc2xpY2UoMSkmJnQuY2hhckF0KDApPT1cIjVcIikmJih4KG4sbCsxLDEpLGU9IW4udGltZXMobikuZXEocykpO2JyZWFrfXJldHVybiBfPSEwLHgobixsLGMucm91bmRpbmcsZSl9O20udGFuZ2VudD1tLnRhbj1mdW5jdGlvbigpe3ZhciBlLHQscj10aGlzLG49ci5jb25zdHJ1Y3RvcjtyZXR1cm4gci5pc0Zpbml0ZSgpP3IuaXNaZXJvKCk/bmV3IG4ocik6KGU9bi5wcmVjaXNpb24sdD1uLnJvdW5kaW5nLG4ucHJlY2lzaW9uPWUrMTAsbi5yb3VuZGluZz0xLHI9ci5zaW4oKSxyLnM9MSxyPUwocixuZXcgbigxKS5taW51cyhyLnRpbWVzKHIpKS5zcXJ0KCksZSsxMCwwKSxuLnByZWNpc2lvbj1lLG4ucm91bmRpbmc9dCx4KFVlPT0yfHxVZT09ND9yLm5lZygpOnIsZSx0LCEwKSk6bmV3IG4oTmFOKX07bS50aW1lcz1tLm11bD1mdW5jdGlvbihlKXt2YXIgdCxyLG4saSxvLHMsYSxsLHUsYz10aGlzLHA9Yy5jb25zdHJ1Y3RvcixkPWMuZCxmPShlPW5ldyBwKGUpKS5kO2lmKGUucyo9Yy5zLCFkfHwhZFswXXx8IWZ8fCFmWzBdKXJldHVybiBuZXcgcCghZS5zfHxkJiYhZFswXSYmIWZ8fGYmJiFmWzBdJiYhZD9OYU46IWR8fCFmP2Uucy8wOmUucyowKTtmb3Iocj1hZShjLmUvUCkrYWUoZS5lL1ApLGw9ZC5sZW5ndGgsdT1mLmxlbmd0aCxsPHUmJihvPWQsZD1mLGY9byxzPWwsbD11LHU9cyksbz1bXSxzPWwrdSxuPXM7bi0tOylvLnB1c2goMCk7Zm9yKG49dTstLW4+PTA7KXtmb3IodD0wLGk9bCtuO2k+bjspYT1vW2ldK2Zbbl0qZFtpLW4tMV0rdCxvW2ktLV09YSVDZXwwLHQ9YS9DZXwwO29baV09KG9baV0rdCklQ2V8MH1mb3IoOyFvWy0tc107KW8ucG9wKCk7cmV0dXJuIHQ/KytyOm8uc2hpZnQoKSxlLmQ9byxlLmU9X24obyxyKSxfP3goZSxwLnByZWNpc2lvbixwLnJvdW5kaW5nKTplfTttLnRvQmluYXJ5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG9vKHRoaXMsMixlLHQpfTttLnRvRGVjaW1hbFBsYWNlcz1tLnRvRFA9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49ci5jb25zdHJ1Y3RvcjtyZXR1cm4gcj1uZXcgbihyKSxlPT09dm9pZCAwP3I6KGZlKGUsMCxudCksdD09PXZvaWQgMD90PW4ucm91bmRpbmc6ZmUodCwwLDgpLHgocixlK3IuZSsxLHQpKX07bS50b0V4cG9uZW50aWFsPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj10aGlzLGk9bi5jb25zdHJ1Y3RvcjtyZXR1cm4gZT09PXZvaWQgMD9yPURlKG4sITApOihmZShlLDAsbnQpLHQ9PT12b2lkIDA/dD1pLnJvdW5kaW5nOmZlKHQsMCw4KSxuPXgobmV3IGkobiksZSsxLHQpLHI9RGUobiwhMCxlKzEpKSxuLmlzTmVnKCkmJiFuLmlzWmVybygpP1wiLVwiK3I6cn07bS50b0ZpeGVkPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixpPXRoaXMsbz1pLmNvbnN0cnVjdG9yO3JldHVybiBlPT09dm9pZCAwP3I9RGUoaSk6KGZlKGUsMCxudCksdD09PXZvaWQgMD90PW8ucm91bmRpbmc6ZmUodCwwLDgpLG49eChuZXcgbyhpKSxlK2kuZSsxLHQpLHI9RGUobiwhMSxlK24uZSsxKSksaS5pc05lZygpJiYhaS5pc1plcm8oKT9cIi1cIityOnJ9O20udG9GcmFjdGlvbj1mdW5jdGlvbihlKXt2YXIgdCxyLG4saSxvLHMsYSxsLHUsYyxwLGQsZj10aGlzLHk9Zi5kLGc9Zi5jb25zdHJ1Y3RvcjtpZigheSlyZXR1cm4gbmV3IGcoZik7aWYodT1yPW5ldyBnKDEpLG49bD1uZXcgZygwKSx0PW5ldyBnKG4pLG89dC5lPWdhKHkpLWYuZS0xLHM9byVQLHQuZFswXT1HKDEwLHM8MD9QK3M6cyksZT09bnVsbCllPW8+MD90OnU7ZWxzZXtpZihhPW5ldyBnKGUpLCFhLmlzSW50KCl8fGEubHQodSkpdGhyb3cgRXJyb3IocnQrYSk7ZT1hLmd0KHQpP28+MD90OnU6YX1mb3IoXz0hMSxhPW5ldyBnKHJlKHkpKSxjPWcucHJlY2lzaW9uLGcucHJlY2lzaW9uPW89eS5sZW5ndGgqUCoyO3A9TChhLHQsMCwxLDEpLGk9ci5wbHVzKHAudGltZXMobikpLGkuY21wKGUpIT0xOylyPW4sbj1pLGk9dSx1PWwucGx1cyhwLnRpbWVzKGkpKSxsPWksaT10LHQ9YS5taW51cyhwLnRpbWVzKGkpKSxhPWk7cmV0dXJuIGk9TChlLm1pbnVzKHIpLG4sMCwxLDEpLGw9bC5wbHVzKGkudGltZXModSkpLHI9ci5wbHVzKGkudGltZXMobikpLGwucz11LnM9Zi5zLGQ9TCh1LG4sbywxKS5taW51cyhmKS5hYnMoKS5jbXAoTChsLHIsbywxKS5taW51cyhmKS5hYnMoKSk8MT9bdSxuXTpbbCxyXSxnLnByZWNpc2lvbj1jLF89ITAsZH07bS50b0hleGFkZWNpbWFsPW0udG9IZXg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gb28odGhpcywxNixlLHQpfTttLnRvTmVhcmVzdD1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj1yLmNvbnN0cnVjdG9yO2lmKHI9bmV3IG4ociksZT09bnVsbCl7aWYoIXIuZClyZXR1cm4gcjtlPW5ldyBuKDEpLHQ9bi5yb3VuZGluZ31lbHNle2lmKGU9bmV3IG4oZSksdD09PXZvaWQgMD90PW4ucm91bmRpbmc6ZmUodCwwLDgpLCFyLmQpcmV0dXJuIGUucz9yOmU7aWYoIWUuZClyZXR1cm4gZS5zJiYoZS5zPXIucyksZX1yZXR1cm4gZS5kWzBdPyhfPSExLHI9TChyLGUsMCx0LDEpLnRpbWVzKGUpLF89ITAseChyKSk6KGUucz1yLnMscj1lKSxyfTttLnRvTnVtYmVyPWZ1bmN0aW9uKCl7cmV0dXJuK3RoaXN9O20udG9PY3RhbD1mdW5jdGlvbihlLHQpe3JldHVybiBvbyh0aGlzLDgsZSx0KX07bS50b1Bvd2VyPW0ucG93PWZ1bmN0aW9uKGUpe3ZhciB0LHIsbixpLG8scyxhPXRoaXMsbD1hLmNvbnN0cnVjdG9yLHU9KyhlPW5ldyBsKGUpKTtpZighYS5kfHwhZS5kfHwhYS5kWzBdfHwhZS5kWzBdKXJldHVybiBuZXcgbChHKCthLHUpKTtpZihhPW5ldyBsKGEpLGEuZXEoMSkpcmV0dXJuIGE7aWYobj1sLnByZWNpc2lvbixvPWwucm91bmRpbmcsZS5lcSgxKSlyZXR1cm4geChhLG4sbyk7aWYodD1hZShlLmUvUCksdD49ZS5kLmxlbmd0aC0xJiYocj11PDA/LXU6dSk8PXRwKXJldHVybiBpPXlhKGwsYSxyLG4pLGUuczwwP25ldyBsKDEpLmRpdihpKTp4KGksbixvKTtpZihzPWEucyxzPDApe2lmKHQ8ZS5kLmxlbmd0aC0xKXJldHVybiBuZXcgbChOYU4pO2lmKGUuZFt0XSYxfHwocz0xKSxhLmU9PTAmJmEuZFswXT09MSYmYS5kLmxlbmd0aD09MSlyZXR1cm4gYS5zPXMsYX1yZXR1cm4gcj1HKCthLHUpLHQ9cj09MHx8IWlzRmluaXRlKHIpP2FlKHUqKE1hdGgubG9nKFwiMC5cIityZShhLmQpKS9NYXRoLkxOMTArYS5lKzEpKTpuZXcgbChyK1wiXCIpLmUsdD5sLm1heEUrMXx8dDxsLm1pbkUtMT9uZXcgbCh0PjA/cy8wOjApOihfPSExLGwucm91bmRpbmc9YS5zPTEscj1NYXRoLm1pbigxMiwodCtcIlwiKS5sZW5ndGgpLGk9bm8oZS50aW1lcyh0dChhLG4rcikpLG4pLGkuZCYmKGk9eChpLG4rNSwxKSxocihpLmQsbixvKSYmKHQ9bisxMCxpPXgobm8oZS50aW1lcyh0dChhLHQrcikpLHQpLHQrNSwxKSwrcmUoaS5kKS5zbGljZShuKzEsbisxNSkrMT09MWUxNCYmKGk9eChpLG4rMSwwKSkpKSxpLnM9cyxfPSEwLGwucm91bmRpbmc9byx4KGksbixvKSl9O20udG9QcmVjaXNpb249ZnVuY3Rpb24oZSx0KXt2YXIgcixuPXRoaXMsaT1uLmNvbnN0cnVjdG9yO3JldHVybiBlPT09dm9pZCAwP3I9RGUobixuLmU8PWkudG9FeHBOZWd8fG4uZT49aS50b0V4cFBvcyk6KGZlKGUsMSxudCksdD09PXZvaWQgMD90PWkucm91bmRpbmc6ZmUodCwwLDgpLG49eChuZXcgaShuKSxlLHQpLHI9RGUobixlPD1uLmV8fG4uZTw9aS50b0V4cE5lZyxlKSksbi5pc05lZygpJiYhbi5pc1plcm8oKT9cIi1cIityOnJ9O20udG9TaWduaWZpY2FudERpZ2l0cz1tLnRvU0Q9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49ci5jb25zdHJ1Y3RvcjtyZXR1cm4gZT09PXZvaWQgMD8oZT1uLnByZWNpc2lvbix0PW4ucm91bmRpbmcpOihmZShlLDEsbnQpLHQ9PT12b2lkIDA/dD1uLnJvdW5kaW5nOmZlKHQsMCw4KSkseChuZXcgbihyKSxlLHQpfTttLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuY29uc3RydWN0b3Iscj1EZShlLGUuZTw9dC50b0V4cE5lZ3x8ZS5lPj10LnRvRXhwUG9zKTtyZXR1cm4gZS5pc05lZygpJiYhZS5pc1plcm8oKT9cIi1cIityOnJ9O20udHJ1bmNhdGVkPW0udHJ1bmM9ZnVuY3Rpb24oKXtyZXR1cm4geChuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzKSx0aGlzLmUrMSwxKX07bS52YWx1ZU9mPW0udG9KU09OPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuY29uc3RydWN0b3Iscj1EZShlLGUuZTw9dC50b0V4cE5lZ3x8ZS5lPj10LnRvRXhwUG9zKTtyZXR1cm4gZS5pc05lZygpP1wiLVwiK3I6cn07ZnVuY3Rpb24gcmUoZSl7dmFyIHQscixuLGk9ZS5sZW5ndGgtMSxvPVwiXCIscz1lWzBdO2lmKGk+MCl7Zm9yKG8rPXMsdD0xO3Q8aTt0Kyspbj1lW3RdK1wiXCIscj1QLW4ubGVuZ3RoLHImJihvKz1ldChyKSksbys9bjtzPWVbdF0sbj1zK1wiXCIscj1QLW4ubGVuZ3RoLHImJihvKz1ldChyKSl9ZWxzZSBpZihzPT09MClyZXR1cm5cIjBcIjtmb3IoO3MlMTA9PT0wOylzLz0xMDtyZXR1cm4gbytzfWZ1bmN0aW9uIGZlKGUsdCxyKXtpZihlIT09fn5lfHxlPHR8fGU+cil0aHJvdyBFcnJvcihydCtlKX1mdW5jdGlvbiBocihlLHQscixuKXt2YXIgaSxvLHMsYTtmb3Iobz1lWzBdO28+PTEwO28vPTEwKS0tdDtyZXR1cm4tLXQ8MD8odCs9UCxpPTApOihpPU1hdGguY2VpbCgodCsxKS9QKSx0JT1QKSxvPUcoMTAsUC10KSxhPWVbaV0lb3wwLG49PW51bGw/dDwzPyh0PT0wP2E9YS8xMDB8MDp0PT0xJiYoYT1hLzEwfDApLHM9cjw0JiZhPT05OTk5OXx8cj4zJiZhPT00OTk5OXx8YT09NWU0fHxhPT0wKTpzPShyPDQmJmErMT09b3x8cj4zJiZhKzE9PW8vMikmJihlW2krMV0vby8xMDB8MCk9PUcoMTAsdC0yKS0xfHwoYT09by8yfHxhPT0wKSYmKGVbaSsxXS9vLzEwMHwwKT09MDp0PDQ/KHQ9PTA/YT1hLzFlM3wwOnQ9PTE/YT1hLzEwMHwwOnQ9PTImJihhPWEvMTB8MCkscz0obnx8cjw0KSYmYT09OTk5OXx8IW4mJnI+MyYmYT09NDk5OSk6cz0oKG58fHI8NCkmJmErMT09b3x8IW4mJnI+MyYmYSsxPT1vLzIpJiYoZVtpKzFdL28vMWUzfDApPT1HKDEwLHQtMyktMSxzfWZ1bmN0aW9uIHhuKGUsdCxyKXtmb3IodmFyIG4saT1bMF0sbyxzPTAsYT1lLmxlbmd0aDtzPGE7KXtmb3Iobz1pLmxlbmd0aDtvLS07KWlbb10qPXQ7Zm9yKGlbMF0rPWVvLmluZGV4T2YoZS5jaGFyQXQocysrKSksbj0wO248aS5sZW5ndGg7bisrKWlbbl0+ci0xJiYoaVtuKzFdPT09dm9pZCAwJiYoaVtuKzFdPTApLGlbbisxXSs9aVtuXS9yfDAsaVtuXSU9cil9cmV0dXJuIGkucmV2ZXJzZSgpfWZ1bmN0aW9uIG5wKGUsdCl7dmFyIHIsbixpO2lmKHQuaXNaZXJvKCkpcmV0dXJuIHQ7bj10LmQubGVuZ3RoLG48MzI/KHI9TWF0aC5jZWlsKG4vMyksaT0oMS9Ubig0LHIpKS50b1N0cmluZygpKToocj0xNixpPVwiMi4zMjgzMDY0MzY1Mzg2OTYyODkwNjI1ZS0xMFwiKSxlLnByZWNpc2lvbis9cix0PXF0KGUsMSx0LnRpbWVzKGkpLG5ldyBlKDEpKTtmb3IodmFyIG89cjtvLS07KXt2YXIgcz10LnRpbWVzKHQpO3Q9cy50aW1lcyhzKS5taW51cyhzKS50aW1lcyg4KS5wbHVzKDEpfXJldHVybiBlLnByZWNpc2lvbi09cix0fXZhciBMPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShuLGksbyl7dmFyIHMsYT0wLGw9bi5sZW5ndGg7Zm9yKG49bi5zbGljZSgpO2wtLTspcz1uW2xdKmkrYSxuW2xdPXMlb3wwLGE9cy9vfDA7cmV0dXJuIGEmJm4udW5zaGlmdChhKSxufWZ1bmN0aW9uIHQobixpLG8scyl7dmFyIGEsbDtpZihvIT1zKWw9bz5zPzE6LTE7ZWxzZSBmb3IoYT1sPTA7YTxvO2ErKylpZihuW2FdIT1pW2FdKXtsPW5bYV0+aVthXT8xOi0xO2JyZWFrfXJldHVybiBsfWZ1bmN0aW9uIHIobixpLG8scyl7Zm9yKHZhciBhPTA7by0tOyluW29dLT1hLGE9bltvXTxpW29dPzE6MCxuW29dPWEqcytuW29dLWlbb107Zm9yKDshblswXSYmbi5sZW5ndGg+MTspbi5zaGlmdCgpfXJldHVybiBmdW5jdGlvbihuLGksbyxzLGEsbCl7dmFyIHUsYyxwLGQsZix5LGcsVCxBLFIsRSxTLHdlLGVlLHV0LEssbmUsamUsaWUsX3QsVXI9bi5jb25zdHJ1Y3RvcixhaT1uLnM9PWkucz8xOi0xLG9lPW4uZCxOPWkuZDtpZighb2V8fCFvZVswXXx8IU58fCFOWzBdKXJldHVybiBuZXcgVXIoIW4uc3x8IWkuc3x8KG9lP04mJm9lWzBdPT1OWzBdOiFOKT9OYU46b2UmJm9lWzBdPT0wfHwhTj9haSowOmFpLzApO2ZvcihsPyhmPTEsYz1uLmUtaS5lKToobD1DZSxmPVAsYz1hZShuLmUvZiktYWUoaS5lL2YpKSxpZT1OLmxlbmd0aCxuZT1vZS5sZW5ndGgsQT1uZXcgVXIoYWkpLFI9QS5kPVtdLHA9MDtOW3BdPT0ob2VbcF18fDApO3ArKyk7aWYoTltwXT4ob2VbcF18fDApJiZjLS0sbz09bnVsbD8oZWU9bz1Vci5wcmVjaXNpb24scz1Vci5yb3VuZGluZyk6YT9lZT1vKyhuLmUtaS5lKSsxOmVlPW8sZWU8MClSLnB1c2goMSkseT0hMDtlbHNle2lmKGVlPWVlL2YrMnwwLHA9MCxpZT09MSl7Zm9yKGQ9MCxOPU5bMF0sZWUrKzsocDxuZXx8ZCkmJmVlLS07cCsrKXV0PWQqbCsob2VbcF18fDApLFJbcF09dXQvTnwwLGQ9dXQlTnwwO3k9ZHx8cDxuZX1lbHNle2ZvcihkPWwvKE5bMF0rMSl8MCxkPjEmJihOPWUoTixkLGwpLG9lPWUob2UsZCxsKSxpZT1OLmxlbmd0aCxuZT1vZS5sZW5ndGgpLEs9aWUsRT1vZS5zbGljZSgwLGllKSxTPUUubGVuZ3RoO1M8aWU7KUVbUysrXT0wO190PU4uc2xpY2UoKSxfdC51bnNoaWZ0KDApLGplPU5bMF0sTlsxXT49bC8yJiYrK2plO2RvIGQ9MCx1PXQoTixFLGllLFMpLHU8MD8od2U9RVswXSxpZSE9UyYmKHdlPXdlKmwrKEVbMV18fDApKSxkPXdlL2plfDAsZD4xPyhkPj1sJiYoZD1sLTEpLGc9ZShOLGQsbCksVD1nLmxlbmd0aCxTPUUubGVuZ3RoLHU9dChnLEUsVCxTKSx1PT0xJiYoZC0tLHIoZyxpZTxUP190Ok4sVCxsKSkpOihkPT0wJiYodT1kPTEpLGc9Ti5zbGljZSgpKSxUPWcubGVuZ3RoLFQ8UyYmZy51bnNoaWZ0KDApLHIoRSxnLFMsbCksdT09LTEmJihTPUUubGVuZ3RoLHU9dChOLEUsaWUsUyksdTwxJiYoZCsrLHIoRSxpZTxTP190Ok4sUyxsKSkpLFM9RS5sZW5ndGgpOnU9PT0wJiYoZCsrLEU9WzBdKSxSW3ArK109ZCx1JiZFWzBdP0VbUysrXT1vZVtLXXx8MDooRT1bb2VbS11dLFM9MSk7d2hpbGUoKEsrKzxuZXx8RVswXSE9PXZvaWQgMCkmJmVlLS0pO3k9RVswXSE9PXZvaWQgMH1SWzBdfHxSLnNoaWZ0KCl9aWYoZj09MSlBLmU9YyxjYT15O2Vsc2V7Zm9yKHA9MSxkPVJbMF07ZD49MTA7ZC89MTApcCsrO0EuZT1wK2MqZi0xLHgoQSxhP28rQS5lKzE6byxzLHkpfXJldHVybiBBfX0oKTtmdW5jdGlvbiB4KGUsdCxyLG4pe3ZhciBpLG8scyxhLGwsdSxjLHAsZCxmPWUuY29uc3RydWN0b3I7ZTppZih0IT1udWxsKXtpZihwPWUuZCwhcClyZXR1cm4gZTtmb3IoaT0xLGE9cFswXTthPj0xMDthLz0xMClpKys7aWYobz10LWksbzwwKW8rPVAscz10LGM9cFtkPTBdLGw9Yy9HKDEwLGktcy0xKSUxMHwwO2Vsc2UgaWYoZD1NYXRoLmNlaWwoKG8rMSkvUCksYT1wLmxlbmd0aCxkPj1hKWlmKG4pe2Zvcig7YSsrPD1kOylwLnB1c2goMCk7Yz1sPTAsaT0xLG8lPVAscz1vLVArMX1lbHNlIGJyZWFrIGU7ZWxzZXtmb3IoYz1hPXBbZF0saT0xO2E+PTEwO2EvPTEwKWkrKztvJT1QLHM9by1QK2ksbD1zPDA/MDpjL0coMTAsaS1zLTEpJTEwfDB9aWYobj1ufHx0PDB8fHBbZCsxXSE9PXZvaWQgMHx8KHM8MD9jOmMlRygxMCxpLXMtMSkpLHU9cjw0PyhsfHxuKSYmKHI9PTB8fHI9PShlLnM8MD8zOjIpKTpsPjV8fGw9PTUmJihyPT00fHxufHxyPT02JiYobz4wP3M+MD9jL0coMTAsaS1zKTowOnBbZC0xXSklMTAmMXx8cj09KGUuczwwPzg6NykpLHQ8MXx8IXBbMF0pcmV0dXJuIHAubGVuZ3RoPTAsdT8odC09ZS5lKzEscFswXT1HKDEwLChQLXQlUCklUCksZS5lPS10fHwwKTpwWzBdPWUuZT0wLGU7aWYobz09MD8ocC5sZW5ndGg9ZCxhPTEsZC0tKToocC5sZW5ndGg9ZCsxLGE9RygxMCxQLW8pLHBbZF09cz4wPyhjL0coMTAsaS1zKSVHKDEwLHMpfDApKmE6MCksdSlmb3IoOzspaWYoZD09MCl7Zm9yKG89MSxzPXBbMF07cz49MTA7cy89MTApbysrO2ZvcihzPXBbMF0rPWEsYT0xO3M+PTEwO3MvPTEwKWErKztvIT1hJiYoZS5lKysscFswXT09Q2UmJihwWzBdPTEpKTticmVha31lbHNle2lmKHBbZF0rPWEscFtkXSE9Q2UpYnJlYWs7cFtkLS1dPTAsYT0xfWZvcihvPXAubGVuZ3RoO3BbLS1vXT09PTA7KXAucG9wKCl9cmV0dXJuIF8mJihlLmU+Zi5tYXhFPyhlLmQ9bnVsbCxlLmU9TmFOKTplLmU8Zi5taW5FJiYoZS5lPTAsZS5kPVswXSkpLGV9ZnVuY3Rpb24gRGUoZSx0LHIpe2lmKCFlLmlzRmluaXRlKCkpcmV0dXJuIGJhKGUpO3ZhciBuLGk9ZS5lLG89cmUoZS5kKSxzPW8ubGVuZ3RoO3JldHVybiB0PyhyJiYobj1yLXMpPjA/bz1vLmNoYXJBdCgwKStcIi5cIitvLnNsaWNlKDEpK2V0KG4pOnM+MSYmKG89by5jaGFyQXQoMCkrXCIuXCIrby5zbGljZSgxKSksbz1vKyhlLmU8MD9cImVcIjpcImUrXCIpK2UuZSk6aTwwPyhvPVwiMC5cIitldCgtaS0xKStvLHImJihuPXItcyk+MCYmKG8rPWV0KG4pKSk6aT49cz8obys9ZXQoaSsxLXMpLHImJihuPXItaS0xKT4wJiYobz1vK1wiLlwiK2V0KG4pKSk6KChuPWkrMSk8cyYmKG89by5zbGljZSgwLG4pK1wiLlwiK28uc2xpY2UobikpLHImJihuPXItcyk+MCYmKGkrMT09PXMmJihvKz1cIi5cIiksbys9ZXQobikpKSxvfWZ1bmN0aW9uIF9uKGUsdCl7dmFyIHI9ZVswXTtmb3IodCo9UDtyPj0xMDtyLz0xMCl0Kys7cmV0dXJuIHR9ZnVuY3Rpb24gUG4oZSx0LHIpe2lmKHQ+cnApdGhyb3cgXz0hMCxyJiYoZS5wcmVjaXNpb249ciksRXJyb3IocGEpO3JldHVybiB4KG5ldyBlKHduKSx0LDEsITApfWZ1bmN0aW9uIFRlKGUsdCxyKXtpZih0PnJvKXRocm93IEVycm9yKHBhKTtyZXR1cm4geChuZXcgZShFbiksdCxyLCEwKX1mdW5jdGlvbiBnYShlKXt2YXIgdD1lLmxlbmd0aC0xLHI9dCpQKzE7aWYodD1lW3RdLHQpe2Zvcig7dCUxMD09MDt0Lz0xMClyLS07Zm9yKHQ9ZVswXTt0Pj0xMDt0Lz0xMClyKyt9cmV0dXJuIHJ9ZnVuY3Rpb24gZXQoZSl7Zm9yKHZhciB0PVwiXCI7ZS0tOyl0Kz1cIjBcIjtyZXR1cm4gdH1mdW5jdGlvbiB5YShlLHQscixuKXt2YXIgaSxvPW5ldyBlKDEpLHM9TWF0aC5jZWlsKG4vUCs0KTtmb3IoXz0hMTs7KXtpZihyJTImJihvPW8udGltZXModCksbGEoby5kLHMpJiYoaT0hMCkpLHI9YWUoci8yKSxyPT09MCl7cj1vLmQubGVuZ3RoLTEsaSYmby5kW3JdPT09MCYmKytvLmRbcl07YnJlYWt9dD10LnRpbWVzKHQpLGxhKHQuZCxzKX1yZXR1cm4gXz0hMCxvfWZ1bmN0aW9uIGFhKGUpe3JldHVybiBlLmRbZS5kLmxlbmd0aC0xXSYxfWZ1bmN0aW9uIGhhKGUsdCxyKXtmb3IodmFyIG4saT1uZXcgZSh0WzBdKSxvPTA7KytvPHQubGVuZ3RoOylpZihuPW5ldyBlKHRbb10pLG4ucylpW3JdKG4pJiYoaT1uKTtlbHNle2k9bjticmVha31yZXR1cm4gaX1mdW5jdGlvbiBubyhlLHQpe3ZhciByLG4saSxvLHMsYSxsLHU9MCxjPTAscD0wLGQ9ZS5jb25zdHJ1Y3RvcixmPWQucm91bmRpbmcseT1kLnByZWNpc2lvbjtpZighZS5kfHwhZS5kWzBdfHxlLmU+MTcpcmV0dXJuIG5ldyBkKGUuZD9lLmRbMF0/ZS5zPDA/MDoxLzA6MTplLnM/ZS5zPDA/MDplOk5hTik7Zm9yKHQ9PW51bGw/KF89ITEsbD15KTpsPXQsYT1uZXcgZCguMDMxMjUpO2UuZT4tMjspZT1lLnRpbWVzKGEpLHArPTU7Zm9yKG49TWF0aC5sb2coRygyLHApKS9NYXRoLkxOMTAqMis1fDAsbCs9bixyPW89cz1uZXcgZCgxKSxkLnByZWNpc2lvbj1sOzspe2lmKG89eChvLnRpbWVzKGUpLGwsMSkscj1yLnRpbWVzKCsrYyksYT1zLnBsdXMoTChvLHIsbCwxKSkscmUoYS5kKS5zbGljZSgwLGwpPT09cmUocy5kKS5zbGljZSgwLGwpKXtmb3IoaT1wO2ktLTspcz14KHMudGltZXMocyksbCwxKTtpZih0PT1udWxsKWlmKHU8MyYmaHIocy5kLGwtbixmLHUpKWQucHJlY2lzaW9uPWwrPTEwLHI9bz1hPW5ldyBkKDEpLGM9MCx1Kys7ZWxzZSByZXR1cm4geChzLGQucHJlY2lzaW9uPXksZixfPSEwKTtlbHNlIHJldHVybiBkLnByZWNpc2lvbj15LHN9cz1hfX1mdW5jdGlvbiB0dChlLHQpe3ZhciByLG4saSxvLHMsYSxsLHUsYyxwLGQsZj0xLHk9MTAsZz1lLFQ9Zy5kLEE9Zy5jb25zdHJ1Y3RvcixSPUEucm91bmRpbmcsRT1BLnByZWNpc2lvbjtpZihnLnM8MHx8IVR8fCFUWzBdfHwhZy5lJiZUWzBdPT0xJiZULmxlbmd0aD09MSlyZXR1cm4gbmV3IEEoVCYmIVRbMF0/LTEvMDpnLnMhPTE/TmFOOlQ/MDpnKTtpZih0PT1udWxsPyhfPSExLGM9RSk6Yz10LEEucHJlY2lzaW9uPWMrPXkscj1yZShUKSxuPXIuY2hhckF0KDApLE1hdGguYWJzKG89Zy5lKTwxNWUxNCl7Zm9yKDtuPDcmJm4hPTF8fG49PTEmJnIuY2hhckF0KDEpPjM7KWc9Zy50aW1lcyhlKSxyPXJlKGcuZCksbj1yLmNoYXJBdCgwKSxmKys7bz1nLmUsbj4xPyhnPW5ldyBBKFwiMC5cIityKSxvKyspOmc9bmV3IEEobitcIi5cIityLnNsaWNlKDEpKX1lbHNlIHJldHVybiB1PVBuKEEsYysyLEUpLnRpbWVzKG8rXCJcIiksZz10dChuZXcgQShuK1wiLlwiK3Iuc2xpY2UoMSkpLGMteSkucGx1cyh1KSxBLnByZWNpc2lvbj1FLHQ9PW51bGw/eChnLEUsUixfPSEwKTpnO2ZvcihwPWcsbD1zPWc9TChnLm1pbnVzKDEpLGcucGx1cygxKSxjLDEpLGQ9eChnLnRpbWVzKGcpLGMsMSksaT0zOzspe2lmKHM9eChzLnRpbWVzKGQpLGMsMSksdT1sLnBsdXMoTChzLG5ldyBBKGkpLGMsMSkpLHJlKHUuZCkuc2xpY2UoMCxjKT09PXJlKGwuZCkuc2xpY2UoMCxjKSlpZihsPWwudGltZXMoMiksbyE9PTAmJihsPWwucGx1cyhQbihBLGMrMixFKS50aW1lcyhvK1wiXCIpKSksbD1MKGwsbmV3IEEoZiksYywxKSx0PT1udWxsKWlmKGhyKGwuZCxjLXksUixhKSlBLnByZWNpc2lvbj1jKz15LHU9cz1nPUwocC5taW51cygxKSxwLnBsdXMoMSksYywxKSxkPXgoZy50aW1lcyhnKSxjLDEpLGk9YT0xO2Vsc2UgcmV0dXJuIHgobCxBLnByZWNpc2lvbj1FLFIsXz0hMCk7ZWxzZSByZXR1cm4gQS5wcmVjaXNpb249RSxsO2w9dSxpKz0yfX1mdW5jdGlvbiBiYShlKXtyZXR1cm4gU3RyaW5nKGUucyplLnMvMCl9ZnVuY3Rpb24gaW8oZSx0KXt2YXIgcixuLGk7Zm9yKChyPXQuaW5kZXhPZihcIi5cIikpPi0xJiYodD10LnJlcGxhY2UoXCIuXCIsXCJcIikpLChuPXQuc2VhcmNoKC9lL2kpKT4wPyhyPDAmJihyPW4pLHIrPSt0LnNsaWNlKG4rMSksdD10LnN1YnN0cmluZygwLG4pKTpyPDAmJihyPXQubGVuZ3RoKSxuPTA7dC5jaGFyQ29kZUF0KG4pPT09NDg7bisrKTtmb3IoaT10Lmxlbmd0aDt0LmNoYXJDb2RlQXQoaS0xKT09PTQ4Oy0taSk7aWYodD10LnNsaWNlKG4saSksdCl7aWYoaS09bixlLmU9cj1yLW4tMSxlLmQ9W10sbj0ocisxKSVQLHI8MCYmKG4rPVApLG48aSl7Zm9yKG4mJmUuZC5wdXNoKCt0LnNsaWNlKDAsbikpLGktPVA7bjxpOyllLmQucHVzaCgrdC5zbGljZShuLG4rPVApKTt0PXQuc2xpY2Uobiksbj1QLXQubGVuZ3RofWVsc2Ugbi09aTtmb3IoO24tLTspdCs9XCIwXCI7ZS5kLnB1c2goK3QpLF8mJihlLmU+ZS5jb25zdHJ1Y3Rvci5tYXhFPyhlLmQ9bnVsbCxlLmU9TmFOKTplLmU8ZS5jb25zdHJ1Y3Rvci5taW5FJiYoZS5lPTAsZS5kPVswXSkpfWVsc2UgZS5lPTAsZS5kPVswXTtyZXR1cm4gZX1mdW5jdGlvbiBpcChlLHQpe3ZhciByLG4saSxvLHMsYSxsLHUsYztpZih0LmluZGV4T2YoXCJfXCIpPi0xKXtpZih0PXQucmVwbGFjZSgvKFxcZClfKD89XFxkKS9nLFwiJDFcIiksZmEudGVzdCh0KSlyZXR1cm4gaW8oZSx0KX1lbHNlIGlmKHQ9PT1cIkluZmluaXR5XCJ8fHQ9PT1cIk5hTlwiKXJldHVybit0fHwoZS5zPU5hTiksZS5lPU5hTixlLmQ9bnVsbCxlO2lmKFhjLnRlc3QodCkpcj0xNix0PXQudG9Mb3dlckNhc2UoKTtlbHNlIGlmKFpjLnRlc3QodCkpcj0yO2Vsc2UgaWYoZXAudGVzdCh0KSlyPTg7ZWxzZSB0aHJvdyBFcnJvcihydCt0KTtmb3Iobz10LnNlYXJjaCgvcC9pKSxvPjA/KGw9K3Quc2xpY2UobysxKSx0PXQuc3Vic3RyaW5nKDIsbykpOnQ9dC5zbGljZSgyKSxvPXQuaW5kZXhPZihcIi5cIikscz1vPj0wLG49ZS5jb25zdHJ1Y3RvcixzJiYodD10LnJlcGxhY2UoXCIuXCIsXCJcIiksYT10Lmxlbmd0aCxvPWEtbyxpPXlhKG4sbmV3IG4ociksbyxvKjIpKSx1PXhuKHQscixDZSksYz11Lmxlbmd0aC0xLG89Yzt1W29dPT09MDstLW8pdS5wb3AoKTtyZXR1cm4gbzwwP25ldyBuKGUucyowKTooZS5lPV9uKHUsYyksZS5kPXUsXz0hMSxzJiYoZT1MKGUsaSxhKjQpKSxsJiYoZT1lLnRpbWVzKE1hdGguYWJzKGwpPDU0P0coMixsKTp4dC5wb3coMixsKSkpLF89ITAsZSl9ZnVuY3Rpb24gb3AoZSx0KXt2YXIgcixuPXQuZC5sZW5ndGg7aWYobjwzKXJldHVybiB0LmlzWmVybygpP3Q6cXQoZSwyLHQsdCk7cj0xLjQqTWF0aC5zcXJ0KG4pLHI9cj4xNj8xNjpyfDAsdD10LnRpbWVzKDEvVG4oNSxyKSksdD1xdChlLDIsdCx0KTtmb3IodmFyIGksbz1uZXcgZSg1KSxzPW5ldyBlKDE2KSxhPW5ldyBlKDIwKTtyLS07KWk9dC50aW1lcyh0KSx0PXQudGltZXMoby5wbHVzKGkudGltZXMocy50aW1lcyhpKS5taW51cyhhKSkpKTtyZXR1cm4gdH1mdW5jdGlvbiBxdChlLHQscixuLGkpe3ZhciBvLHMsYSxsLHU9MSxjPWUucHJlY2lzaW9uLHA9TWF0aC5jZWlsKGMvUCk7Zm9yKF89ITEsbD1yLnRpbWVzKHIpLGE9bmV3IGUobik7Oyl7aWYocz1MKGEudGltZXMobCksbmV3IGUodCsrKnQrKyksYywxKSxhPWk/bi5wbHVzKHMpOm4ubWludXMocyksbj1MKHMudGltZXMobCksbmV3IGUodCsrKnQrKyksYywxKSxzPWEucGx1cyhuKSxzLmRbcF0hPT12b2lkIDApe2ZvcihvPXA7cy5kW29dPT09YS5kW29dJiZvLS07KTtpZihvPT0tMSlicmVha31vPWEsYT1uLG49cyxzPW8sdSsrfXJldHVybiBfPSEwLHMuZC5sZW5ndGg9cCsxLHN9ZnVuY3Rpb24gVG4oZSx0KXtmb3IodmFyIHI9ZTstLXQ7KXIqPWU7cmV0dXJuIHJ9ZnVuY3Rpb24geGEoZSx0KXt2YXIgcixuPXQuczwwLGk9VGUoZSxlLnByZWNpc2lvbiwxKSxvPWkudGltZXMoLjUpO2lmKHQ9dC5hYnMoKSx0Lmx0ZShvKSlyZXR1cm4gVWU9bj80OjEsdDtpZihyPXQuZGl2VG9JbnQoaSksci5pc1plcm8oKSlVZT1uPzM6MjtlbHNle2lmKHQ9dC5taW51cyhyLnRpbWVzKGkpKSx0Lmx0ZShvKSlyZXR1cm4gVWU9YWEocik/bj8yOjM6bj80OjEsdDtVZT1hYShyKT9uPzE6NDpuPzM6Mn1yZXR1cm4gdC5taW51cyhpKS5hYnMoKX1mdW5jdGlvbiBvbyhlLHQscixuKXt2YXIgaSxvLHMsYSxsLHUsYyxwLGQsZj1lLmNvbnN0cnVjdG9yLHk9ciE9PXZvaWQgMDtpZih5PyhmZShyLDEsbnQpLG49PT12b2lkIDA/bj1mLnJvdW5kaW5nOmZlKG4sMCw4KSk6KHI9Zi5wcmVjaXNpb24sbj1mLnJvdW5kaW5nKSwhZS5pc0Zpbml0ZSgpKWM9YmEoZSk7ZWxzZXtmb3IoYz1EZShlKSxzPWMuaW5kZXhPZihcIi5cIikseT8oaT0yLHQ9PTE2P3I9cio0LTM6dD09OCYmKHI9ciozLTIpKTppPXQscz49MCYmKGM9Yy5yZXBsYWNlKFwiLlwiLFwiXCIpLGQ9bmV3IGYoMSksZC5lPWMubGVuZ3RoLXMsZC5kPXhuKERlKGQpLDEwLGkpLGQuZT1kLmQubGVuZ3RoKSxwPXhuKGMsMTAsaSksbz1sPXAubGVuZ3RoO3BbLS1sXT09MDspcC5wb3AoKTtpZighcFswXSljPXk/XCIwcCswXCI6XCIwXCI7ZWxzZXtpZihzPDA/by0tOihlPW5ldyBmKGUpLGUuZD1wLGUuZT1vLGU9TChlLGQscixuLDAsaSkscD1lLmQsbz1lLmUsdT1jYSkscz1wW3JdLGE9aS8yLHU9dXx8cFtyKzFdIT09dm9pZCAwLHU9bjw0PyhzIT09dm9pZCAwfHx1KSYmKG49PT0wfHxuPT09KGUuczwwPzM6MikpOnM+YXx8cz09PWEmJihuPT09NHx8dXx8bj09PTYmJnBbci0xXSYxfHxuPT09KGUuczwwPzg6NykpLHAubGVuZ3RoPXIsdSlmb3IoOysrcFstLXJdPmktMTspcFtyXT0wLHJ8fCgrK28scC51bnNoaWZ0KDEpKTtmb3IobD1wLmxlbmd0aDshcFtsLTFdOy0tbCk7Zm9yKHM9MCxjPVwiXCI7czxsO3MrKyljKz1lby5jaGFyQXQocFtzXSk7aWYoeSl7aWYobD4xKWlmKHQ9PTE2fHx0PT04KXtmb3Iocz10PT0xNj80OjMsLS1sO2wlcztsKyspYys9XCIwXCI7Zm9yKHA9eG4oYyxpLHQpLGw9cC5sZW5ndGg7IXBbbC0xXTstLWwpO2ZvcihzPTEsYz1cIjEuXCI7czxsO3MrKyljKz1lby5jaGFyQXQocFtzXSl9ZWxzZSBjPWMuY2hhckF0KDApK1wiLlwiK2Muc2xpY2UoMSk7Yz1jKyhvPDA/XCJwXCI6XCJwK1wiKStvfWVsc2UgaWYobzwwKXtmb3IoOysrbzspYz1cIjBcIitjO2M9XCIwLlwiK2N9ZWxzZSBpZigrK28+bClmb3Ioby09bDtvLS07KWMrPVwiMFwiO2Vsc2UgbzxsJiYoYz1jLnNsaWNlKDAsbykrXCIuXCIrYy5zbGljZShvKSl9Yz0odD09MTY/XCIweFwiOnQ9PTI/XCIwYlwiOnQ9PTg/XCIwb1wiOlwiXCIpK2N9cmV0dXJuIGUuczwwP1wiLVwiK2M6Y31mdW5jdGlvbiBsYShlLHQpe2lmKGUubGVuZ3RoPnQpcmV0dXJuIGUubGVuZ3RoPXQsITB9ZnVuY3Rpb24gc3AoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmFicygpfWZ1bmN0aW9uIGFwKGUpe3JldHVybiBuZXcgdGhpcyhlKS5hY29zKCl9ZnVuY3Rpb24gbHAoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmFjb3NoKCl9ZnVuY3Rpb24gdXAoZSx0KXtyZXR1cm4gbmV3IHRoaXMoZSkucGx1cyh0KX1mdW5jdGlvbiBjcChlKXtyZXR1cm4gbmV3IHRoaXMoZSkuYXNpbigpfWZ1bmN0aW9uIHBwKGUpe3JldHVybiBuZXcgdGhpcyhlKS5hc2luaCgpfWZ1bmN0aW9uIGRwKGUpe3JldHVybiBuZXcgdGhpcyhlKS5hdGFuKCl9ZnVuY3Rpb24gbXAoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmF0YW5oKCl9ZnVuY3Rpb24gZnAoZSx0KXtlPW5ldyB0aGlzKGUpLHQ9bmV3IHRoaXModCk7dmFyIHIsbj10aGlzLnByZWNpc2lvbixpPXRoaXMucm91bmRpbmcsbz1uKzQ7cmV0dXJuIWUuc3x8IXQucz9yPW5ldyB0aGlzKE5hTik6IWUuZCYmIXQuZD8ocj1UZSh0aGlzLG8sMSkudGltZXModC5zPjA/LjI1Oi43NSksci5zPWUucyk6IXQuZHx8ZS5pc1plcm8oKT8ocj10LnM8MD9UZSh0aGlzLG4saSk6bmV3IHRoaXMoMCksci5zPWUucyk6IWUuZHx8dC5pc1plcm8oKT8ocj1UZSh0aGlzLG8sMSkudGltZXMoLjUpLHIucz1lLnMpOnQuczwwPyh0aGlzLnByZWNpc2lvbj1vLHRoaXMucm91bmRpbmc9MSxyPXRoaXMuYXRhbihMKGUsdCxvLDEpKSx0PVRlKHRoaXMsbywxKSx0aGlzLnByZWNpc2lvbj1uLHRoaXMucm91bmRpbmc9aSxyPWUuczwwP3IubWludXModCk6ci5wbHVzKHQpKTpyPXRoaXMuYXRhbihMKGUsdCxvLDEpKSxyfWZ1bmN0aW9uIGdwKGUpe3JldHVybiBuZXcgdGhpcyhlKS5jYnJ0KCl9ZnVuY3Rpb24geXAoZSl7cmV0dXJuIHgoZT1uZXcgdGhpcyhlKSxlLmUrMSwyKX1mdW5jdGlvbiBocChlLHQscil7cmV0dXJuIG5ldyB0aGlzKGUpLmNsYW1wKHQscil9ZnVuY3Rpb24gYnAoZSl7aWYoIWV8fHR5cGVvZiBlIT1cIm9iamVjdFwiKXRocm93IEVycm9yKHZuK1wiT2JqZWN0IGV4cGVjdGVkXCIpO3ZhciB0LHIsbixpPWUuZGVmYXVsdHM9PT0hMCxvPVtcInByZWNpc2lvblwiLDEsbnQsXCJyb3VuZGluZ1wiLDAsOCxcInRvRXhwTmVnXCIsLSR0LDAsXCJ0b0V4cFBvc1wiLDAsJHQsXCJtYXhFXCIsMCwkdCxcIm1pbkVcIiwtJHQsMCxcIm1vZHVsb1wiLDAsOV07Zm9yKHQ9MDt0PG8ubGVuZ3RoO3QrPTMpaWYocj1vW3RdLGkmJih0aGlzW3JdPXRvW3JdKSwobj1lW3JdKSE9PXZvaWQgMClpZihhZShuKT09PW4mJm4+PW9bdCsxXSYmbjw9b1t0KzJdKXRoaXNbcl09bjtlbHNlIHRocm93IEVycm9yKHJ0K3IrXCI6IFwiK24pO2lmKHI9XCJjcnlwdG9cIixpJiYodGhpc1tyXT10b1tyXSksKG49ZVtyXSkhPT12b2lkIDApaWYobj09PSEwfHxuPT09ITF8fG49PT0wfHxuPT09MSlpZihuKWlmKHR5cGVvZiBjcnlwdG88XCJ1XCImJmNyeXB0byYmKGNyeXB0by5nZXRSYW5kb21WYWx1ZXN8fGNyeXB0by5yYW5kb21CeXRlcykpdGhpc1tyXT0hMDtlbHNlIHRocm93IEVycm9yKGRhKTtlbHNlIHRoaXNbcl09ITE7ZWxzZSB0aHJvdyBFcnJvcihydCtyK1wiOiBcIituKTtyZXR1cm4gdGhpc31mdW5jdGlvbiB4cChlKXtyZXR1cm4gbmV3IHRoaXMoZSkuY29zKCl9ZnVuY3Rpb24gd3AoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmNvc2goKX1mdW5jdGlvbiB3YShlKXt2YXIgdCxyLG47ZnVuY3Rpb24gaShvKXt2YXIgcyxhLGwsdT10aGlzO2lmKCEodSBpbnN0YW5jZW9mIGkpKXJldHVybiBuZXcgaShvKTtpZih1LmNvbnN0cnVjdG9yPWksdWEobykpe3Uucz1vLnMsXz8hby5kfHxvLmU+aS5tYXhFPyh1LmU9TmFOLHUuZD1udWxsKTpvLmU8aS5taW5FPyh1LmU9MCx1LmQ9WzBdKToodS5lPW8uZSx1LmQ9by5kLnNsaWNlKCkpOih1LmU9by5lLHUuZD1vLmQ/by5kLnNsaWNlKCk6by5kKTtyZXR1cm59aWYobD10eXBlb2YgbyxsPT09XCJudW1iZXJcIil7aWYobz09PTApe3Uucz0xL288MD8tMToxLHUuZT0wLHUuZD1bMF07cmV0dXJufWlmKG88MD8obz0tbyx1LnM9LTEpOnUucz0xLG89PT1+fm8mJm88MWU3KXtmb3Iocz0wLGE9bzthPj0xMDthLz0xMClzKys7Xz9zPmkubWF4RT8odS5lPU5hTix1LmQ9bnVsbCk6czxpLm1pbkU/KHUuZT0wLHUuZD1bMF0pOih1LmU9cyx1LmQ9W29dKToodS5lPXMsdS5kPVtvXSk7cmV0dXJufWVsc2UgaWYobyowIT09MCl7b3x8KHUucz1OYU4pLHUuZT1OYU4sdS5kPW51bGw7cmV0dXJufXJldHVybiBpbyh1LG8udG9TdHJpbmcoKSl9ZWxzZSBpZihsIT09XCJzdHJpbmdcIil0aHJvdyBFcnJvcihydCtvKTtyZXR1cm4oYT1vLmNoYXJDb2RlQXQoMCkpPT09NDU/KG89by5zbGljZSgxKSx1LnM9LTEpOihhPT09NDMmJihvPW8uc2xpY2UoMSkpLHUucz0xKSxmYS50ZXN0KG8pP2lvKHUsbyk6aXAodSxvKX1pZihpLnByb3RvdHlwZT1tLGkuUk9VTkRfVVA9MCxpLlJPVU5EX0RPV049MSxpLlJPVU5EX0NFSUw9MixpLlJPVU5EX0ZMT09SPTMsaS5ST1VORF9IQUxGX1VQPTQsaS5ST1VORF9IQUxGX0RPV049NSxpLlJPVU5EX0hBTEZfRVZFTj02LGkuUk9VTkRfSEFMRl9DRUlMPTcsaS5ST1VORF9IQUxGX0ZMT09SPTgsaS5FVUNMSUQ9OSxpLmNvbmZpZz1pLnNldD1icCxpLmNsb25lPXdhLGkuaXNEZWNpbWFsPXVhLGkuYWJzPXNwLGkuYWNvcz1hcCxpLmFjb3NoPWxwLGkuYWRkPXVwLGkuYXNpbj1jcCxpLmFzaW5oPXBwLGkuYXRhbj1kcCxpLmF0YW5oPW1wLGkuYXRhbjI9ZnAsaS5jYnJ0PWdwLGkuY2VpbD15cCxpLmNsYW1wPWhwLGkuY29zPXhwLGkuY29zaD13cCxpLmRpdj1FcCxpLmV4cD1QcCxpLmZsb29yPXZwLGkuaHlwb3Q9X3AsaS5sbj1UcCxpLmxvZz1DcCxpLmxvZzEwPVJwLGkubG9nMj1BcCxpLm1heD1NcCxpLm1pbj1TcCxpLm1vZD1JcCxpLm11bD1rcCxpLnBvdz1GcCxpLnJhbmRvbT1PcCxpLnJvdW5kPURwLGkuc2lnbj1OcCxpLnNpbj1McCxpLnNpbmg9JHAsaS5zcXJ0PXFwLGkuc3ViPWpwLGkuc3VtPVZwLGkudGFuPUJwLGkudGFuaD1VcCxpLnRydW5jPUtwLGU9PT12b2lkIDAmJihlPXt9KSxlJiZlLmRlZmF1bHRzIT09ITApZm9yKG49W1wicHJlY2lzaW9uXCIsXCJyb3VuZGluZ1wiLFwidG9FeHBOZWdcIixcInRvRXhwUG9zXCIsXCJtYXhFXCIsXCJtaW5FXCIsXCJtb2R1bG9cIixcImNyeXB0b1wiXSx0PTA7dDxuLmxlbmd0aDspZS5oYXNPd25Qcm9wZXJ0eShyPW5bdCsrXSl8fChlW3JdPXRoaXNbcl0pO3JldHVybiBpLmNvbmZpZyhlKSxpfWZ1bmN0aW9uIEVwKGUsdCl7cmV0dXJuIG5ldyB0aGlzKGUpLmRpdih0KX1mdW5jdGlvbiBQcChlKXtyZXR1cm4gbmV3IHRoaXMoZSkuZXhwKCl9ZnVuY3Rpb24gdnAoZSl7cmV0dXJuIHgoZT1uZXcgdGhpcyhlKSxlLmUrMSwzKX1mdW5jdGlvbiBfcCgpe3ZhciBlLHQscj1uZXcgdGhpcygwKTtmb3IoXz0hMSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoOylpZih0PW5ldyB0aGlzKGFyZ3VtZW50c1tlKytdKSx0LmQpci5kJiYocj1yLnBsdXModC50aW1lcyh0KSkpO2Vsc2V7aWYodC5zKXJldHVybiBfPSEwLG5ldyB0aGlzKDEvMCk7cj10fXJldHVybiBfPSEwLHIuc3FydCgpfWZ1bmN0aW9uIHVhKGUpe3JldHVybiBlIGluc3RhbmNlb2YgeHR8fGUmJmUudG9TdHJpbmdUYWc9PT1tYXx8ITF9ZnVuY3Rpb24gVHAoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmxuKCl9ZnVuY3Rpb24gQ3AoZSx0KXtyZXR1cm4gbmV3IHRoaXMoZSkubG9nKHQpfWZ1bmN0aW9uIEFwKGUpe3JldHVybiBuZXcgdGhpcyhlKS5sb2coMil9ZnVuY3Rpb24gUnAoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLmxvZygxMCl9ZnVuY3Rpb24gTXAoKXtyZXR1cm4gaGEodGhpcyxhcmd1bWVudHMsXCJsdFwiKX1mdW5jdGlvbiBTcCgpe3JldHVybiBoYSh0aGlzLGFyZ3VtZW50cyxcImd0XCIpfWZ1bmN0aW9uIElwKGUsdCl7cmV0dXJuIG5ldyB0aGlzKGUpLm1vZCh0KX1mdW5jdGlvbiBrcChlLHQpe3JldHVybiBuZXcgdGhpcyhlKS5tdWwodCl9ZnVuY3Rpb24gRnAoZSx0KXtyZXR1cm4gbmV3IHRoaXMoZSkucG93KHQpfWZ1bmN0aW9uIE9wKGUpe3ZhciB0LHIsbixpLG89MCxzPW5ldyB0aGlzKDEpLGE9W107aWYoZT09PXZvaWQgMD9lPXRoaXMucHJlY2lzaW9uOmZlKGUsMSxudCksbj1NYXRoLmNlaWwoZS9QKSx0aGlzLmNyeXB0bylpZihjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKWZvcih0PWNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQzMkFycmF5KG4pKTtvPG47KWk9dFtvXSxpPj00MjllNz90W29dPWNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQzMkFycmF5KDEpKVswXTphW28rK109aSUxZTc7ZWxzZSBpZihjcnlwdG8ucmFuZG9tQnl0ZXMpe2Zvcih0PWNyeXB0by5yYW5kb21CeXRlcyhuKj00KTtvPG47KWk9dFtvXSsodFtvKzFdPDw4KSsodFtvKzJdPDwxNikrKCh0W28rM10mMTI3KTw8MjQpLGk+PTIxNGU3P2NyeXB0by5yYW5kb21CeXRlcyg0KS5jb3B5KHQsbyk6KGEucHVzaChpJTFlNyksbys9NCk7bz1uLzR9ZWxzZSB0aHJvdyBFcnJvcihkYSk7ZWxzZSBmb3IoO288bjspYVtvKytdPU1hdGgucmFuZG9tKCkqMWU3fDA7Zm9yKG49YVstLW9dLGUlPVAsbiYmZSYmKGk9RygxMCxQLWUpLGFbb109KG4vaXwwKSppKTthW29dPT09MDtvLS0pYS5wb3AoKTtpZihvPDApcj0wLGE9WzBdO2Vsc2V7Zm9yKHI9LTE7YVswXT09PTA7ci09UClhLnNoaWZ0KCk7Zm9yKG49MSxpPWFbMF07aT49MTA7aS89MTApbisrO248UCYmKHItPVAtbil9cmV0dXJuIHMuZT1yLHMuZD1hLHN9ZnVuY3Rpb24gRHAoZSl7cmV0dXJuIHgoZT1uZXcgdGhpcyhlKSxlLmUrMSx0aGlzLnJvdW5kaW5nKX1mdW5jdGlvbiBOcChlKXtyZXR1cm4gZT1uZXcgdGhpcyhlKSxlLmQ/ZS5kWzBdP2UuczowKmUuczplLnN8fE5hTn1mdW5jdGlvbiBMcChlKXtyZXR1cm4gbmV3IHRoaXMoZSkuc2luKCl9ZnVuY3Rpb24gJHAoZSl7cmV0dXJuIG5ldyB0aGlzKGUpLnNpbmgoKX1mdW5jdGlvbiBxcChlKXtyZXR1cm4gbmV3IHRoaXMoZSkuc3FydCgpfWZ1bmN0aW9uIGpwKGUsdCl7cmV0dXJuIG5ldyB0aGlzKGUpLnN1Yih0KX1mdW5jdGlvbiBWcCgpe3ZhciBlPTAsdD1hcmd1bWVudHMscj1uZXcgdGhpcyh0W2VdKTtmb3IoXz0hMTtyLnMmJisrZTx0Lmxlbmd0aDspcj1yLnBsdXModFtlXSk7cmV0dXJuIF89ITAseChyLHRoaXMucHJlY2lzaW9uLHRoaXMucm91bmRpbmcpfWZ1bmN0aW9uIEJwKGUpe3JldHVybiBuZXcgdGhpcyhlKS50YW4oKX1mdW5jdGlvbiBVcChlKXtyZXR1cm4gbmV3IHRoaXMoZSkudGFuaCgpfWZ1bmN0aW9uIEtwKGUpe3JldHVybiB4KGU9bmV3IHRoaXMoZSksZS5lKzEsMSl9bVtTeW1ib2wuZm9yKFwibm9kZWpzLnV0aWwuaW5zcGVjdC5jdXN0b21cIildPW0udG9TdHJpbmc7bVtTeW1ib2wudG9TdHJpbmdUYWddPVwiRGVjaW1hbFwiO3ZhciB4dD1tLmNvbnN0cnVjdG9yPXdhKHRvKTt3bj1uZXcgeHQod24pO0VuPW5ldyB4dChFbik7dmFyIE5lPXh0O2Z1bmN0aW9uIGp0KGUpe3JldHVybiB4dC5pc0RlY2ltYWwoZSk/ITA6ZSE9PW51bGwmJnR5cGVvZiBlPT1cIm9iamVjdFwiJiZ0eXBlb2YgZS5zPT1cIm51bWJlclwiJiZ0eXBlb2YgZS5lPT1cIm51bWJlclwiJiZ0eXBlb2YgZS50b0ZpeGVkPT1cImZ1bmN0aW9uXCImJkFycmF5LmlzQXJyYXkoZS5kKX12YXIgYnI9Y2xhc3N7Y29uc3RydWN0b3IodCxyLG4saSxvKXt0aGlzLm1vZGVsTmFtZT10LHRoaXMubmFtZT1yLHRoaXMudHlwZU5hbWU9bix0aGlzLmlzTGlzdD1pLHRoaXMuaXNFbnVtPW99X3RvR3JhcGhRTElucHV0VHlwZSgpe2xldCB0PXRoaXMuaXNMaXN0P1wiTGlzdFwiOlwiXCIscj10aGlzLmlzRW51bT9cIkVudW1cIjpcIlwiO3JldHVybmAke3R9JHtyfSR7dGhpcy50eXBlTmFtZX1GaWVsZFJlZklucHV0PCR7dGhpcy5tb2RlbE5hbWV9PmB9fTtmdW5jdGlvbiBWdChlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGJyfXZhciBDbj1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLnZhbHVlPXR9d3JpdGUodCl7dC53cml0ZSh0aGlzLnZhbHVlKX1tYXJrQXNFcnJvcigpe3RoaXMudmFsdWUubWFya0FzRXJyb3IoKX19O3ZhciBBbj1lPT5lLFJuPXtib2xkOkFuLHJlZDpBbixncmVlbjpBbixkaW06QW4sZW5hYmxlZDohMX0sRWE9e2JvbGQ6cGUscmVkOnZlLGdyZWVuOnB0LGRpbTpXZSxlbmFibGVkOiEwfSxCdD17d3JpdGUoZSl7ZS53cml0ZUxpbmUoXCIsXCIpfX07dmFyIExlPWNsYXNze2NvbnN0cnVjdG9yKHQpe3RoaXMuY29udGVudHM9dDt0aGlzLmlzVW5kZXJsaW5lZD0hMTt0aGlzLmNvbG9yPXQ9PnR9dW5kZXJsaW5lKCl7cmV0dXJuIHRoaXMuaXNVbmRlcmxpbmVkPSEwLHRoaXN9c2V0Q29sb3IodCl7cmV0dXJuIHRoaXMuY29sb3I9dCx0aGlzfXdyaXRlKHQpe2xldCByPXQuZ2V0Q3VycmVudExpbmVMZW5ndGgoKTt0LndyaXRlKHRoaXMuY29sb3IodGhpcy5jb250ZW50cykpLHRoaXMuaXNVbmRlcmxpbmVkJiZ0LmFmdGVyTmV4dE5ld2xpbmUoKCk9Pnt0LndyaXRlKFwiIFwiLnJlcGVhdChyKSkud3JpdGVMaW5lKHRoaXMuY29sb3IoXCJ+XCIucmVwZWF0KHRoaXMuY29udGVudHMubGVuZ3RoKSkpfSl9fTt2YXIgaXQ9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmhhc0Vycm9yPSExfW1hcmtBc0Vycm9yKCl7cmV0dXJuIHRoaXMuaGFzRXJyb3I9ITAsdGhpc319O3ZhciBVdD1jbGFzcyBleHRlbmRzIGl0e2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKTt0aGlzLml0ZW1zPVtdfWFkZEl0ZW0ocil7cmV0dXJuIHRoaXMuaXRlbXMucHVzaChuZXcgQ24ocikpLHRoaXN9Z2V0RmllbGQocil7cmV0dXJuIHRoaXMuaXRlbXNbcl19Z2V0UHJpbnRXaWR0aCgpe3JldHVybiB0aGlzLml0ZW1zLmxlbmd0aD09PTA/MjpNYXRoLm1heCguLi50aGlzLml0ZW1zLm1hcChuPT5uLnZhbHVlLmdldFByaW50V2lkdGgoKSkpKzJ9d3JpdGUocil7aWYodGhpcy5pdGVtcy5sZW5ndGg9PT0wKXt0aGlzLndyaXRlRW1wdHkocik7cmV0dXJufXRoaXMud3JpdGVXaXRoSXRlbXMocil9d3JpdGVFbXB0eShyKXtsZXQgbj1uZXcgTGUoXCJbXVwiKTt0aGlzLmhhc0Vycm9yJiZuLnNldENvbG9yKHIuY29udGV4dC5jb2xvcnMucmVkKS51bmRlcmxpbmUoKSxyLndyaXRlKG4pfXdyaXRlV2l0aEl0ZW1zKHIpe2xldHtjb2xvcnM6bn09ci5jb250ZXh0O3Iud3JpdGVMaW5lKFwiW1wiKS53aXRoSW5kZW50KCgpPT5yLndyaXRlSm9pbmVkKEJ0LHRoaXMuaXRlbXMpLm5ld0xpbmUoKSkud3JpdGUoXCJdXCIpLHRoaXMuaGFzRXJyb3ImJnIuYWZ0ZXJOZXh0TmV3bGluZSgoKT0+e3Iud3JpdGVMaW5lKG4ucmVkKFwiflwiLnJlcGVhdCh0aGlzLmdldFByaW50V2lkdGgoKSkpKX0pfX07dmFyIFBhPVwiOiBcIixNbj1jbGFzc3tjb25zdHJ1Y3Rvcih0LHIpe3RoaXMubmFtZT10O3RoaXMudmFsdWU9cjt0aGlzLmhhc0Vycm9yPSExfW1hcmtBc0Vycm9yKCl7dGhpcy5oYXNFcnJvcj0hMH1nZXRQcmludFdpZHRoKCl7cmV0dXJuIHRoaXMubmFtZS5sZW5ndGgrdGhpcy52YWx1ZS5nZXRQcmludFdpZHRoKCkrUGEubGVuZ3RofXdyaXRlKHQpe2xldCByPW5ldyBMZSh0aGlzLm5hbWUpO3RoaXMuaGFzRXJyb3ImJnIudW5kZXJsaW5lKCkuc2V0Q29sb3IodC5jb250ZXh0LmNvbG9ycy5yZWQpLHQud3JpdGUocikud3JpdGUoUGEpLndyaXRlKHRoaXMudmFsdWUpfX07dmFyIHo9Y2xhc3MgZSBleHRlbmRzIGl0e2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKTt0aGlzLmZpZWxkcz17fTt0aGlzLnN1Z2dlc3Rpb25zPVtdfWFkZEZpZWxkKHIpe3RoaXMuZmllbGRzW3IubmFtZV09cn1hZGRTdWdnZXN0aW9uKHIpe3RoaXMuc3VnZ2VzdGlvbnMucHVzaChyKX1nZXRGaWVsZChyKXtyZXR1cm4gdGhpcy5maWVsZHNbcl19Z2V0RGVlcEZpZWxkKHIpe2xldFtuLC4uLmldPXIsbz10aGlzLmdldEZpZWxkKG4pO2lmKCFvKXJldHVybjtsZXQgcz1vO2ZvcihsZXQgYSBvZiBpKXtsZXQgbDtpZihzLnZhbHVlIGluc3RhbmNlb2YgZT9sPXMudmFsdWUuZ2V0RmllbGQoYSk6cy52YWx1ZSBpbnN0YW5jZW9mIFV0JiYobD1zLnZhbHVlLmdldEZpZWxkKE51bWJlcihhKSkpLCFsKXJldHVybjtzPWx9cmV0dXJuIHN9Z2V0RGVlcEZpZWxkVmFsdWUocil7cmV0dXJuIHIubGVuZ3RoPT09MD90aGlzOnRoaXMuZ2V0RGVlcEZpZWxkKHIpPy52YWx1ZX1oYXNGaWVsZChyKXtyZXR1cm4hIXRoaXMuZ2V0RmllbGQocil9cmVtb3ZlQWxsRmllbGRzKCl7dGhpcy5maWVsZHM9e319cmVtb3ZlRmllbGQocil7ZGVsZXRlIHRoaXMuZmllbGRzW3JdfWdldEZpZWxkcygpe3JldHVybiB0aGlzLmZpZWxkc31pc0VtcHR5KCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZmllbGRzKS5sZW5ndGg9PT0wfWdldEZpZWxkVmFsdWUocil7cmV0dXJuIHRoaXMuZ2V0RmllbGQocik/LnZhbHVlfWdldERlZXBTdWJTZWxlY3Rpb25WYWx1ZShyKXtsZXQgbj10aGlzO2ZvcihsZXQgaSBvZiByKXtpZighKG4gaW5zdGFuY2VvZiBlKSlyZXR1cm47bGV0IG89bi5nZXRTdWJTZWxlY3Rpb25WYWx1ZShpKTtpZighbylyZXR1cm47bj1vfXJldHVybiBufWdldERlZXBTZWxlY3Rpb25QYXJlbnQocil7bGV0IG49dGhpcy5nZXRTZWxlY3Rpb25QYXJlbnQoKTtpZighbilyZXR1cm47bGV0IGk9bjtmb3IobGV0IG8gb2Ygcil7bGV0IHM9aS52YWx1ZS5nZXRGaWVsZFZhbHVlKG8pO2lmKCFzfHwhKHMgaW5zdGFuY2VvZiBlKSlyZXR1cm47bGV0IGE9cy5nZXRTZWxlY3Rpb25QYXJlbnQoKTtpZighYSlyZXR1cm47aT1hfXJldHVybiBpfWdldFNlbGVjdGlvblBhcmVudCgpe2xldCByPXRoaXMuZ2V0RmllbGQoXCJzZWxlY3RcIik7aWYocj8udmFsdWUgaW5zdGFuY2VvZiBlKXJldHVybntraW5kOlwic2VsZWN0XCIsdmFsdWU6ci52YWx1ZX07bGV0IG49dGhpcy5nZXRGaWVsZChcImluY2x1ZGVcIik7aWYobj8udmFsdWUgaW5zdGFuY2VvZiBlKXJldHVybntraW5kOlwiaW5jbHVkZVwiLHZhbHVlOm4udmFsdWV9fWdldFN1YlNlbGVjdGlvblZhbHVlKHIpe3JldHVybiB0aGlzLmdldFNlbGVjdGlvblBhcmVudCgpPy52YWx1ZS5maWVsZHNbcl0udmFsdWV9Z2V0UHJpbnRXaWR0aCgpe2xldCByPU9iamVjdC52YWx1ZXModGhpcy5maWVsZHMpO3JldHVybiByLmxlbmd0aD09MD8yOk1hdGgubWF4KC4uLnIubWFwKGk9PmkuZ2V0UHJpbnRXaWR0aCgpKSkrMn13cml0ZShyKXtsZXQgbj1PYmplY3QudmFsdWVzKHRoaXMuZmllbGRzKTtpZihuLmxlbmd0aD09PTAmJnRoaXMuc3VnZ2VzdGlvbnMubGVuZ3RoPT09MCl7dGhpcy53cml0ZUVtcHR5KHIpO3JldHVybn10aGlzLndyaXRlV2l0aENvbnRlbnRzKHIsbil9d3JpdGVFbXB0eShyKXtsZXQgbj1uZXcgTGUoXCJ7fVwiKTt0aGlzLmhhc0Vycm9yJiZuLnNldENvbG9yKHIuY29udGV4dC5jb2xvcnMucmVkKS51bmRlcmxpbmUoKSxyLndyaXRlKG4pfXdyaXRlV2l0aENvbnRlbnRzKHIsbil7ci53cml0ZUxpbmUoXCJ7XCIpLndpdGhJbmRlbnQoKCk9PntyLndyaXRlSm9pbmVkKEJ0LFsuLi5uLC4uLnRoaXMuc3VnZ2VzdGlvbnNdKS5uZXdMaW5lKCl9KSxyLndyaXRlKFwifVwiKSx0aGlzLmhhc0Vycm9yJiZyLmFmdGVyTmV4dE5ld2xpbmUoKCk9PntyLndyaXRlTGluZShyLmNvbnRleHQuY29sb3JzLnJlZChcIn5cIi5yZXBlYXQodGhpcy5nZXRQcmludFdpZHRoKCkpKSl9KX19O3ZhciBZPWNsYXNzIGV4dGVuZHMgaXR7Y29uc3RydWN0b3Iocil7c3VwZXIoKTt0aGlzLnRleHQ9cn1nZXRQcmludFdpZHRoKCl7cmV0dXJuIHRoaXMudGV4dC5sZW5ndGh9d3JpdGUocil7bGV0IG49bmV3IExlKHRoaXMudGV4dCk7dGhpcy5oYXNFcnJvciYmbi51bmRlcmxpbmUoKS5zZXRDb2xvcihyLmNvbnRleHQuY29sb3JzLnJlZCksci53cml0ZShuKX19O3ZhciBzbz1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmVycm9yTWVzc2FnZXM9W107dGhpcy5hcmd1bWVudHM9dH13cml0ZSh0KXt0LndyaXRlKHRoaXMuYXJndW1lbnRzKX1hZGRFcnJvck1lc3NhZ2UodCl7dGhpcy5lcnJvck1lc3NhZ2VzLnB1c2godCl9cmVuZGVyQWxsTWVzc2FnZXModCl7cmV0dXJuIHRoaXMuZXJyb3JNZXNzYWdlcy5tYXAocj0+cih0KSkuam9pbihgXG5gKX19O2Z1bmN0aW9uIFNuKGUpe3JldHVybiBuZXcgc28odmEoZSkpfWZ1bmN0aW9uIHZhKGUpe2xldCB0PW5ldyB6O2ZvcihsZXRbcixuXW9mIE9iamVjdC5lbnRyaWVzKGUpKXtsZXQgaT1uZXcgTW4ocixfYShuKSk7dC5hZGRGaWVsZChpKX1yZXR1cm4gdH1mdW5jdGlvbiBfYShlKXtpZih0eXBlb2YgZT09XCJzdHJpbmdcIilyZXR1cm4gbmV3IFkoSlNPTi5zdHJpbmdpZnkoZSkpO2lmKHR5cGVvZiBlPT1cIm51bWJlclwifHx0eXBlb2YgZT09XCJib29sZWFuXCIpcmV0dXJuIG5ldyBZKFN0cmluZyhlKSk7aWYodHlwZW9mIGU9PVwiYmlnaW50XCIpcmV0dXJuIG5ldyBZKGAke2V9bmApO2lmKGU9PT1udWxsKXJldHVybiBuZXcgWShcIm51bGxcIik7aWYoZT09PXZvaWQgMClyZXR1cm4gbmV3IFkoXCJ1bmRlZmluZWRcIik7aWYoanQoZSkpcmV0dXJuIG5ldyBZKGBuZXcgUHJpc21hLkRlY2ltYWwoXCIke2UudG9GaXhlZCgpfVwiKWApO2lmKGUgaW5zdGFuY2VvZiBVaW50OEFycmF5KXJldHVybiBCdWZmZXIuaXNCdWZmZXIoZSk/bmV3IFkoYEJ1ZmZlci5hbGxvYygke2UuYnl0ZUxlbmd0aH0pYCk6bmV3IFkoYG5ldyBVaW50OEFycmF5KCR7ZS5ieXRlTGVuZ3RofSlgKTtpZihlIGluc3RhbmNlb2YgRGF0ZSl7bGV0IHQ9Ym4oZSk/ZS50b0lTT1N0cmluZygpOlwiSW52YWxpZCBEYXRlXCI7cmV0dXJuIG5ldyBZKGBuZXcgRGF0ZShcIiR7dH1cIilgKX1yZXR1cm4gZSBpbnN0YW5jZW9mIGtlP25ldyBZKGBQcmlzbWEuJHtlLl9nZXROYW1lKCl9YCk6VnQoZSk/bmV3IFkoYHByaXNtYS4ke1pvKGUubW9kZWxOYW1lKX0uJGZpZWxkcy4ke2UubmFtZX1gKTpBcnJheS5pc0FycmF5KGUpP0dwKGUpOnR5cGVvZiBlPT1cIm9iamVjdFwiP3ZhKGUpOm5ldyBZKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSl9ZnVuY3Rpb24gR3AoZSl7bGV0IHQ9bmV3IFV0O2ZvcihsZXQgciBvZiBlKXQuYWRkSXRlbShfYShyKSk7cmV0dXJuIHR9ZnVuY3Rpb24gVGEoZSl7aWYoZT09PXZvaWQgMClyZXR1cm5cIlwiO2xldCB0PVNuKGUpO3JldHVybiBuZXcgTnQoMCx7Y29sb3JzOlJufSkud3JpdGUodCkudG9TdHJpbmcoKX12YXIgeHI9XCI8dW5rbm93bj5cIjtmdW5jdGlvbiBDYShlKXt2YXIgdD1lLnNwbGl0KGBcbmApO3JldHVybiB0LnJlZHVjZShmdW5jdGlvbihyLG4pe3ZhciBpPVdwKG4pfHxZcChuKXx8ZWQobil8fGlkKG4pfHxyZChuKTtyZXR1cm4gaSYmci5wdXNoKGkpLHJ9LFtdKX12YXIgSnA9L15cXHMqYXQgKC4qPykgP1xcKCgoPzpmaWxlfGh0dHBzP3xibG9ifGNocm9tZS1leHRlbnNpb258bmF0aXZlfGV2YWx8d2VicGFja3w8YW5vbnltb3VzPnxcXC98W2Etel06XFxcXHxcXFxcXFxcXCkuKj8pKD86OihcXGQrKSk/KD86OihcXGQrKSk/XFwpP1xccyokL2ksSHA9L1xcKChcXFMqKSg/OjooXFxkKykpKD86OihcXGQrKSlcXCkvO2Z1bmN0aW9uIFdwKGUpe3ZhciB0PUpwLmV4ZWMoZSk7aWYoIXQpcmV0dXJuIG51bGw7dmFyIHI9dFsyXSYmdFsyXS5pbmRleE9mKFwibmF0aXZlXCIpPT09MCxuPXRbMl0mJnRbMl0uaW5kZXhPZihcImV2YWxcIik9PT0wLGk9SHAuZXhlYyh0WzJdKTtyZXR1cm4gbiYmaSE9bnVsbCYmKHRbMl09aVsxXSx0WzNdPWlbMl0sdFs0XT1pWzNdKSx7ZmlsZTpyP251bGw6dFsyXSxtZXRob2ROYW1lOnRbMV18fHhyLGFyZ3VtZW50czpyP1t0WzJdXTpbXSxsaW5lTnVtYmVyOnRbM10/K3RbM106bnVsbCxjb2x1bW46dFs0XT8rdFs0XTpudWxsfX12YXIgenA9L15cXHMqYXQgKD86KCg/OlxcW29iamVjdCBvYmplY3RcXF0pPy4rKSApP1xcKD8oKD86ZmlsZXxtcy1hcHB4fGh0dHBzP3x3ZWJwYWNrfGJsb2IpOi4qPyk6KFxcZCspKD86OihcXGQrKSk/XFwpP1xccyokL2k7ZnVuY3Rpb24gWXAoZSl7dmFyIHQ9enAuZXhlYyhlKTtyZXR1cm4gdD97ZmlsZTp0WzJdLG1ldGhvZE5hbWU6dFsxXXx8eHIsYXJndW1lbnRzOltdLGxpbmVOdW1iZXI6K3RbM10sY29sdW1uOnRbNF0/K3RbNF06bnVsbH06bnVsbH12YXIgWnA9L15cXHMqKC4qPykoPzpcXCgoLio/KVxcKSk/KD86XnxAKSgoPzpmaWxlfGh0dHBzP3xibG9ifGNocm9tZXx3ZWJwYWNrfHJlc291cmNlfFxcW25hdGl2ZSkuKj98W15AXSpidW5kbGUpKD86OihcXGQrKSk/KD86OihcXGQrKSk/XFxzKiQvaSxYcD0vKFxcUyspIGxpbmUgKFxcZCspKD86ID4gZXZhbCBsaW5lIFxcZCspKiA+IGV2YWwvaTtmdW5jdGlvbiBlZChlKXt2YXIgdD1acC5leGVjKGUpO2lmKCF0KXJldHVybiBudWxsO3ZhciByPXRbM10mJnRbM10uaW5kZXhPZihcIiA+IGV2YWxcIik+LTEsbj1YcC5leGVjKHRbM10pO3JldHVybiByJiZuIT1udWxsJiYodFszXT1uWzFdLHRbNF09blsyXSx0WzVdPW51bGwpLHtmaWxlOnRbM10sbWV0aG9kTmFtZTp0WzFdfHx4cixhcmd1bWVudHM6dFsyXT90WzJdLnNwbGl0KFwiLFwiKTpbXSxsaW5lTnVtYmVyOnRbNF0/K3RbNF06bnVsbCxjb2x1bW46dFs1XT8rdFs1XTpudWxsfX12YXIgdGQ9L15cXHMqKD86KFteQF0qKSg/OlxcKCguKj8pXFwpKT9AKT8oXFxTLio/KTooXFxkKykoPzo6KFxcZCspKT9cXHMqJC9pO2Z1bmN0aW9uIHJkKGUpe3ZhciB0PXRkLmV4ZWMoZSk7cmV0dXJuIHQ/e2ZpbGU6dFszXSxtZXRob2ROYW1lOnRbMV18fHhyLGFyZ3VtZW50czpbXSxsaW5lTnVtYmVyOit0WzRdLGNvbHVtbjp0WzVdPyt0WzVdOm51bGx9Om51bGx9dmFyIG5kPS9eXFxzKmF0ICg/OigoPzpcXFtvYmplY3Qgb2JqZWN0XFxdKT9bXlxcXFwvXSsoPzogXFxbYXMgXFxTK1xcXSk/KSApP1xcKD8oLio/KTooXFxkKykoPzo6KFxcZCspKT9cXCk/XFxzKiQvaTtmdW5jdGlvbiBpZChlKXt2YXIgdD1uZC5leGVjKGUpO3JldHVybiB0P3tmaWxlOnRbMl0sbWV0aG9kTmFtZTp0WzFdfHx4cixhcmd1bWVudHM6W10sbGluZU51bWJlcjordFszXSxjb2x1bW46dFs0XT8rdFs0XTpudWxsfTpudWxsfXZhciBhbz1jbGFzc3tnZXRMb2NhdGlvbigpe3JldHVybiBudWxsfX0sbG89Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9lcnJvcj1uZXcgRXJyb3J9Z2V0TG9jYXRpb24oKXtsZXQgdD10aGlzLl9lcnJvci5zdGFjaztpZighdClyZXR1cm4gbnVsbDtsZXQgbj1DYSh0KS5maW5kKGk9PntpZighaS5maWxlKXJldHVybiExO2xldCBvPUxpKGkuZmlsZSk7cmV0dXJuIG8hPT1cIjxhbm9ueW1vdXM+XCImJiFvLmluY2x1ZGVzKFwiQHByaXNtYVwiKSYmIW8uaW5jbHVkZXMoXCIvcGFja2FnZXMvY2xpZW50L3NyYy9ydW50aW1lL1wiKSYmIW8uZW5kc1dpdGgoXCIvcnVudGltZS9iaW5hcnkuanNcIikmJiFvLmVuZHNXaXRoKFwiL3J1bnRpbWUvbGlicmFyeS5qc1wiKSYmIW8uZW5kc1dpdGgoXCIvcnVudGltZS9lZGdlLmpzXCIpJiYhby5lbmRzV2l0aChcIi9ydW50aW1lL2VkZ2UtZXNtLmpzXCIpJiYhby5zdGFydHNXaXRoKFwiaW50ZXJuYWwvXCIpJiYhaS5tZXRob2ROYW1lLmluY2x1ZGVzKFwibmV3IFwiKSYmIWkubWV0aG9kTmFtZS5pbmNsdWRlcyhcImdldENhbGxTaXRlXCIpJiYhaS5tZXRob2ROYW1lLmluY2x1ZGVzKFwiUHJveHkuXCIpJiZpLm1ldGhvZE5hbWUuc3BsaXQoXCIuXCIpLmxlbmd0aDw0fSk7cmV0dXJuIW58fCFuLmZpbGU/bnVsbDp7ZmlsZU5hbWU6bi5maWxlLGxpbmVOdW1iZXI6bi5saW5lTnVtYmVyLGNvbHVtbk51bWJlcjpuLmNvbHVtbn19fTtmdW5jdGlvbiBvdChlKXtyZXR1cm4gZT09PVwibWluaW1hbFwiP25ldyBhbzpuZXcgbG99dmFyIEFhPXtfYXZnOiEwLF9jb3VudDohMCxfc3VtOiEwLF9taW46ITAsX21heDohMH07ZnVuY3Rpb24gS3QoZT17fSl7bGV0IHQ9c2QoZSk7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHQpLnJlZHVjZSgobixbaSxvXSk9PihBYVtpXSE9PXZvaWQgMD9uLnNlbGVjdFtpXT17c2VsZWN0Om99Om5baV09byxuKSx7c2VsZWN0Ont9fSl9ZnVuY3Rpb24gc2QoZT17fSl7cmV0dXJuIHR5cGVvZiBlLl9jb3VudD09XCJib29sZWFuXCI/ey4uLmUsX2NvdW50OntfYWxsOmUuX2NvdW50fX06ZX1mdW5jdGlvbiBJbihlPXt9KXtyZXR1cm4gdD0+KHR5cGVvZiBlLl9jb3VudD09XCJib29sZWFuXCImJih0Ll9jb3VudD10Ll9jb3VudC5fYWxsKSx0KX1mdW5jdGlvbiBSYShlLHQpe2xldCByPUluKGUpO3JldHVybiB0KHthY3Rpb246XCJhZ2dyZWdhdGVcIix1bnBhY2tlcjpyLGFyZ3NNYXBwZXI6S3R9KShlKX1mdW5jdGlvbiBhZChlPXt9KXtsZXR7c2VsZWN0OnQsLi4ucn09ZTtyZXR1cm4gdHlwZW9mIHQ9PVwib2JqZWN0XCI/S3Qoey4uLnIsX2NvdW50OnR9KTpLdCh7Li4ucixfY291bnQ6e19hbGw6ITB9fSl9ZnVuY3Rpb24gbGQoZT17fSl7cmV0dXJuIHR5cGVvZiBlLnNlbGVjdD09XCJvYmplY3RcIj90PT5JbihlKSh0KS5fY291bnQ6dD0+SW4oZSkodCkuX2NvdW50Ll9hbGx9ZnVuY3Rpb24gTWEoZSx0KXtyZXR1cm4gdCh7YWN0aW9uOlwiY291bnRcIix1bnBhY2tlcjpsZChlKSxhcmdzTWFwcGVyOmFkfSkoZSl9ZnVuY3Rpb24gdWQoZT17fSl7bGV0IHQ9S3QoZSk7aWYoQXJyYXkuaXNBcnJheSh0LmJ5KSlmb3IobGV0IHIgb2YgdC5ieSl0eXBlb2Ygcj09XCJzdHJpbmdcIiYmKHQuc2VsZWN0W3JdPSEwKTtlbHNlIHR5cGVvZiB0LmJ5PT1cInN0cmluZ1wiJiYodC5zZWxlY3RbdC5ieV09ITApO3JldHVybiB0fWZ1bmN0aW9uIGNkKGU9e30pe3JldHVybiB0PT4odHlwZW9mIGU/Ll9jb3VudD09XCJib29sZWFuXCImJnQuZm9yRWFjaChyPT57ci5fY291bnQ9ci5fY291bnQuX2FsbH0pLHQpfWZ1bmN0aW9uIFNhKGUsdCl7cmV0dXJuIHQoe2FjdGlvbjpcImdyb3VwQnlcIix1bnBhY2tlcjpjZChlKSxhcmdzTWFwcGVyOnVkfSkoZSl9ZnVuY3Rpb24gSWEoZSx0LHIpe2lmKHQ9PT1cImFnZ3JlZ2F0ZVwiKXJldHVybiBuPT5SYShuLHIpO2lmKHQ9PT1cImNvdW50XCIpcmV0dXJuIG49Pk1hKG4scik7aWYodD09PVwiZ3JvdXBCeVwiKXJldHVybiBuPT5TYShuLHIpfWZ1bmN0aW9uIGthKGUsdCl7bGV0IHI9dC5maWVsZHMuZmlsdGVyKGk9PiFpLnJlbGF0aW9uTmFtZSksbj1LaShyLGk9PmkubmFtZSk7cmV0dXJuIG5ldyBQcm94eSh7fSx7Z2V0KGksbyl7aWYobyBpbiBpfHx0eXBlb2Ygbz09XCJzeW1ib2xcIilyZXR1cm4gaVtvXTtsZXQgcz1uW29dO2lmKHMpcmV0dXJuIG5ldyBicihlLG8scy50eXBlLHMuaXNMaXN0LHMua2luZD09PVwiZW51bVwiKX0sLi4uaG4oT2JqZWN0LmtleXMobikpfSl9dmFyIEZhPWU9PkFycmF5LmlzQXJyYXkoZSk/ZTplLnNwbGl0KFwiLlwiKSx1bz0oZSx0KT0+RmEodCkucmVkdWNlKChyLG4pPT5yJiZyW25dLGUpLE9hPShlLHQscik9PkZhKHQpLnJlZHVjZVJpZ2h0KChuLGksbyxzKT0+T2JqZWN0LmFzc2lnbih7fSx1byhlLHMuc2xpY2UoMCxvKSkse1tpXTpufSkscik7ZnVuY3Rpb24gcGQoZSx0KXtyZXR1cm4gZT09PXZvaWQgMHx8dD09PXZvaWQgMD9bXTpbLi4udCxcInNlbGVjdFwiLGVdfWZ1bmN0aW9uIGRkKGUsdCxyKXtyZXR1cm4gdD09PXZvaWQgMD9lPz97fTpPYSh0LHIsZXx8ITApfWZ1bmN0aW9uIGNvKGUsdCxyLG4saSxvKXtsZXQgYT1lLl9ydW50aW1lRGF0YU1vZGVsLm1vZGVsc1t0XS5maWVsZHMucmVkdWNlKChsLHUpPT4oey4uLmwsW3UubmFtZV06dX0pLHt9KTtyZXR1cm4gbD0+e2xldCB1PW90KGUuX2Vycm9yRm9ybWF0KSxjPXBkKG4saSkscD1kZChsLG8sYyksZD1yKHtkYXRhUGF0aDpjLGNhbGxzaXRlOnV9KShwKSxmPW1kKGUsdCk7cmV0dXJuIG5ldyBQcm94eShkLHtnZXQoeSxnKXtpZighZi5pbmNsdWRlcyhnKSlyZXR1cm4geVtnXTtsZXQgQT1bYVtnXS50eXBlLHIsZ10sUj1bYyxwXTtyZXR1cm4gY28oZSwuLi5BLC4uLlIpfSwuLi5obihbLi4uZiwuLi5PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhkKV0pfSl9fWZ1bmN0aW9uIG1kKGUsdCl7cmV0dXJuIGUuX3J1bnRpbWVEYXRhTW9kZWwubW9kZWxzW3RdLmZpZWxkcy5maWx0ZXIocj0+ci5raW5kPT09XCJvYmplY3RcIikubWFwKHI9PnIubmFtZSl9dmFyIGphPUYoJGkoKSk7dmFyIHFhPUYocmVxdWlyZShcImZzXCIpKTt2YXIgRGE9e2tleXdvcmQ6emUsZW50aXR5OnplLHZhbHVlOmU9PnBlKE10KGUpKSxwdW5jdHVhdGlvbjpNdCxkaXJlY3RpdmU6emUsZnVuY3Rpb246emUsdmFyaWFibGU6ZT0+cGUoTXQoZSkpLHN0cmluZzplPT5wZShwdChlKSksYm9vbGVhbjpSZSxudW1iZXI6emUsY29tbWVudDpZcn07dmFyIGZkPWU9PmUsa249e30sZ2Q9MCxDPXttYW51YWw6a24uUHJpc20mJmtuLlByaXNtLm1hbnVhbCxkaXNhYmxlV29ya2VyTWVzc2FnZUhhbmRsZXI6a24uUHJpc20mJmtuLlByaXNtLmRpc2FibGVXb3JrZXJNZXNzYWdlSGFuZGxlcix1dGlsOntlbmNvZGU6ZnVuY3Rpb24oZSl7aWYoZSBpbnN0YW5jZW9mIEFlKXtsZXQgdD1lO3JldHVybiBuZXcgQWUodC50eXBlLEMudXRpbC5lbmNvZGUodC5jb250ZW50KSx0LmFsaWFzKX1lbHNlIHJldHVybiBBcnJheS5pc0FycmF5KGUpP2UubWFwKEMudXRpbC5lbmNvZGUpOmUucmVwbGFjZSgvJi9nLFwiJmFtcDtcIikucmVwbGFjZSgvPC9nLFwiJmx0O1wiKS5yZXBsYWNlKC9cXHUwMGEwL2csXCIgXCIpfSx0eXBlOmZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSl9LG9iaklkOmZ1bmN0aW9uKGUpe3JldHVybiBlLl9faWR8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19pZFwiLHt2YWx1ZTorK2dkfSksZS5fX2lkfSxjbG9uZTpmdW5jdGlvbiBlKHQscil7bGV0IG4saSxvPUMudXRpbC50eXBlKHQpO3N3aXRjaChyPXJ8fHt9LG8pe2Nhc2VcIk9iamVjdFwiOmlmKGk9Qy51dGlsLm9iaklkKHQpLHJbaV0pcmV0dXJuIHJbaV07bj17fSxyW2ldPW47Zm9yKGxldCBzIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShzKSYmKG5bc109ZSh0W3NdLHIpKTtyZXR1cm4gbjtjYXNlXCJBcnJheVwiOnJldHVybiBpPUMudXRpbC5vYmpJZCh0KSxyW2ldP3JbaV06KG49W10scltpXT1uLHQuZm9yRWFjaChmdW5jdGlvbihzLGEpe25bYV09ZShzLHIpfSksbik7ZGVmYXVsdDpyZXR1cm4gdH19fSxsYW5ndWFnZXM6e2V4dGVuZDpmdW5jdGlvbihlLHQpe2xldCByPUMudXRpbC5jbG9uZShDLmxhbmd1YWdlc1tlXSk7Zm9yKGxldCBuIGluIHQpcltuXT10W25dO3JldHVybiByfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oZSx0LHIsbil7bj1ufHxDLmxhbmd1YWdlcztsZXQgaT1uW2VdLG89e307Zm9yKGxldCBhIGluIGkpaWYoaS5oYXNPd25Qcm9wZXJ0eShhKSl7aWYoYT09dClmb3IobGV0IGwgaW4gcilyLmhhc093blByb3BlcnR5KGwpJiYob1tsXT1yW2xdKTtyLmhhc093blByb3BlcnR5KGEpfHwob1thXT1pW2FdKX1sZXQgcz1uW2VdO3JldHVybiBuW2VdPW8sQy5sYW5ndWFnZXMuREZTKEMubGFuZ3VhZ2VzLGZ1bmN0aW9uKGEsbCl7bD09PXMmJmEhPWUmJih0aGlzW2FdPW8pfSksb30sREZTOmZ1bmN0aW9uIGUodCxyLG4saSl7aT1pfHx7fTtsZXQgbz1DLnV0aWwub2JqSWQ7Zm9yKGxldCBzIGluIHQpaWYodC5oYXNPd25Qcm9wZXJ0eShzKSl7ci5jYWxsKHQscyx0W3NdLG58fHMpO2xldCBhPXRbc10sbD1DLnV0aWwudHlwZShhKTtsPT09XCJPYmplY3RcIiYmIWlbbyhhKV0/KGlbbyhhKV09ITAsZShhLHIsbnVsbCxpKSk6bD09PVwiQXJyYXlcIiYmIWlbbyhhKV0mJihpW28oYSldPSEwLGUoYSxyLHMsaSkpfX19LHBsdWdpbnM6e30saGlnaGxpZ2h0OmZ1bmN0aW9uKGUsdCxyKXtsZXQgbj17Y29kZTplLGdyYW1tYXI6dCxsYW5ndWFnZTpyfTtyZXR1cm4gQy5ob29rcy5ydW4oXCJiZWZvcmUtdG9rZW5pemVcIixuKSxuLnRva2Vucz1DLnRva2VuaXplKG4uY29kZSxuLmdyYW1tYXIpLEMuaG9va3MucnVuKFwiYWZ0ZXItdG9rZW5pemVcIixuKSxBZS5zdHJpbmdpZnkoQy51dGlsLmVuY29kZShuLnRva2Vucyksbi5sYW5ndWFnZSl9LG1hdGNoR3JhbW1hcjpmdW5jdGlvbihlLHQscixuLGksbyxzKXtmb3IobGV0IGcgaW4gcil7aWYoIXIuaGFzT3duUHJvcGVydHkoZyl8fCFyW2ddKWNvbnRpbnVlO2lmKGc9PXMpcmV0dXJuO2xldCBUPXJbZ107VD1DLnV0aWwudHlwZShUKT09PVwiQXJyYXlcIj9UOltUXTtmb3IobGV0IEE9MDtBPFQubGVuZ3RoOysrQSl7bGV0IFI9VFtBXSxFPVIuaW5zaWRlLFM9ISFSLmxvb2tiZWhpbmQsd2U9ISFSLmdyZWVkeSxlZT0wLHV0PVIuYWxpYXM7aWYod2UmJiFSLnBhdHRlcm4uZ2xvYmFsKXtsZXQgSz1SLnBhdHRlcm4udG9TdHJpbmcoKS5tYXRjaCgvW2ltdXldKiQvKVswXTtSLnBhdHRlcm49UmVnRXhwKFIucGF0dGVybi5zb3VyY2UsSytcImdcIil9Uj1SLnBhdHRlcm58fFI7Zm9yKGxldCBLPW4sbmU9aTtLPHQubGVuZ3RoO25lKz10W0tdLmxlbmd0aCwrK0spe2xldCBqZT10W0tdO2lmKHQubGVuZ3RoPmUubGVuZ3RoKXJldHVybjtpZihqZSBpbnN0YW5jZW9mIEFlKWNvbnRpbnVlO2lmKHdlJiZLIT10Lmxlbmd0aC0xKXtSLmxhc3RJbmRleD1uZTt2YXIgcD1SLmV4ZWMoZSk7aWYoIXApYnJlYWs7dmFyIGM9cC5pbmRleCsoUz9wWzFdLmxlbmd0aDowKSxkPXAuaW5kZXgrcFswXS5sZW5ndGgsYT1LLGw9bmU7Zm9yKGxldCBOPXQubGVuZ3RoO2E8TiYmKGw8ZHx8IXRbYV0udHlwZSYmIXRbYS0xXS5ncmVlZHkpOysrYSlsKz10W2FdLmxlbmd0aCxjPj1sJiYoKytLLG5lPWwpO2lmKHRbS11pbnN0YW5jZW9mIEFlKWNvbnRpbnVlO3U9YS1LLGplPWUuc2xpY2UobmUsbCkscC5pbmRleC09bmV9ZWxzZXtSLmxhc3RJbmRleD0wO3ZhciBwPVIuZXhlYyhqZSksdT0xfWlmKCFwKXtpZihvKWJyZWFrO2NvbnRpbnVlfVMmJihlZT1wWzFdP3BbMV0ubGVuZ3RoOjApO3ZhciBjPXAuaW5kZXgrZWUscD1wWzBdLnNsaWNlKGVlKSxkPWMrcC5sZW5ndGgsZj1qZS5zbGljZSgwLGMpLHk9amUuc2xpY2UoZCk7bGV0IGllPVtLLHVdO2YmJigrK0ssbmUrPWYubGVuZ3RoLGllLnB1c2goZikpO2xldCBfdD1uZXcgQWUoZyxFP0MudG9rZW5pemUocCxFKTpwLHV0LHAsd2UpO2lmKGllLnB1c2goX3QpLHkmJmllLnB1c2goeSksQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseSh0LGllKSx1IT0xJiZDLm1hdGNoR3JhbW1hcihlLHQscixLLG5lLCEwLGcpLG8pYnJlYWt9fX19LHRva2VuaXplOmZ1bmN0aW9uKGUsdCl7bGV0IHI9W2VdLG49dC5yZXN0O2lmKG4pe2ZvcihsZXQgaSBpbiBuKXRbaV09bltpXTtkZWxldGUgdC5yZXN0fXJldHVybiBDLm1hdGNoR3JhbW1hcihlLHIsdCwwLDAsITEpLHJ9LGhvb2tzOnthbGw6e30sYWRkOmZ1bmN0aW9uKGUsdCl7bGV0IHI9Qy5ob29rcy5hbGw7cltlXT1yW2VdfHxbXSxyW2VdLnB1c2godCl9LHJ1bjpmdW5jdGlvbihlLHQpe2xldCByPUMuaG9va3MuYWxsW2VdO2lmKCEoIXJ8fCFyLmxlbmd0aCkpZm9yKHZhciBuPTAsaTtpPXJbbisrXTspaSh0KX19LFRva2VuOkFlfTtDLmxhbmd1YWdlcy5jbGlrZT17Y29tbWVudDpbe3BhdHRlcm46LyhefFteXFxcXF0pXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sbG9va2JlaGluZDohMH0se3BhdHRlcm46LyhefFteXFxcXDpdKVxcL1xcLy4qLyxsb29rYmVoaW5kOiEwLGdyZWVkeTohMH1dLHN0cmluZzp7cGF0dGVybjovKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLGdyZWVkeTohMH0sXCJjbGFzcy1uYW1lXCI6e3BhdHRlcm46LygoPzpcXGIoPzpjbGFzc3xpbnRlcmZhY2V8ZXh0ZW5kc3xpbXBsZW1lbnRzfHRyYWl0fGluc3RhbmNlb2Z8bmV3KVxccyspfCg/OmNhdGNoXFxzK1xcKCkpW1xcdy5cXFxcXSsvaSxsb29rYmVoaW5kOiEwLGluc2lkZTp7cHVuY3R1YXRpb246L1suXFxcXF0vfX0sa2V5d29yZDovXFxiKD86aWZ8ZWxzZXx3aGlsZXxkb3xmb3J8cmV0dXJufGlufGluc3RhbmNlb2Z8ZnVuY3Rpb258bmV3fHRyeXx0aHJvd3xjYXRjaHxmaW5hbGx5fG51bGx8YnJlYWt8Y29udGludWUpXFxiLyxib29sZWFuOi9cXGIoPzp0cnVlfGZhbHNlKVxcYi8sZnVuY3Rpb246L1xcdysoPz1cXCgpLyxudW1iZXI6L1xcYjB4W1xcZGEtZl0rXFxifCg/OlxcYlxcZCtcXC4/XFxkKnxcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPy9pLG9wZXJhdG9yOi8tLT98XFwrXFwrP3whPT89P3w8PT98Pj0/fD09Pz0/fCYmP3xcXHxcXHw/fFxcP3xcXCp8XFwvfH58XFxefCUvLHB1bmN0dWF0aW9uOi9be31bXFxdOygpLC46XS99O0MubGFuZ3VhZ2VzLmphdmFzY3JpcHQ9Qy5sYW5ndWFnZXMuZXh0ZW5kKFwiY2xpa2VcIix7XCJjbGFzcy1uYW1lXCI6W0MubGFuZ3VhZ2VzLmNsaWtlW1wiY2xhc3MtbmFtZVwiXSx7cGF0dGVybjovKF58W14kXFx3XFx4QTAtXFx1RkZGRl0pW18kQS1aXFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKig/PVxcLig/OnByb3RvdHlwZXxjb25zdHJ1Y3RvcikpLyxsb29rYmVoaW5kOiEwfV0sa2V5d29yZDpbe3BhdHRlcm46LygoPzpefH0pXFxzKikoPzpjYXRjaHxmaW5hbGx5KVxcYi8sbG9va2JlaGluZDohMH0se3BhdHRlcm46LyhefFteLl0pXFxiKD86YXN8YXN5bmMoPz1cXHMqKD86ZnVuY3Rpb25cXGJ8XFwofFskXFx3XFx4QTAtXFx1RkZGRl18JCkpfGF3YWl0fGJyZWFrfGNhc2V8Y2xhc3N8Y29uc3R8Y29udGludWV8ZGVidWdnZXJ8ZGVmYXVsdHxkZWxldGV8ZG98ZWxzZXxlbnVtfGV4cG9ydHxleHRlbmRzfGZvcnxmcm9tfGZ1bmN0aW9ufGdldHxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbnN0YW5jZW9mfGludGVyZmFjZXxsZXR8bmV3fG51bGx8b2Z8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNldHxzdGF0aWN8c3VwZXJ8c3dpdGNofHRoaXN8dGhyb3d8dHJ5fHR5cGVvZnx1bmRlZmluZWR8dmFyfHZvaWR8d2hpbGV8d2l0aHx5aWVsZClcXGIvLGxvb2tiZWhpbmQ6ITB9XSxudW1iZXI6L1xcYig/Oig/OjBbeFhdKD86W1xcZEEtRmEtZl0oPzpfW1xcZEEtRmEtZl0pPykrfDBbYkJdKD86WzAxXSg/Ol9bMDFdKT8pK3wwW29PXSg/OlswLTddKD86X1swLTddKT8pKyluP3woPzpcXGQoPzpfXFxkKT8pK258TmFOfEluZmluaXR5KVxcYnwoPzpcXGIoPzpcXGQoPzpfXFxkKT8pK1xcLj8oPzpcXGQoPzpfXFxkKT8pKnxcXEJcXC4oPzpcXGQoPzpfXFxkKT8pKykoPzpbRWVdWystXT8oPzpcXGQoPzpfXFxkKT8pKyk/LyxmdW5jdGlvbjovW18kYS16QS1aXFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKig/PVxccyooPzpcXC5cXHMqKD86YXBwbHl8YmluZHxjYWxsKVxccyopP1xcKCkvLG9wZXJhdG9yOi8tWy09XT98XFwrWys9XT98IT0/PT98PDw/PT98Pj4/Pj89P3w9KD86PT0/fD4pP3wmWyY9XT98XFx8W3w9XT98XFwqXFwqPz0/fFxcLz0/fH58XFxePT98JT0/fFxcP3xcXC57M30vfSk7Qy5sYW5ndWFnZXMuamF2YXNjcmlwdFtcImNsYXNzLW5hbWVcIl1bMF0ucGF0dGVybj0vKFxcYig/OmNsYXNzfGludGVyZmFjZXxleHRlbmRzfGltcGxlbWVudHN8aW5zdGFuY2VvZnxuZXcpXFxzKylbXFx3LlxcXFxdKy87Qy5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFwiamF2YXNjcmlwdFwiLFwia2V5d29yZFwiLHtyZWdleDp7cGF0dGVybjovKCg/Ol58W14kXFx3XFx4QTAtXFx1RkZGRi5cIidcXF0pXFxzXSlcXHMqKVxcLyhcXFsoPzpbXlxcXVxcXFxcXHJcXG5dfFxcXFwuKSpdfFxcXFwufFteL1xcXFxcXFtcXHJcXG5dKStcXC9bZ2lteXVzXXswLDZ9KD89XFxzKigkfFtcXHJcXG4sLjt9KVxcXV0pKS8sbG9va2JlaGluZDohMCxncmVlZHk6ITB9LFwiZnVuY3Rpb24tdmFyaWFibGVcIjp7cGF0dGVybjovW18kYS16QS1aXFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKig/PVxccypbPTpdXFxzKig/OmFzeW5jXFxzKik/KD86XFxiZnVuY3Rpb25cXGJ8KD86XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCl8W18kYS16QS1aXFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKilcXHMqPT4pKS8sYWxpYXM6XCJmdW5jdGlvblwifSxwYXJhbWV0ZXI6W3twYXR0ZXJuOi8oZnVuY3Rpb24oPzpcXHMrW18kQS1aYS16XFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKik/XFxzKlxcKFxccyopKD8hXFxzKSg/OlteKCldfFxcKFteKCldKlxcKSkrPyg/PVxccypcXCkpLyxsb29rYmVoaW5kOiEwLGluc2lkZTpDLmxhbmd1YWdlcy5qYXZhc2NyaXB0fSx7cGF0dGVybjovW18kYS16XFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKig/PVxccyo9PikvaSxpbnNpZGU6Qy5sYW5ndWFnZXMuamF2YXNjcmlwdH0se3BhdHRlcm46LyhcXChcXHMqKSg/IVxccykoPzpbXigpXXxcXChbXigpXSpcXCkpKz8oPz1cXHMqXFwpXFxzKj0+KS8sbG9va2JlaGluZDohMCxpbnNpZGU6Qy5sYW5ndWFnZXMuamF2YXNjcmlwdH0se3BhdHRlcm46LygoPzpcXGJ8XFxzfF4pKD8hKD86YXN8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb250aW51ZXxkZWJ1Z2dlcnxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVudW18ZXhwb3J0fGV4dGVuZHN8ZmluYWxseXxmb3J8ZnJvbXxmdW5jdGlvbnxnZXR8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5zdGFuY2VvZnxpbnRlcmZhY2V8bGV0fG5ld3xudWxsfG9mfHBhY2thZ2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cHVibGljfHJldHVybnxzZXR8c3RhdGljfHN1cGVyfHN3aXRjaHx0aGlzfHRocm93fHRyeXx0eXBlb2Z8dW5kZWZpbmVkfHZhcnx2b2lkfHdoaWxlfHdpdGh8eWllbGQpKD8hWyRcXHdcXHhBMC1cXHVGRkZGXSkpKD86W18kQS1aYS16XFx4QTAtXFx1RkZGRl1bJFxcd1xceEEwLVxcdUZGRkZdKlxccyopXFwoXFxzKikoPyFcXHMpKD86W14oKV18XFwoW14oKV0qXFwpKSs/KD89XFxzKlxcKVxccypcXHspLyxsb29rYmVoaW5kOiEwLGluc2lkZTpDLmxhbmd1YWdlcy5qYXZhc2NyaXB0fV0sY29uc3RhbnQ6L1xcYltBLVpdKD86W0EtWl9dfFxcZHg/KSpcXGIvfSk7Qy5sYW5ndWFnZXMubWFya3VwJiZDLmxhbmd1YWdlcy5tYXJrdXAudGFnLmFkZElubGluZWQoXCJzY3JpcHRcIixcImphdmFzY3JpcHRcIik7Qy5sYW5ndWFnZXMuanM9Qy5sYW5ndWFnZXMuamF2YXNjcmlwdDtDLmxhbmd1YWdlcy50eXBlc2NyaXB0PUMubGFuZ3VhZ2VzLmV4dGVuZChcImphdmFzY3JpcHRcIix7a2V5d29yZDovXFxiKD86YWJzdHJhY3R8YXN8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb25zdHJ1Y3Rvcnxjb250aW51ZXxkZWJ1Z2dlcnxkZWNsYXJlfGRlZmF1bHR8ZGVsZXRlfGRvfGVsc2V8ZW51bXxleHBvcnR8ZXh0ZW5kc3xmaW5hbGx5fGZvcnxmcm9tfGZ1bmN0aW9ufGdldHxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbnN0YW5jZW9mfGludGVyZmFjZXxpc3xrZXlvZnxsZXR8bW9kdWxlfG5hbWVzcGFjZXxuZXd8bnVsbHxvZnxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWFkb25seXxyZXR1cm58cmVxdWlyZXxzZXR8c3RhdGljfHN1cGVyfHN3aXRjaHx0aGlzfHRocm93fHRyeXx0eXBlfHR5cGVvZnx2YXJ8dm9pZHx3aGlsZXx3aXRofHlpZWxkKVxcYi8sYnVpbHRpbjovXFxiKD86c3RyaW5nfEZ1bmN0aW9ufGFueXxudW1iZXJ8Ym9vbGVhbnxBcnJheXxzeW1ib2x8Y29uc29sZXxQcm9taXNlfHVua25vd258bmV2ZXIpXFxiL30pO0MubGFuZ3VhZ2VzLnRzPUMubGFuZ3VhZ2VzLnR5cGVzY3JpcHQ7ZnVuY3Rpb24gQWUoZSx0LHIsbixpKXt0aGlzLnR5cGU9ZSx0aGlzLmNvbnRlbnQ9dCx0aGlzLmFsaWFzPXIsdGhpcy5sZW5ndGg9KG58fFwiXCIpLmxlbmd0aHwwLHRoaXMuZ3JlZWR5PSEhaX1BZS5zdHJpbmdpZnk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdHlwZW9mIGU9PVwic3RyaW5nXCI/ZTpBcnJheS5pc0FycmF5KGUpP2UubWFwKGZ1bmN0aW9uKHIpe3JldHVybiBBZS5zdHJpbmdpZnkocix0KX0pLmpvaW4oXCJcIik6eWQoZS50eXBlKShlLmNvbnRlbnQpfTtmdW5jdGlvbiB5ZChlKXtyZXR1cm4gRGFbZV18fGZkfWZ1bmN0aW9uIE5hKGUpe3JldHVybiBoZChlLEMubGFuZ3VhZ2VzLmphdmFzY3JpcHQpfWZ1bmN0aW9uIGhkKGUsdCl7cmV0dXJuIEMudG9rZW5pemUoZSx0KS5tYXAobj0+QWUuc3RyaW5naWZ5KG4pKS5qb2luKFwiXCIpfXZhciBMYT1GKFVzKCkpO2Z1bmN0aW9uICRhKGUpe3JldHVybigwLExhLmRlZmF1bHQpKGUpfXZhciBGbj1jbGFzcyBle3N0YXRpYyByZWFkKHQpe2xldCByO3RyeXtyPXFhLmRlZmF1bHQucmVhZEZpbGVTeW5jKHQsXCJ1dGYtOFwiKX1jYXRjaHtyZXR1cm4gbnVsbH1yZXR1cm4gZS5mcm9tQ29udGVudChyKX1zdGF0aWMgZnJvbUNvbnRlbnQodCl7bGV0IHI9dC5zcGxpdCgvXFxyP1xcbi8pO3JldHVybiBuZXcgZSgxLHIpfWNvbnN0cnVjdG9yKHQscil7dGhpcy5maXJzdExpbmVOdW1iZXI9dCx0aGlzLmxpbmVzPXJ9Z2V0IGxhc3RMaW5lTnVtYmVyKCl7cmV0dXJuIHRoaXMuZmlyc3RMaW5lTnVtYmVyK3RoaXMubGluZXMubGVuZ3RoLTF9bWFwTGluZUF0KHQscil7aWYodDx0aGlzLmZpcnN0TGluZU51bWJlcnx8dD50aGlzLmxpbmVzLmxlbmd0aCt0aGlzLmZpcnN0TGluZU51bWJlcilyZXR1cm4gdGhpcztsZXQgbj10LXRoaXMuZmlyc3RMaW5lTnVtYmVyLGk9Wy4uLnRoaXMubGluZXNdO3JldHVybiBpW25dPXIoaVtuXSksbmV3IGUodGhpcy5maXJzdExpbmVOdW1iZXIsaSl9bWFwTGluZXModCl7cmV0dXJuIG5ldyBlKHRoaXMuZmlyc3RMaW5lTnVtYmVyLHRoaXMubGluZXMubWFwKChyLG4pPT50KHIsdGhpcy5maXJzdExpbmVOdW1iZXIrbikpKX1saW5lQXQodCl7cmV0dXJuIHRoaXMubGluZXNbdC10aGlzLmZpcnN0TGluZU51bWJlcl19cHJlcGVuZFN5bWJvbEF0KHQscil7cmV0dXJuIHRoaXMubWFwTGluZXMoKG4saSk9Pmk9PT10P2Ake3J9ICR7bn1gOmAgICR7bn1gKX1zbGljZSh0LHIpe2xldCBuPXRoaXMubGluZXMuc2xpY2UodC0xLHIpLmpvaW4oYFxuYCk7cmV0dXJuIG5ldyBlKHQsJGEobikuc3BsaXQoYFxuYCkpfWhpZ2hsaWdodCgpe2xldCB0PU5hKHRoaXMudG9TdHJpbmcoKSk7cmV0dXJuIG5ldyBlKHRoaXMuZmlyc3RMaW5lTnVtYmVyLHQuc3BsaXQoYFxuYCkpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubGluZXMuam9pbihgXG5gKX19O3ZhciBiZD17cmVkOnZlLGdyYXk6WXIsZGltOldlLGJvbGQ6cGUsdW5kZXJsaW5lOnVlLGhpZ2hsaWdodFNvdXJjZTplPT5lLmhpZ2hsaWdodCgpfSx4ZD17cmVkOmU9PmUsZ3JheTplPT5lLGRpbTplPT5lLGJvbGQ6ZT0+ZSx1bmRlcmxpbmU6ZT0+ZSxoaWdobGlnaHRTb3VyY2U6ZT0+ZX07ZnVuY3Rpb24gd2Qoe2NhbGxzaXRlOmUsbWVzc2FnZTp0LG9yaWdpbmFsTWV0aG9kOnIsaXNQYW5pYzpuLGNhbGxBcmd1bWVudHM6aX0sbyl7bGV0IHM9e2Z1bmN0aW9uTmFtZTpgcHJpc21hLiR7cn0oKWAsbWVzc2FnZTp0LGlzUGFuaWM6bj8/ITEsY2FsbEFyZ3VtZW50czppfTtpZighZXx8dHlwZW9mIHdpbmRvdzxcInVcInx8cHJvY2Vzcy5lbnYuTk9ERV9FTlY9PT1cInByb2R1Y3Rpb25cIilyZXR1cm4gcztsZXQgYT1lLmdldExvY2F0aW9uKCk7aWYoIWF8fCFhLmxpbmVOdW1iZXJ8fCFhLmNvbHVtbk51bWJlcilyZXR1cm4gcztsZXQgbD1NYXRoLm1heCgxLGEubGluZU51bWJlci0zKSx1PUZuLnJlYWQoYS5maWxlTmFtZSk/LnNsaWNlKGwsYS5saW5lTnVtYmVyKSxjPXU/LmxpbmVBdChhLmxpbmVOdW1iZXIpO2lmKHUmJmMpe2xldCBwPVBkKGMpLGQ9RWQoYyk7aWYoIWQpcmV0dXJuIHM7cy5mdW5jdGlvbk5hbWU9YCR7ZC5jb2RlfSlgLHMubG9jYXRpb249YSxufHwodT11Lm1hcExpbmVBdChhLmxpbmVOdW1iZXIseT0+eS5zbGljZSgwLGQub3BlbmluZ0JyYWNlSW5kZXgpKSksdT1vLmhpZ2hsaWdodFNvdXJjZSh1KTtsZXQgZj1TdHJpbmcodS5sYXN0TGluZU51bWJlcikubGVuZ3RoO2lmKHMuY29udGV4dExpbmVzPXUubWFwTGluZXMoKHksZyk9Pm8uZ3JheShTdHJpbmcoZykucGFkU3RhcnQoZikpK1wiIFwiK3kpLm1hcExpbmVzKHk9Pm8uZGltKHkpKS5wcmVwZW5kU3ltYm9sQXQoYS5saW5lTnVtYmVyLG8uYm9sZChvLnJlZChcIlxcdTIxOTJcIikpKSxpKXtsZXQgeT1wK2YrMTt5Kz0yLHMuY2FsbEFyZ3VtZW50cz0oMCxqYS5kZWZhdWx0KShpLHkpLnNsaWNlKHkpfX1yZXR1cm4gc31mdW5jdGlvbiBFZChlKXtsZXQgdD1PYmplY3Qua2V5cyhFZS5Nb2RlbEFjdGlvbikuam9pbihcInxcIiksbj1uZXcgUmVnRXhwKFN0cmluZy5yYXdgXFwuKCR7dH0pXFwoYCkuZXhlYyhlKTtpZihuKXtsZXQgaT1uLmluZGV4K25bMF0ubGVuZ3RoLG89ZS5sYXN0SW5kZXhPZihcIiBcIixuLmluZGV4KSsxO3JldHVybntjb2RlOmUuc2xpY2UobyxpKSxvcGVuaW5nQnJhY2VJbmRleDppfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBQZChlKXtsZXQgdD0wO2ZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKXtpZihlLmNoYXJBdChyKSE9PVwiIFwiKXJldHVybiB0O3QrK31yZXR1cm4gdH1mdW5jdGlvbiB2ZCh7ZnVuY3Rpb25OYW1lOmUsbG9jYXRpb246dCxtZXNzYWdlOnIsaXNQYW5pYzpuLGNvbnRleHRMaW5lczppLGNhbGxBcmd1bWVudHM6b30scyl7bGV0IGE9W1wiXCJdLGw9dD9cIiBpblwiOlwiOlwiO2lmKG4/KGEucHVzaChzLnJlZChgT29wcywgYW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCEgVGhpcyBpcyAke3MuYm9sZChcIm9uIHVzXCIpfSwgeW91IGRpZCBub3RoaW5nIHdyb25nLmApKSxhLnB1c2gocy5yZWQoYEl0IG9jY3VycmVkIGluIHRoZSAke3MuYm9sZChgXFxgJHtlfVxcYGApfSBpbnZvY2F0aW9uJHtsfWApKSk6YS5wdXNoKHMucmVkKGBJbnZhbGlkICR7cy5ib2xkKGBcXGAke2V9XFxgYCl9IGludm9jYXRpb24ke2x9YCkpLHQmJmEucHVzaChzLnVuZGVybGluZShfZCh0KSkpLGkpe2EucHVzaChcIlwiKTtsZXQgdT1baS50b1N0cmluZygpXTtvJiYodS5wdXNoKG8pLHUucHVzaChzLmRpbShcIilcIikpKSxhLnB1c2godS5qb2luKFwiXCIpKSxvJiZhLnB1c2goXCJcIil9ZWxzZSBhLnB1c2goXCJcIiksbyYmYS5wdXNoKG8pLGEucHVzaChcIlwiKTtyZXR1cm4gYS5wdXNoKHIpLGEuam9pbihgXG5gKX1mdW5jdGlvbiBfZChlKXtsZXQgdD1bZS5maWxlTmFtZV07cmV0dXJuIGUubGluZU51bWJlciYmdC5wdXNoKFN0cmluZyhlLmxpbmVOdW1iZXIpKSxlLmNvbHVtbk51bWJlciYmdC5wdXNoKFN0cmluZyhlLmNvbHVtbk51bWJlcikpLHQuam9pbihcIjpcIil9ZnVuY3Rpb24gUXQoZSl7bGV0IHQ9ZS5zaG93Q29sb3JzP2JkOnhkLHI9d2QoZSx0KTtyZXR1cm4gdmQocix0KX1mdW5jdGlvbiBWYShlLHQscixuKXtyZXR1cm4gZT09PUVlLk1vZGVsQWN0aW9uLmZpbmRGaXJzdE9yVGhyb3d8fGU9PT1FZS5Nb2RlbEFjdGlvbi5maW5kVW5pcXVlT3JUaHJvdz9UZCh0LHIsbik6bn1mdW5jdGlvbiBUZChlLHQscil7cmV0dXJuIGFzeW5jIG49PntpZihcInJlamVjdE9uTm90Rm91bmRcImluIG4uYXJncyl7bGV0IG89UXQoe29yaWdpbmFsTWV0aG9kOm4uY2xpZW50TWV0aG9kLGNhbGxzaXRlOm4uY2FsbHNpdGUsbWVzc2FnZTpcIidyZWplY3RPbk5vdEZvdW5kJyBvcHRpb24gaXMgbm90IHN1cHBvcnRlZFwifSk7dGhyb3cgbmV3IHNlKG8se2NsaWVudFZlcnNpb246dH0pfXJldHVybiBhd2FpdCByKG4pLmNhdGNoKG89Pnt0aHJvdyBvIGluc3RhbmNlb2YgSCYmby5jb2RlPT09XCJQMjAyNVwiP25ldyBCZShgTm8gJHtlfSBmb3VuZGAsdCk6b30pfX1mdW5jdGlvbiAkZShlKXtyZXR1cm4gZS5yZXBsYWNlKC9eLi8sdD0+dC50b0xvd2VyQ2FzZSgpKX12YXIgQ2Q9W1wiZmluZFVuaXF1ZVwiLFwiZmluZFVuaXF1ZU9yVGhyb3dcIixcImZpbmRGaXJzdFwiLFwiZmluZEZpcnN0T3JUaHJvd1wiLFwiY3JlYXRlXCIsXCJ1cGRhdGVcIixcInVwc2VydFwiLFwiZGVsZXRlXCJdLEFkPVtcImFnZ3JlZ2F0ZVwiLFwiY291bnRcIixcImdyb3VwQnlcIl07ZnVuY3Rpb24gcG8oZSx0KXtsZXQgcj1lLl9leHRlbnNpb25zLmdldEFsbE1vZGVsRXh0ZW5zaW9ucyh0KT8/e30sbj1bUmQoZSx0KSxTZChlLHQpLGdyKHIpLGNlKFwibmFtZVwiLCgpPT50KSxjZShcIiRuYW1lXCIsKCk9PnQpLGNlKFwiJHBhcmVudFwiLCgpPT5lLl9hcHBsaWVkUGFyZW50KV07cmV0dXJuIE9lKHt9LG4pfWZ1bmN0aW9uIFJkKGUsdCl7bGV0IHI9JGUodCksbj1PYmplY3Qua2V5cyhFZS5Nb2RlbEFjdGlvbikuY29uY2F0KFwiY291bnRcIik7cmV0dXJue2dldEtleXMoKXtyZXR1cm4gbn0sZ2V0UHJvcGVydHlWYWx1ZShpKXtsZXQgbz1pLHM9bD0+ZS5fcmVxdWVzdChsKTtzPVZhKG8sdCxlLl9jbGllbnRWZXJzaW9uLHMpO2xldCBhPWw9PnU9PntsZXQgYz1vdChlLl9lcnJvckZvcm1hdCk7cmV0dXJuIGUuX2NyZWF0ZVByaXNtYVByb21pc2UocD0+e2xldCBkPXthcmdzOnUsZGF0YVBhdGg6W10sYWN0aW9uOm8sbW9kZWw6dCxjbGllbnRNZXRob2Q6YCR7cn0uJHtpfWAsanNNb2RlbE5hbWU6cix0cmFuc2FjdGlvbjpwLGNhbGxzaXRlOmN9O3JldHVybiBzKHsuLi5kLC4uLmx9KX0pfTtyZXR1cm4gQ2QuaW5jbHVkZXMobyk/Y28oZSx0LGEpOk1kKGkpP0lhKGUsaSxhKTphKHt9KX19fWZ1bmN0aW9uIE1kKGUpe3JldHVybiBBZC5pbmNsdWRlcyhlKX1mdW5jdGlvbiBTZChlLHQpe3JldHVybiBidChjZShcImZpZWxkc1wiLCgpPT57bGV0IHI9ZS5fcnVudGltZURhdGFNb2RlbC5tb2RlbHNbdF07cmV0dXJuIGthKHQscil9KSl9ZnVuY3Rpb24gQmEoZSl7cmV0dXJuIGUucmVwbGFjZSgvXi4vLHQ9PnQudG9VcHBlckNhc2UoKSl9dmFyIG1vPVN5bWJvbCgpO2Z1bmN0aW9uIHdyKGUpe2xldCB0PVtJZChlKSxjZShtbywoKT0+ZSksY2UoXCIkcGFyZW50XCIsKCk9PmUuX2FwcGxpZWRQYXJlbnQpXSxyPWUuX2V4dGVuc2lvbnMuZ2V0QWxsQ2xpZW50RXh0ZW5zaW9ucygpO3JldHVybiByJiZ0LnB1c2goZ3IocikpLE9lKGUsdCl9ZnVuY3Rpb24gSWQoZSl7bGV0IHQ9T2JqZWN0LmtleXMoZS5fcnVudGltZURhdGFNb2RlbC5tb2RlbHMpLHI9dC5tYXAoJGUpLG49Wy4uLm5ldyBTZXQodC5jb25jYXQocikpXTtyZXR1cm4gYnQoe2dldEtleXMoKXtyZXR1cm4gbn0sZ2V0UHJvcGVydHlWYWx1ZShpKXtsZXQgbz1CYShpKTtpZihlLl9ydW50aW1lRGF0YU1vZGVsLm1vZGVsc1tvXSE9PXZvaWQgMClyZXR1cm4gcG8oZSxvKTtpZihlLl9ydW50aW1lRGF0YU1vZGVsLm1vZGVsc1tpXSE9PXZvaWQgMClyZXR1cm4gcG8oZSxpKX0sZ2V0UHJvcGVydHlEZXNjcmlwdG9yKGkpe2lmKCFyLmluY2x1ZGVzKGkpKXJldHVybntlbnVtZXJhYmxlOiExfX19KX1mdW5jdGlvbiBPbihlKXtyZXR1cm4gZVttb10/ZVttb106ZX1mdW5jdGlvbiBVYShlKXtpZih0eXBlb2YgZT09XCJmdW5jdGlvblwiKXJldHVybiBlKHRoaXMpO2xldCB0PU9uKHRoaXMpLHI9T2JqZWN0LmNyZWF0ZSh0LHtfZXh0ZW5zaW9uczp7dmFsdWU6dGhpcy5fZXh0ZW5zaW9ucy5hcHBlbmQoZSl9LF9hcHBsaWVkUGFyZW50Ont2YWx1ZTp0aGlzLGNvbmZpZ3VyYWJsZTohMH0sJHVzZTp7dmFsdWU6dm9pZCAwfSwkb246e3ZhbHVlOnZvaWQgMH19KTtyZXR1cm4gd3Iocil9ZnVuY3Rpb24gS2Eoe3Jlc3VsdDplLG1vZGVsTmFtZTp0LHNlbGVjdDpyLGV4dGVuc2lvbnM6bn0pe2xldCBpPW4uZ2V0QWxsQ29tcHV0ZWRGaWVsZHModCk7aWYoIWkpcmV0dXJuIGU7bGV0IG89W10scz1bXTtmb3IobGV0IGEgb2YgT2JqZWN0LnZhbHVlcyhpKSl7aWYocil7aWYoIXJbYS5uYW1lXSljb250aW51ZTtsZXQgbD1hLm5lZWRzLmZpbHRlcih1PT4hclt1XSk7bC5sZW5ndGg+MCYmcy5wdXNoKHlyKGwpKX1rZChlLGEubmVlZHMpJiZvLnB1c2goRmQoYSxPZShlLG8pKSl9cmV0dXJuIG8ubGVuZ3RoPjB8fHMubGVuZ3RoPjA/T2UoZSxbLi4ubywuLi5zXSk6ZX1mdW5jdGlvbiBrZChlLHQpe3JldHVybiB0LmV2ZXJ5KHI9PlVpKGUscikpfWZ1bmN0aW9uIEZkKGUsdCl7cmV0dXJuIGJ0KGNlKGUubmFtZSwoKT0+ZS5jb21wdXRlKHQpKSl9ZnVuY3Rpb24gRG4oe3Zpc2l0b3I6ZSxyZXN1bHQ6dCxhcmdzOnIscnVudGltZURhdGFNb2RlbDpuLG1vZGVsTmFtZTppfSl7aWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKGxldCBzPTA7czx0Lmxlbmd0aDtzKyspdFtzXT1Ebih7cmVzdWx0OnRbc10sYXJnczpyLG1vZGVsTmFtZTppLHJ1bnRpbWVEYXRhTW9kZWw6bix2aXNpdG9yOmV9KTtyZXR1cm4gdH1sZXQgbz1lKHQsaSxyKT8/dDtyZXR1cm4gci5pbmNsdWRlJiZRYSh7aW5jbHVkZU9yU2VsZWN0OnIuaW5jbHVkZSxyZXN1bHQ6byxwYXJlbnRNb2RlbE5hbWU6aSxydW50aW1lRGF0YU1vZGVsOm4sdmlzaXRvcjplfSksci5zZWxlY3QmJlFhKHtpbmNsdWRlT3JTZWxlY3Q6ci5zZWxlY3QscmVzdWx0Om8scGFyZW50TW9kZWxOYW1lOmkscnVudGltZURhdGFNb2RlbDpuLHZpc2l0b3I6ZX0pLG99ZnVuY3Rpb24gUWEoe2luY2x1ZGVPclNlbGVjdDplLHJlc3VsdDp0LHBhcmVudE1vZGVsTmFtZTpyLHJ1bnRpbWVEYXRhTW9kZWw6bix2aXNpdG9yOml9KXtmb3IobGV0W28sc11vZiBPYmplY3QuZW50cmllcyhlKSl7aWYoIXN8fHRbb109PW51bGwpY29udGludWU7bGV0IGw9bi5tb2RlbHNbcl0uZmllbGRzLmZpbmQoYz0+Yy5uYW1lPT09byk7aWYoIWx8fGwua2luZCE9PVwib2JqZWN0XCJ8fCFsLnJlbGF0aW9uTmFtZSljb250aW51ZTtsZXQgdT10eXBlb2Ygcz09XCJvYmplY3RcIj9zOnt9O3Rbb109RG4oe3Zpc2l0b3I6aSxyZXN1bHQ6dFtvXSxhcmdzOnUsbW9kZWxOYW1lOmwudHlwZSxydW50aW1lRGF0YU1vZGVsOm59KX19ZnVuY3Rpb24gR2Eoe3Jlc3VsdDplLG1vZGVsTmFtZTp0LGFyZ3M6cixleHRlbnNpb25zOm4scnVudGltZURhdGFNb2RlbDppfSl7cmV0dXJuIG4uaXNFbXB0eSgpfHxlPT1udWxsfHx0eXBlb2YgZSE9XCJvYmplY3RcInx8IWkubW9kZWxzW3RdP2U6RG4oe3Jlc3VsdDplLGFyZ3M6cj8/e30sbW9kZWxOYW1lOnQscnVudGltZURhdGFNb2RlbDppLHZpc2l0b3I6KHMsYSxsKT0+S2Eoe3Jlc3VsdDpzLG1vZGVsTmFtZTokZShhKSxzZWxlY3Q6bC5zZWxlY3QsZXh0ZW5zaW9uczpufSl9KX1mdW5jdGlvbiBKYShlKXtpZihlIGluc3RhbmNlb2YgbWUpcmV0dXJuIE9kKGUpO2lmKEFycmF5LmlzQXJyYXkoZSkpe2xldCByPVtlWzBdXTtmb3IobGV0IG49MTtuPGUubGVuZ3RoO24rKylyW25dPUVyKGVbbl0pO3JldHVybiByfWxldCB0PXt9O2ZvcihsZXQgciBpbiBlKXRbcl09RXIoZVtyXSk7cmV0dXJuIHR9ZnVuY3Rpb24gT2QoZSl7cmV0dXJuIG5ldyBtZShlLnN0cmluZ3MsZS52YWx1ZXMpfWZ1bmN0aW9uIEVyKGUpe2lmKHR5cGVvZiBlIT1cIm9iamVjdFwifHxlPT1udWxsfHxlIGluc3RhbmNlb2Yga2V8fFZ0KGUpKXJldHVybiBlO2lmKGp0KGUpKXJldHVybiBuZXcgTmUoZS50b0ZpeGVkKCkpO2lmKEx0KGUpKXJldHVybiBuZXcgRGF0ZSgrZSk7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXJldHVybiBlLnNsaWNlKDApO2lmKEFycmF5LmlzQXJyYXkoZSkpe2xldCB0PWUubGVuZ3RoLHI7Zm9yKHI9QXJyYXkodCk7dC0tOylyW3RdPUVyKGVbdF0pO3JldHVybiByfWlmKHR5cGVvZiBlPT1cIm9iamVjdFwiKXtsZXQgdD17fTtmb3IobGV0IHIgaW4gZSlyPT09XCJfX3Byb3RvX19cIj9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLHt2YWx1ZTpFcihlW3JdKSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbcl09RXIoZVtyXSk7cmV0dXJuIHR9eXQoZSxcIlVua25vd24gdmFsdWVcIil9ZnVuY3Rpb24gV2EoZSx0LHIsbj0wKXtyZXR1cm4gZS5fY3JlYXRlUHJpc21hUHJvbWlzZShpPT57bGV0IG89dC5jdXN0b21EYXRhUHJveHlGZXRjaDtyZXR1cm5cInRyYW5zYWN0aW9uXCJpbiB0JiZpIT09dm9pZCAwJiYodC50cmFuc2FjdGlvbj8ua2luZD09PVwiYmF0Y2hcIiYmdC50cmFuc2FjdGlvbi5sb2NrLnRoZW4oKSx0LnRyYW5zYWN0aW9uPWkpLG49PT1yLmxlbmd0aD9lLl9leGVjdXRlUmVxdWVzdCh0KTpyW25dKHttb2RlbDp0Lm1vZGVsLG9wZXJhdGlvbjp0Lm1vZGVsP3QuYWN0aW9uOnQuY2xpZW50TWV0aG9kLGFyZ3M6SmEodC5hcmdzPz97fSksX19pbnRlcm5hbFBhcmFtczp0LHF1ZXJ5OihzLGE9dCk9PntsZXQgbD1hLmN1c3RvbURhdGFQcm94eUZldGNoO3JldHVybiBhLmN1c3RvbURhdGFQcm94eUZldGNoPVhhKG8sbCksYS5hcmdzPXMsV2EoZSxhLHIsbisxKX19KX0pfWZ1bmN0aW9uIHphKGUsdCl7bGV0e2pzTW9kZWxOYW1lOnIsYWN0aW9uOm4sY2xpZW50TWV0aG9kOml9PXQsbz1yP246aTtpZihlLl9leHRlbnNpb25zLmlzRW1wdHkoKSlyZXR1cm4gZS5fZXhlY3V0ZVJlcXVlc3QodCk7bGV0IHM9ZS5fZXh0ZW5zaW9ucy5nZXRBbGxRdWVyeUNhbGxiYWNrcyhyPz9cIiRub25lXCIsbyk7cmV0dXJuIFdhKGUsdCxzKX1mdW5jdGlvbiBZYShlKXtyZXR1cm4gdD0+e2xldCByPXtyZXF1ZXN0czp0fSxuPXRbMF0uZXh0ZW5zaW9ucy5nZXRBbGxCYXRjaFF1ZXJ5Q2FsbGJhY2tzKCk7cmV0dXJuIG4ubGVuZ3RoP1phKHIsbiwwLGUpOmUocil9fWZ1bmN0aW9uIFphKGUsdCxyLG4pe2lmKHI9PT10Lmxlbmd0aClyZXR1cm4gbihlKTtsZXQgaT1lLmN1c3RvbURhdGFQcm94eUZldGNoLG89ZS5yZXF1ZXN0c1swXS50cmFuc2FjdGlvbjtyZXR1cm4gdFtyXSh7YXJnczp7cXVlcmllczplLnJlcXVlc3RzLm1hcChzPT4oe21vZGVsOnMubW9kZWxOYW1lLG9wZXJhdGlvbjpzLmFjdGlvbixhcmdzOnMuYXJnc30pKSx0cmFuc2FjdGlvbjpvP3tpc29sYXRpb25MZXZlbDpvLmtpbmQ9PT1cImJhdGNoXCI/by5pc29sYXRpb25MZXZlbDp2b2lkIDB9OnZvaWQgMH0sX19pbnRlcm5hbFBhcmFtczplLHF1ZXJ5KHMsYT1lKXtsZXQgbD1hLmN1c3RvbURhdGFQcm94eUZldGNoO3JldHVybiBhLmN1c3RvbURhdGFQcm94eUZldGNoPVhhKGksbCksWmEoYSx0LHIrMSxuKX19KX12YXIgSGE9ZT0+ZTtmdW5jdGlvbiBYYShlPUhhLHQ9SGEpe3JldHVybiByPT5lKHQocikpfWZ1bmN0aW9uIHRsKGUsdCxyKXtsZXQgbj0kZShyKTtyZXR1cm4hdC5yZXN1bHR8fCEodC5yZXN1bHQuJGFsbE1vZGVsc3x8dC5yZXN1bHRbbl0pP2U6RGQoey4uLmUsLi4uZWwodC5uYW1lLGUsdC5yZXN1bHQuJGFsbE1vZGVscyksLi4uZWwodC5uYW1lLGUsdC5yZXN1bHRbbl0pfSl9ZnVuY3Rpb24gRGQoZSl7bGV0IHQ9bmV3IEZlLHI9KG4saSk9PnQuZ2V0T3JDcmVhdGUobiwoKT0+aS5oYXMobik/W25dOihpLmFkZChuKSxlW25dP2Vbbl0ubmVlZHMuZmxhdE1hcChvPT5yKG8saSkpOltuXSkpO3JldHVybiBPdChlLG49Pih7Li4ubixuZWVkczpyKG4ubmFtZSxuZXcgU2V0KX0pKX1mdW5jdGlvbiBlbChlLHQscil7cmV0dXJuIHI/T3Qociwoe25lZWRzOm4sY29tcHV0ZTppfSxvKT0+KHtuYW1lOm8sbmVlZHM6bj9PYmplY3Qua2V5cyhuKS5maWx0ZXIocz0+bltzXSk6W10sY29tcHV0ZTpOZCh0LG8saSl9KSk6e319ZnVuY3Rpb24gTmQoZSx0LHIpe2xldCBuPWU/Llt0XT8uY29tcHV0ZTtyZXR1cm4gbj9pPT5yKHsuLi5pLFt0XTpuKGkpfSk6cn1mdW5jdGlvbiBybChlLHQpe2lmKCF0KXJldHVybiBlO2xldCByPXsuLi5lfTtmb3IobGV0IG4gb2YgT2JqZWN0LnZhbHVlcyh0KSlpZihlW24ubmFtZV0pZm9yKGxldCBpIG9mIG4ubmVlZHMpcltpXT0hMDtyZXR1cm4gcn12YXIgTm49Y2xhc3N7Y29uc3RydWN0b3IodCxyKXt0aGlzLmV4dGVuc2lvbj10O3RoaXMucHJldmlvdXM9cjt0aGlzLmNvbXB1dGVkRmllbGRzQ2FjaGU9bmV3IEZlO3RoaXMubW9kZWxFeHRlbnNpb25zQ2FjaGU9bmV3IEZlO3RoaXMucXVlcnlDYWxsYmFja3NDYWNoZT1uZXcgRmU7dGhpcy5jbGllbnRFeHRlbnNpb25zPWNyKCgpPT50aGlzLmV4dGVuc2lvbi5jbGllbnQ/ey4uLnRoaXMucHJldmlvdXM/LmdldEFsbENsaWVudEV4dGVuc2lvbnMoKSwuLi50aGlzLmV4dGVuc2lvbi5jbGllbnR9OnRoaXMucHJldmlvdXM/LmdldEFsbENsaWVudEV4dGVuc2lvbnMoKSk7dGhpcy5iYXRjaENhbGxiYWNrcz1jcigoKT0+e2xldCB0PXRoaXMucHJldmlvdXM/LmdldEFsbEJhdGNoUXVlcnlDYWxsYmFja3MoKT8/W10scj10aGlzLmV4dGVuc2lvbi5xdWVyeT8uJF9faW50ZXJuYWxCYXRjaDtyZXR1cm4gcj90LmNvbmNhdChyKTp0fSl9Z2V0QWxsQ29tcHV0ZWRGaWVsZHModCl7cmV0dXJuIHRoaXMuY29tcHV0ZWRGaWVsZHNDYWNoZS5nZXRPckNyZWF0ZSh0LCgpPT50bCh0aGlzLnByZXZpb3VzPy5nZXRBbGxDb21wdXRlZEZpZWxkcyh0KSx0aGlzLmV4dGVuc2lvbix0KSl9Z2V0QWxsQ2xpZW50RXh0ZW5zaW9ucygpe3JldHVybiB0aGlzLmNsaWVudEV4dGVuc2lvbnMuZ2V0KCl9Z2V0QWxsTW9kZWxFeHRlbnNpb25zKHQpe3JldHVybiB0aGlzLm1vZGVsRXh0ZW5zaW9uc0NhY2hlLmdldE9yQ3JlYXRlKHQsKCk9PntsZXQgcj0kZSh0KTtyZXR1cm4hdGhpcy5leHRlbnNpb24ubW9kZWx8fCEodGhpcy5leHRlbnNpb24ubW9kZWxbcl18fHRoaXMuZXh0ZW5zaW9uLm1vZGVsLiRhbGxNb2RlbHMpP3RoaXMucHJldmlvdXM/LmdldEFsbE1vZGVsRXh0ZW5zaW9ucyh0KTp7Li4udGhpcy5wcmV2aW91cz8uZ2V0QWxsTW9kZWxFeHRlbnNpb25zKHQpLC4uLnRoaXMuZXh0ZW5zaW9uLm1vZGVsLiRhbGxNb2RlbHMsLi4udGhpcy5leHRlbnNpb24ubW9kZWxbcl19fSl9Z2V0QWxsUXVlcnlDYWxsYmFja3ModCxyKXtyZXR1cm4gdGhpcy5xdWVyeUNhbGxiYWNrc0NhY2hlLmdldE9yQ3JlYXRlKGAke3R9OiR7cn1gLCgpPT57bGV0IG49dGhpcy5wcmV2aW91cz8uZ2V0QWxsUXVlcnlDYWxsYmFja3ModCxyKT8/W10saT1bXSxvPXRoaXMuZXh0ZW5zaW9uLnF1ZXJ5O3JldHVybiFvfHwhKG9bdF18fG8uJGFsbE1vZGVsc3x8b1tyXXx8by4kYWxsT3BlcmF0aW9ucyk/bjoob1t0XSE9PXZvaWQgMCYmKG9bdF1bcl0hPT12b2lkIDAmJmkucHVzaChvW3RdW3JdKSxvW3RdLiRhbGxPcGVyYXRpb25zIT09dm9pZCAwJiZpLnB1c2gob1t0XS4kYWxsT3BlcmF0aW9ucykpLHQhPT1cIiRub25lXCImJm8uJGFsbE1vZGVscyE9PXZvaWQgMCYmKG8uJGFsbE1vZGVsc1tyXSE9PXZvaWQgMCYmaS5wdXNoKG8uJGFsbE1vZGVsc1tyXSksby4kYWxsTW9kZWxzLiRhbGxPcGVyYXRpb25zIT09dm9pZCAwJiZpLnB1c2goby4kYWxsTW9kZWxzLiRhbGxPcGVyYXRpb25zKSksb1tyXSE9PXZvaWQgMCYmaS5wdXNoKG9bcl0pLG8uJGFsbE9wZXJhdGlvbnMhPT12b2lkIDAmJmkucHVzaChvLiRhbGxPcGVyYXRpb25zKSxuLmNvbmNhdChpKSl9KX1nZXRBbGxCYXRjaFF1ZXJ5Q2FsbGJhY2tzKCl7cmV0dXJuIHRoaXMuYmF0Y2hDYWxsYmFja3MuZ2V0KCl9fSxMbj1jbGFzcyBle2NvbnN0cnVjdG9yKHQpe3RoaXMuaGVhZD10fXN0YXRpYyBlbXB0eSgpe3JldHVybiBuZXcgZX1zdGF0aWMgc2luZ2xlKHQpe3JldHVybiBuZXcgZShuZXcgTm4odCkpfWlzRW1wdHkoKXtyZXR1cm4gdGhpcy5oZWFkPT09dm9pZCAwfWFwcGVuZCh0KXtyZXR1cm4gbmV3IGUobmV3IE5uKHQsdGhpcy5oZWFkKSl9Z2V0QWxsQ29tcHV0ZWRGaWVsZHModCl7cmV0dXJuIHRoaXMuaGVhZD8uZ2V0QWxsQ29tcHV0ZWRGaWVsZHModCl9Z2V0QWxsQ2xpZW50RXh0ZW5zaW9ucygpe3JldHVybiB0aGlzLmhlYWQ/LmdldEFsbENsaWVudEV4dGVuc2lvbnMoKX1nZXRBbGxNb2RlbEV4dGVuc2lvbnModCl7cmV0dXJuIHRoaXMuaGVhZD8uZ2V0QWxsTW9kZWxFeHRlbnNpb25zKHQpfWdldEFsbFF1ZXJ5Q2FsbGJhY2tzKHQscil7cmV0dXJuIHRoaXMuaGVhZD8uZ2V0QWxsUXVlcnlDYWxsYmFja3ModCxyKT8/W119Z2V0QWxsQmF0Y2hRdWVyeUNhbGxiYWNrcygpe3JldHVybiB0aGlzLmhlYWQ/LmdldEFsbEJhdGNoUXVlcnlDYWxsYmFja3MoKT8/W119fTt2YXIgbmw9JChcInByaXNtYTpjbGllbnRcIiksaWw9e1ZlcmNlbDpcInZlcmNlbFwiLFwiTmV0bGlmeSBDSVwiOlwibmV0bGlmeVwifTtmdW5jdGlvbiBvbCh7cG9zdGluc3RhbGw6ZSxjaU5hbWU6dCxjbGllbnRWZXJzaW9uOnJ9KXtpZihubChcImNoZWNrUGxhdGZvcm1DYWNoaW5nOnBvc3RpbnN0YWxsXCIsZSksbmwoXCJjaGVja1BsYXRmb3JtQ2FjaGluZzpjaU5hbWVcIix0KSxlPT09ITAmJnQmJnQgaW4gaWwpe2xldCBuPWBQcmlzbWEgaGFzIGRldGVjdGVkIHRoYXQgdGhpcyBwcm9qZWN0IHdhcyBidWlsdCBvbiAke3R9LCB3aGljaCBjYWNoZXMgZGVwZW5kZW5jaWVzLiBUaGlzIGxlYWRzIHRvIGFuIG91dGRhdGVkIFByaXNtYSBDbGllbnQgYmVjYXVzZSBQcmlzbWEncyBhdXRvLWdlbmVyYXRpb24gaXNuJ3QgdHJpZ2dlcmVkLiBUbyBmaXggdGhpcywgbWFrZSBzdXJlIHRvIHJ1biB0aGUgXFxgcHJpc21hIGdlbmVyYXRlXFxgIGNvbW1hbmQgZHVyaW5nIHRoZSBidWlsZCBwcm9jZXNzLlxuXG5MZWFybiBob3c6IGh0dHBzOi8vcHJpcy5seS9kLyR7aWxbdF19LWJ1aWxkYDt0aHJvdyBjb25zb2xlLmVycm9yKG4pLG5ldyBrKG4scil9fWZ1bmN0aW9uIHNsKGUsdCl7cmV0dXJuIGU/ZS5kYXRhc291cmNlcz9lLmRhdGFzb3VyY2VzOmUuZGF0YXNvdXJjZVVybD97W3RbMF1dOnt1cmw6ZS5kYXRhc291cmNlVXJsfX06e306e319ZnVuY3Rpb24gUHIoe2Vycm9yOmUsdXNlcl9mYWNpbmdfZXJyb3I6dH0scil7cmV0dXJuIHQuZXJyb3JfY29kZT9uZXcgSCh0Lm1lc3NhZ2Use2NvZGU6dC5lcnJvcl9jb2RlLGNsaWVudFZlcnNpb246cixtZXRhOnQubWV0YSxiYXRjaFJlcXVlc3RJZHg6dC5iYXRjaF9yZXF1ZXN0X2lkeH0pOm5ldyBXKGUse2NsaWVudFZlcnNpb246cixiYXRjaFJlcXVlc3RJZHg6dC5iYXRjaF9yZXF1ZXN0X2lkeH0pfXZhciBHdD1jbGFzc3t9O3ZhciBwbD1GKHJlcXVpcmUoXCJmc1wiKSksdnI9RihyZXF1aXJlKFwicGF0aFwiKSk7ZnVuY3Rpb24gJG4oZSl7bGV0e3J1bnRpbWVCaW5hcnlUYXJnZXQ6dH09ZTtyZXR1cm5gQWRkIFwiJHt0fVwiIHRvIFxcYGJpbmFyeVRhcmdldHNcXGAgaW4gdGhlIFwic2NoZW1hLnByaXNtYVwiIGZpbGUgYW5kIHJ1biBcXGBwcmlzbWEgZ2VuZXJhdGVcXGAgYWZ0ZXIgc2F2aW5nIGl0OlxuXG4ke0xkKGUpfWB9ZnVuY3Rpb24gTGQoZSl7bGV0e2dlbmVyYXRvcjp0LGdlbmVyYXRvckJpbmFyeVRhcmdldHM6cixydW50aW1lQmluYXJ5VGFyZ2V0Om59PWUsaT17ZnJvbUVudlZhcjpudWxsLHZhbHVlOm59LG89Wy4uLnIsaV07cmV0dXJuIGppKHsuLi50LGJpbmFyeVRhcmdldHM6b30pfWZ1bmN0aW9uIHN0KGUpe2xldHtydW50aW1lQmluYXJ5VGFyZ2V0OnR9PWU7cmV0dXJuYFByaXNtYSBDbGllbnQgY291bGQgbm90IGxvY2F0ZSB0aGUgUXVlcnkgRW5naW5lIGZvciBydW50aW1lIFwiJHt0fVwiLmB9ZnVuY3Rpb24gYXQoZSl7bGV0e3NlYXJjaGVkTG9jYXRpb25zOnR9PWU7cmV0dXJuYFRoZSBmb2xsb3dpbmcgbG9jYXRpb25zIGhhdmUgYmVlbiBzZWFyY2hlZDpcbiR7Wy4uLm5ldyBTZXQodCldLm1hcChpPT5gICAke2l9YCkuam9pbihgXG5gKX1gfWZ1bmN0aW9uIGFsKGUpe2xldHtydW50aW1lQmluYXJ5VGFyZ2V0OnR9PWU7cmV0dXJuYCR7c3QoZSl9XG5cblRoaXMgaGFwcGVuZWQgYmVjYXVzZSBcXGBiaW5hcnlUYXJnZXRzXFxgIGhhdmUgYmVlbiBwaW5uZWQsIGJ1dCB0aGUgYWN0dWFsIGRlcGxveW1lbnQgYWxzbyByZXF1aXJlZCBcIiR7dH1cIi5cbiR7JG4oZSl9XG5cbiR7YXQoZSl9YH1mdW5jdGlvbiBxbihlKXtyZXR1cm5gV2Ugd291bGQgYXBwcmVjaWF0ZSBpZiB5b3UgY291bGQgdGFrZSB0aGUgdGltZSB0byBzaGFyZSBzb21lIGluZm9ybWF0aW9uIHdpdGggdXMuXG5QbGVhc2UgaGVscCB1cyBieSBhbnN3ZXJpbmcgYSBmZXcgcXVlc3Rpb25zOiBodHRwczovL3ByaXMubHkvJHtlfWB9ZnVuY3Rpb24gam4oZSl7bGV0e2Vycm9yU3RhY2s6dH09ZTtyZXR1cm4gdD8ubWF0Y2goL1xcL1xcLm5leHR8XFwvbmV4dEB8XFwvbmV4dFxcLy8pP2BcblxuV2UgZGV0ZWN0ZWQgdGhhdCB5b3UgYXJlIHVzaW5nIE5leHQuanMsIGxlYXJuIGhvdyB0byBmaXggdGhpczogaHR0cHM6Ly9wcmlzLmx5L2QvZW5naW5lLW5vdC1mb3VuZC1uZXh0anMuYDpcIlwifWZ1bmN0aW9uIGxsKGUpe2xldHtxdWVyeUVuZ2luZU5hbWU6dH09ZTtyZXR1cm5gJHtzdChlKX0ke2puKGUpfVxuXG5UaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYSBidW5kbGVyIHRoYXQgaGFzIG5vdCBjb3BpZWQgXCIke3R9XCIgbmV4dCB0byB0aGUgcmVzdWx0aW5nIGJ1bmRsZS5cbkVuc3VyZSB0aGF0IFwiJHt0fVwiIGhhcyBiZWVuIGNvcGllZCBuZXh0IHRvIHRoZSBidW5kbGUgb3IgaW4gXCIke2UuZXhwZWN0ZWRMb2NhdGlvbn1cIi5cblxuJHtxbihcImVuZ2luZS1ub3QtZm91bmQtYnVuZGxlci1pbnZlc3RpZ2F0aW9uXCIpfVxuXG4ke2F0KGUpfWB9ZnVuY3Rpb24gdWwoZSl7bGV0e3J1bnRpbWVCaW5hcnlUYXJnZXQ6dCxnZW5lcmF0b3JCaW5hcnlUYXJnZXRzOnJ9PWUsbj1yLmZpbmQoaT0+aS5uYXRpdmUpO3JldHVybmAke3N0KGUpfVxuXG5UaGlzIGhhcHBlbmVkIGJlY2F1c2UgUHJpc21hIENsaWVudCB3YXMgZ2VuZXJhdGVkIGZvciBcIiR7bj8udmFsdWU/P1widW5rbm93blwifVwiLCBidXQgdGhlIGFjdHVhbCBkZXBsb3ltZW50IHJlcXVpcmVkIFwiJHt0fVwiLlxuJHskbihlKX1cblxuJHthdChlKX1gfWZ1bmN0aW9uIGNsKGUpe2xldHtxdWVyeUVuZ2luZU5hbWU6dH09ZTtyZXR1cm5gJHtzdChlKX0ke2puKGUpfVxuXG5UaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgdG9vbGluZyB0aGF0IGhhcyBub3QgY29waWVkIFwiJHt0fVwiIHRvIHRoZSBkZXBsb3ltZW50IGZvbGRlci5cbkVuc3VyZSB0aGF0IHlvdSByYW4gXFxgcHJpc21hIGdlbmVyYXRlXFxgIGFuZCB0aGF0IFwiJHt0fVwiIGhhcyBiZWVuIGNvcGllZCB0byBcIiR7ZS5leHBlY3RlZExvY2F0aW9ufVwiLlxuXG4ke3FuKFwiZW5naW5lLW5vdC1mb3VuZC10b29saW5nLWludmVzdGlnYXRpb25cIil9XG5cbiR7YXQoZSl9YH12YXIgJGQ9JChcInByaXNtYTpjbGllbnQ6ZW5naW5lczpyZXNvbHZlRW5naW5lUGF0aFwiKSxxZD0oKT0+bmV3IFJlZ0V4cChcInJ1bnRpbWVbXFxcXFxcXFwvXWxpYnJhcnlcXFxcLm0/anMkXCIpO2FzeW5jIGZ1bmN0aW9uIGRsKGUsdCl7bGV0IHI9e2JpbmFyeTpwcm9jZXNzLmVudi5QUklTTUFfUVVFUllfRU5HSU5FX0JJTkFSWSxsaWJyYXJ5OnByb2Nlc3MuZW52LlBSSVNNQV9RVUVSWV9FTkdJTkVfTElCUkFSWX1bZV0/P3QucHJpc21hUGF0aDtpZihyIT09dm9pZCAwKXJldHVybiByO2xldHtlbmdpbmVQYXRoOm4sc2VhcmNoZWRMb2NhdGlvbnM6aX09YXdhaXQgamQoZSx0KTtpZigkZChcImVuZ2luZVBhdGhcIixuKSxuIT09dm9pZCAwJiZlPT09XCJiaW5hcnlcIiYmRGkobiksbiE9PXZvaWQgMClyZXR1cm4gdC5wcmlzbWFQYXRoPW47bGV0IG89YXdhaXQgZnQoKSxzPXQuZ2VuZXJhdG9yPy5iaW5hcnlUYXJnZXRzPz9bXSxhPXMuc29tZShkPT5kLm5hdGl2ZSksbD0hcy5zb21lKGQ9PmQudmFsdWU9PT1vKSx1PV9fZmlsZW5hbWUubWF0Y2gocWQoKSk9PT1udWxsLGM9e3NlYXJjaGVkTG9jYXRpb25zOmksZ2VuZXJhdG9yQmluYXJ5VGFyZ2V0czpzLGdlbmVyYXRvcjp0LmdlbmVyYXRvcixydW50aW1lQmluYXJ5VGFyZ2V0Om8scXVlcnlFbmdpbmVOYW1lOm1sKGUsbyksZXhwZWN0ZWRMb2NhdGlvbjp2ci5kZWZhdWx0LnJlbGF0aXZlKHByb2Nlc3MuY3dkKCksdC5kaXJuYW1lKSxlcnJvclN0YWNrOm5ldyBFcnJvcigpLnN0YWNrfSxwO3Rocm93IGEmJmw/cD11bChjKTpsP3A9YWwoYyk6dT9wPWxsKGMpOnA9Y2woYyksbmV3IGsocCx0LmNsaWVudFZlcnNpb24pfWFzeW5jIGZ1bmN0aW9uIGpkKGVuZ2luZVR5cGUsY29uZmlnKXtsZXQgYmluYXJ5VGFyZ2V0PWF3YWl0IGZ0KCksc2VhcmNoZWRMb2NhdGlvbnM9W10sZGlybmFtZT1ldmFsKFwiX19kaXJuYW1lXCIpLHNlYXJjaExvY2F0aW9ucz1bY29uZmlnLmRpcm5hbWUsdnIuZGVmYXVsdC5yZXNvbHZlKGRpcm5hbWUsXCIuLlwiKSxjb25maWcuZ2VuZXJhdG9yPy5vdXRwdXQ/LnZhbHVlPz9kaXJuYW1lLHZyLmRlZmF1bHQucmVzb2x2ZShkaXJuYW1lLFwiLi4vLi4vLi4vLnByaXNtYS9jbGllbnRcIiksXCIvdG1wL3ByaXNtYS1lbmdpbmVzXCIsY29uZmlnLmN3ZF07X19maWxlbmFtZS5pbmNsdWRlcyhcInJlc29sdmVFbmdpbmVQYXRoXCIpJiZzZWFyY2hMb2NhdGlvbnMucHVzaChRcygpKTtmb3IobGV0IGUgb2Ygc2VhcmNoTG9jYXRpb25zKXtsZXQgdD1tbChlbmdpbmVUeXBlLGJpbmFyeVRhcmdldCkscj12ci5kZWZhdWx0LmpvaW4oZSx0KTtpZihzZWFyY2hlZExvY2F0aW9ucy5wdXNoKGUpLHBsLmRlZmF1bHQuZXhpc3RzU3luYyhyKSlyZXR1cm57ZW5naW5lUGF0aDpyLHNlYXJjaGVkTG9jYXRpb25zfX1yZXR1cm57ZW5naW5lUGF0aDp2b2lkIDAsc2VhcmNoZWRMb2NhdGlvbnN9fWZ1bmN0aW9uIG1sKGUsdCl7cmV0dXJuIGU9PT1cImxpYnJhcnlcIj9Ycih0LFwiZnNcIik6YHF1ZXJ5LWVuZ2luZS0ke3R9JHt0PT09XCJ3aW5kb3dzXCI/XCIuZXhlXCI6XCJcIn1gfWZ1bmN0aW9uIFZuKGUsdCl7cmV0dXJue2JhdGNoOmUsdHJhbnNhY3Rpb246dD8ua2luZD09PVwiYmF0Y2hcIj97aXNvbGF0aW9uTGV2ZWw6dC5vcHRpb25zLmlzb2xhdGlvbkxldmVsfTp2b2lkIDB9fXZhciBmbz1GKEJpKCkpO2Z1bmN0aW9uIGZsKGUpe3JldHVybiBlP2UucmVwbGFjZSgvXCIuKlwiL2csJ1wiWFwiJykucmVwbGFjZSgvW1xcczpcXFtdKFsrLV0/KFswLTldKlsuXSk/WzAtOV0rKS9nLHQ9PmAke3RbMF19NWApOlwiXCJ9ZnVuY3Rpb24gZ2woZSl7cmV0dXJuIGUuc3BsaXQoYFxuYCkubWFwKHQ9PnQucmVwbGFjZSgvXlxcZHs0fS1bMDFdXFxkLVswLTNdXFxkVFswLTJdXFxkOlswLTVdXFxkOlswLTVdXFxkXFwuXFxkKyhbKy1dWzAtMl1cXGQ6WzAtNV1cXGR8WilcXHMqLyxcIlwiKS5yZXBsYWNlKC9cXCtcXGQrXFxzKm1zJC8sXCJcIikpLmpvaW4oYFxuYCl9dmFyIHlsPUYoWHMoKSk7ZnVuY3Rpb24gaGwoe3RpdGxlOmUsdXNlcjp0PVwicHJpc21hXCIscmVwbzpyPVwicHJpc21hXCIsdGVtcGxhdGU6bj1cImJ1Z19yZXBvcnQueW1sXCIsYm9keTppfSl7cmV0dXJuKDAseWwuZGVmYXVsdCkoe3VzZXI6dCxyZXBvOnIsdGVtcGxhdGU6bix0aXRsZTplLGJvZHk6aX0pfWZ1bmN0aW9uIGJsKHt2ZXJzaW9uOmUscGxhdGZvcm06dCx0aXRsZTpyLGRlc2NyaXB0aW9uOm4sZW5naW5lVmVyc2lvbjppLGRhdGFiYXNlOm8scXVlcnk6c30pe2xldCBhPXVzKDZlMy0ocz8ubGVuZ3RoPz8wKSksbD1nbCgoMCxmby5kZWZhdWx0KShhKSksdT1uP2AjIERlc2NyaXB0aW9uXG5cXGBcXGBcXGBcbiR7bn1cblxcYFxcYFxcYGA6XCJcIixjPSgwLGZvLmRlZmF1bHQpKGBIaSBQcmlzbWEgVGVhbSEgTXkgUHJpc21hIENsaWVudCBqdXN0IGNyYXNoZWQuIFRoaXMgaXMgdGhlIHJlcG9ydDpcbiMjIFZlcnNpb25zXG5cbnwgTmFtZSAgICAgICAgICAgIHwgVmVyc2lvbiAgICAgICAgICAgIHxcbnwtLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLXxcbnwgTm9kZSAgICAgICAgICAgIHwgJHtwcm9jZXNzLnZlcnNpb24/LnBhZEVuZCgxOSl9fCBcbnwgT1MgICAgICAgICAgICAgIHwgJHt0Py5wYWRFbmQoMTkpfXxcbnwgUHJpc21hIENsaWVudCAgIHwgJHtlPy5wYWRFbmQoMTkpfXxcbnwgUXVlcnkgRW5naW5lICAgIHwgJHtpPy5wYWRFbmQoMTkpfXxcbnwgRGF0YWJhc2UgICAgICAgIHwgJHtvPy5wYWRFbmQoMTkpfXxcblxuJHt1fVxuXG4jIyBMb2dzXG5cXGBcXGBcXGBcbiR7bH1cblxcYFxcYFxcYFxuXG4jIyBDbGllbnQgU25pcHBldFxuXFxgXFxgXFxgdHNcbi8vIFBMRUFTRSBGSUxMIFlPVVIgQ09ERSBTTklQUEVUIEhFUkVcblxcYFxcYFxcYFxuXG4jIyBTY2hlbWFcblxcYFxcYFxcYHByaXNtYVxuLy8gUExFQVNFIEFERCBZT1VSIFNDSEVNQSBIRVJFIElGIFBPU1NJQkxFXG5cXGBcXGBcXGBcblxuIyMgUHJpc21hIEVuZ2luZSBRdWVyeVxuXFxgXFxgXFxgXG4ke3M/Zmwocyk6XCJcIn1cblxcYFxcYFxcYFxuYCkscD1obCh7dGl0bGU6cixib2R5OmN9KTtyZXR1cm5gJHtyfVxuXG5UaGlzIGlzIGEgbm9uLXJlY292ZXJhYmxlIGVycm9yIHdoaWNoIHByb2JhYmx5IGhhcHBlbnMgd2hlbiB0aGUgUHJpc21hIFF1ZXJ5IEVuZ2luZSBoYXMgYSBwYW5pYy5cblxuJHt1ZShwKX1cblxuSWYgeW91IHdhbnQgdGhlIFByaXNtYSB0ZWFtIHRvIGxvb2sgaW50byBpdCwgcGxlYXNlIG9wZW4gdGhlIGxpbmsgYWJvdmUgXFx1ezFGNjRGfVxuVG8gaW5jcmVhc2UgdGhlIGNoYW5jZSBvZiBzdWNjZXNzLCBwbGVhc2UgcG9zdCB5b3VyIHNjaGVtYSBhbmQgYSBzbmlwcGV0IG9mXG5ob3cgeW91IHVzZWQgUHJpc21hIENsaWVudCBpbiB0aGUgaXNzdWUuIFxuYH12YXIgVmQ9XCJDbG91ZGZsYXJlLVdvcmtlcnNcIixCZD1cIm5vZGVcIjtmdW5jdGlvbiB4bCgpe3JldHVybiB0eXBlb2YgTmV0bGlmeT09XCJvYmplY3RcIj9cIm5ldGxpZnlcIjp0eXBlb2YgRWRnZVJ1bnRpbWU9PVwic3RyaW5nXCI/XCJlZGdlLWxpZ2h0XCI6Z2xvYmFsVGhpcy5uYXZpZ2F0b3I/LnVzZXJBZ2VudD09PVZkP1wid29ya2VyZFwiOmdsb2JhbFRoaXMuRGVubz9cImRlbm9cIjpnbG9iYWxUaGlzLl9fbGFnb25fXz9cImxhZ29uXCI6Z2xvYmFsVGhpcy5wcm9jZXNzPy5yZWxlYXNlPy5uYW1lPT09QmQ/XCJub2RlXCI6Z2xvYmFsVGhpcy5CdW4/XCJidW5cIjpnbG9iYWxUaGlzLmZhc3RseT9cImZhc3RseVwiOlwidW5rbm93blwifWZ1bmN0aW9uIEJuKHtpbmxpbmVEYXRhc291cmNlczplLG92ZXJyaWRlRGF0YXNvdXJjZXM6dCxlbnY6cixjbGllbnRWZXJzaW9uOm59KXtsZXQgaSxvPU9iamVjdC5rZXlzKGUpWzBdLHM9ZVtvXT8udXJsLGE9dFtvXT8udXJsO2lmKG89PT12b2lkIDA/aT12b2lkIDA6YT9pPWE6cz8udmFsdWU/aT1zLnZhbHVlOnM/LmZyb21FbnZWYXImJihpPXJbcy5mcm9tRW52VmFyXSkscz8uZnJvbUVudlZhciE9PXZvaWQgMCYmaT09PXZvaWQgMCl0aHJvdyBuZXcgayhgZXJyb3I6IEVudmlyb25tZW50IHZhcmlhYmxlIG5vdCBmb3VuZDogJHtzLmZyb21FbnZWYXJ9LmAsbik7aWYoaT09PXZvaWQgMCl0aHJvdyBuZXcgayhcImVycm9yOiBNaXNzaW5nIFVSTCBlbnZpcm9ubWVudCB2YXJpYWJsZSwgdmFsdWUsIG9yIG92ZXJyaWRlLlwiLG4pO3JldHVybiBpfXZhciBVbj1jbGFzcyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHIsbil7c3VwZXIocik7dGhpcy5jbGllbnRWZXJzaW9uPW4uY2xpZW50VmVyc2lvbix0aGlzLmNhdXNlPW4uY2F1c2V9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm4gdGhpcy5uYW1lfX07dmFyIGdlPWNsYXNzIGV4dGVuZHMgVW57Y29uc3RydWN0b3IocixuKXtzdXBlcihyLG4pO3RoaXMuaXNSZXRyeWFibGU9bi5pc1JldHJ5YWJsZT8/ITB9fTtmdW5jdGlvbiBJKGUsdCl7cmV0dXJuey4uLmUsaXNSZXRyeWFibGU6dH19dmFyIEp0PWNsYXNzIGV4dGVuZHMgZ2V7Y29uc3RydWN0b3Iocil7c3VwZXIoXCJUaGlzIHJlcXVlc3QgbXVzdCBiZSByZXRyaWVkXCIsSShyLCEwKSk7dGhpcy5uYW1lPVwiRm9yY2VkUmV0cnlFcnJvclwiO3RoaXMuY29kZT1cIlA1MDAxXCJ9fTt2KEp0LFwiRm9yY2VkUmV0cnlFcnJvclwiKTt2YXIgd3Q9Y2xhc3MgZXh0ZW5kcyBnZXtjb25zdHJ1Y3RvcihyLG4pe3N1cGVyKHIsSShuLCExKSk7dGhpcy5uYW1lPVwiSW52YWxpZERhdGFzb3VyY2VFcnJvclwiO3RoaXMuY29kZT1cIlA2MDAxXCJ9fTt2KHd0LFwiSW52YWxpZERhdGFzb3VyY2VFcnJvclwiKTt2YXIgRXQ9Y2xhc3MgZXh0ZW5kcyBnZXtjb25zdHJ1Y3RvcihyLG4pe3N1cGVyKHIsSShuLCExKSk7dGhpcy5uYW1lPVwiTm90SW1wbGVtZW50ZWRZZXRFcnJvclwiO3RoaXMuY29kZT1cIlA1MDA0XCJ9fTt2KEV0LFwiTm90SW1wbGVtZW50ZWRZZXRFcnJvclwiKTt2YXIgVj1jbGFzcyBleHRlbmRzIGdle2NvbnN0cnVjdG9yKHIsbil7c3VwZXIocixuKTt0aGlzLnJlc3BvbnNlPW4ucmVzcG9uc2U7bGV0IGk9dGhpcy5yZXNwb25zZS5oZWFkZXJzLmdldChcInByaXNtYS1yZXF1ZXN0LWlkXCIpO2lmKGkpe2xldCBvPWAoVGhlIHJlcXVlc3QgaWQgd2FzOiAke2l9KWA7dGhpcy5tZXNzYWdlPXRoaXMubWVzc2FnZStcIiBcIitvfX19O3ZhciBQdD1jbGFzcyBleHRlbmRzIFZ7Y29uc3RydWN0b3Iocil7c3VwZXIoXCJTY2hlbWEgbmVlZHMgdG8gYmUgdXBsb2FkZWRcIixJKHIsITApKTt0aGlzLm5hbWU9XCJTY2hlbWFNaXNzaW5nRXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAwNVwifX07dihQdCxcIlNjaGVtYU1pc3NpbmdFcnJvclwiKTt2YXIgZ289XCJUaGlzIHJlcXVlc3QgY291bGQgbm90IGJlIHVuZGVyc3Rvb2QgYnkgdGhlIHNlcnZlclwiLF9yPWNsYXNzIGV4dGVuZHMgVntjb25zdHJ1Y3RvcihyLG4saSl7c3VwZXIobnx8Z28sSShyLCExKSk7dGhpcy5uYW1lPVwiQmFkUmVxdWVzdEVycm9yXCI7dGhpcy5jb2RlPVwiUDUwMDBcIjtpJiYodGhpcy5jb2RlPWkpfX07dihfcixcIkJhZFJlcXVlc3RFcnJvclwiKTt2YXIgVHI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbil7c3VwZXIoXCJFbmdpbmUgbm90IHN0YXJ0ZWQ6IGhlYWx0aGNoZWNrIHRpbWVvdXRcIixJKHIsITApKTt0aGlzLm5hbWU9XCJIZWFsdGhjaGVja1RpbWVvdXRFcnJvclwiO3RoaXMuY29kZT1cIlA1MDEzXCI7dGhpcy5sb2dzPW59fTt2KFRyLFwiSGVhbHRoY2hlY2tUaW1lb3V0RXJyb3JcIik7dmFyIENyPWNsYXNzIGV4dGVuZHMgVntjb25zdHJ1Y3RvcihyLG4saSl7c3VwZXIobixJKHIsITApKTt0aGlzLm5hbWU9XCJFbmdpbmVTdGFydHVwRXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAxNFwiO3RoaXMubG9ncz1pfX07dihDcixcIkVuZ2luZVN0YXJ0dXBFcnJvclwiKTt2YXIgQXI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIpe3N1cGVyKFwiRW5naW5lIHZlcnNpb24gaXMgbm90IHN1cHBvcnRlZFwiLEkociwhMSkpO3RoaXMubmFtZT1cIkVuZ2luZVZlcnNpb25Ob3RTdXBwb3J0ZWRFcnJvclwiO3RoaXMuY29kZT1cIlA1MDEyXCJ9fTt2KEFyLFwiRW5naW5lVmVyc2lvbk5vdFN1cHBvcnRlZEVycm9yXCIpO3ZhciB5bz1cIlJlcXVlc3QgdGltZWQgb3V0XCIsUnI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbj15byl7c3VwZXIobixJKHIsITEpKTt0aGlzLm5hbWU9XCJHYXRld2F5VGltZW91dEVycm9yXCI7dGhpcy5jb2RlPVwiUDUwMDlcIn19O3YoUnIsXCJHYXRld2F5VGltZW91dEVycm9yXCIpO3ZhciBVZD1cIkludGVyYWN0aXZlIHRyYW5zYWN0aW9uIGVycm9yXCIsTXI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbj1VZCl7c3VwZXIobixJKHIsITEpKTt0aGlzLm5hbWU9XCJJbnRlcmFjdGl2ZVRyYW5zYWN0aW9uRXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAxNVwifX07dihNcixcIkludGVyYWN0aXZlVHJhbnNhY3Rpb25FcnJvclwiKTt2YXIgS2Q9XCJSZXF1ZXN0IHBhcmFtZXRlcnMgYXJlIGludmFsaWRcIixTcj1jbGFzcyBleHRlbmRzIFZ7Y29uc3RydWN0b3IocixuPUtkKXtzdXBlcihuLEkociwhMSkpO3RoaXMubmFtZT1cIkludmFsaWRSZXF1ZXN0RXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAxMVwifX07dihTcixcIkludmFsaWRSZXF1ZXN0RXJyb3JcIik7dmFyIGhvPVwiUmVxdWVzdGVkIHJlc291cmNlIGRvZXMgbm90IGV4aXN0XCIsSXI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbj1obyl7c3VwZXIobixJKHIsITEpKTt0aGlzLm5hbWU9XCJOb3RGb3VuZEVycm9yXCI7dGhpcy5jb2RlPVwiUDUwMDNcIn19O3YoSXIsXCJOb3RGb3VuZEVycm9yXCIpO3ZhciBibz1cIlVua25vd24gc2VydmVyIGVycm9yXCIsSHQ9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbixpKXtzdXBlcihufHxibyxJKHIsITApKTt0aGlzLm5hbWU9XCJTZXJ2ZXJFcnJvclwiO3RoaXMuY29kZT1cIlA1MDA2XCI7dGhpcy5sb2dzPWl9fTt2KEh0LFwiU2VydmVyRXJyb3JcIik7dmFyIHhvPVwiVW5hdXRob3JpemVkLCBjaGVjayB5b3VyIGNvbm5lY3Rpb24gc3RyaW5nXCIsa3I9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbj14byl7c3VwZXIobixJKHIsITEpKTt0aGlzLm5hbWU9XCJVbmF1dGhvcml6ZWRFcnJvclwiO3RoaXMuY29kZT1cIlA1MDA3XCJ9fTt2KGtyLFwiVW5hdXRob3JpemVkRXJyb3JcIik7dmFyIHdvPVwiVXNhZ2UgZXhjZWVkZWQsIHJldHJ5IGFnYWluIGxhdGVyXCIsRnI9Y2xhc3MgZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHIsbj13byl7c3VwZXIobixJKHIsITApKTt0aGlzLm5hbWU9XCJVc2FnZUV4Y2VlZGVkRXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAwOFwifX07dihGcixcIlVzYWdlRXhjZWVkZWRFcnJvclwiKTthc3luYyBmdW5jdGlvbiBRZChlKXtsZXQgdDt0cnl7dD1hd2FpdCBlLnRleHQoKX1jYXRjaHtyZXR1cm57dHlwZTpcIkVtcHR5RXJyb3JcIn19dHJ5e2xldCByPUpTT04ucGFyc2UodCk7aWYodHlwZW9mIHI9PVwic3RyaW5nXCIpc3dpdGNoKHIpe2Nhc2VcIkludGVybmFsRGF0YVByb3h5RXJyb3JcIjpyZXR1cm57dHlwZTpcIkRhdGFQcm94eUVycm9yXCIsYm9keTpyfTtkZWZhdWx0OnJldHVybnt0eXBlOlwiVW5rbm93blRleHRFcnJvclwiLGJvZHk6cn19aWYodHlwZW9mIHI9PVwib2JqZWN0XCImJnIhPT1udWxsKXtpZihcImlzX3BhbmljXCJpbiByJiZcIm1lc3NhZ2VcImluIHImJlwiZXJyb3JfY29kZVwiaW4gcilyZXR1cm57dHlwZTpcIlF1ZXJ5RW5naW5lRXJyb3JcIixib2R5OnJ9O2lmKFwiRW5naW5lTm90U3RhcnRlZFwiaW4gcnx8XCJJbnRlcmFjdGl2ZVRyYW5zYWN0aW9uTWlzcm91dGVkXCJpbiByfHxcIkludmFsaWRSZXF1ZXN0RXJyb3JcImluIHIpe2xldCBuPU9iamVjdC52YWx1ZXMocilbMF0ucmVhc29uO3JldHVybiB0eXBlb2Ygbj09XCJzdHJpbmdcIiYmIVtcIlNjaGVtYU1pc3NpbmdcIixcIkVuZ2luZVZlcnNpb25Ob3RTdXBwb3J0ZWRcIl0uaW5jbHVkZXMobik/e3R5cGU6XCJVbmtub3duSnNvbkVycm9yXCIsYm9keTpyfTp7dHlwZTpcIkRhdGFQcm94eUVycm9yXCIsYm9keTpyfX19cmV0dXJue3R5cGU6XCJVbmtub3duSnNvbkVycm9yXCIsYm9keTpyfX1jYXRjaHtyZXR1cm4gdD09PVwiXCI/e3R5cGU6XCJFbXB0eUVycm9yXCJ9Ont0eXBlOlwiVW5rbm93blRleHRFcnJvclwiLGJvZHk6dH19fWFzeW5jIGZ1bmN0aW9uIE9yKGUsdCl7aWYoZS5vaylyZXR1cm47bGV0IHI9e2NsaWVudFZlcnNpb246dCxyZXNwb25zZTplfSxuPWF3YWl0IFFkKGUpO2lmKG4udHlwZT09PVwiUXVlcnlFbmdpbmVFcnJvclwiKXRocm93IG5ldyBIKG4uYm9keS5tZXNzYWdlLHtjb2RlOm4uYm9keS5lcnJvcl9jb2RlLGNsaWVudFZlcnNpb246dH0pO2lmKG4udHlwZT09PVwiRGF0YVByb3h5RXJyb3JcIil7aWYobi5ib2R5PT09XCJJbnRlcm5hbERhdGFQcm94eUVycm9yXCIpdGhyb3cgbmV3IEh0KHIsXCJJbnRlcm5hbCBEYXRhIFByb3h5IGVycm9yXCIpO2lmKFwiRW5naW5lTm90U3RhcnRlZFwiaW4gbi5ib2R5KXtpZihuLmJvZHkuRW5naW5lTm90U3RhcnRlZC5yZWFzb249PT1cIlNjaGVtYU1pc3NpbmdcIilyZXR1cm4gbmV3IFB0KHIpO2lmKG4uYm9keS5FbmdpbmVOb3RTdGFydGVkLnJlYXNvbj09PVwiRW5naW5lVmVyc2lvbk5vdFN1cHBvcnRlZFwiKXRocm93IG5ldyBBcihyKTtpZihcIkVuZ2luZVN0YXJ0dXBFcnJvclwiaW4gbi5ib2R5LkVuZ2luZU5vdFN0YXJ0ZWQucmVhc29uKXtsZXR7bXNnOmksbG9nczpvfT1uLmJvZHkuRW5naW5lTm90U3RhcnRlZC5yZWFzb24uRW5naW5lU3RhcnR1cEVycm9yO3Rocm93IG5ldyBDcihyLGksbyl9aWYoXCJLbm93bkVuZ2luZVN0YXJ0dXBFcnJvclwiaW4gbi5ib2R5LkVuZ2luZU5vdFN0YXJ0ZWQucmVhc29uKXtsZXR7bXNnOmksZXJyb3JfY29kZTpvfT1uLmJvZHkuRW5naW5lTm90U3RhcnRlZC5yZWFzb24uS25vd25FbmdpbmVTdGFydHVwRXJyb3I7dGhyb3cgbmV3IGsoaSx0LG8pfWlmKFwiSGVhbHRoY2hlY2tUaW1lb3V0XCJpbiBuLmJvZHkuRW5naW5lTm90U3RhcnRlZC5yZWFzb24pe2xldHtsb2dzOml9PW4uYm9keS5FbmdpbmVOb3RTdGFydGVkLnJlYXNvbi5IZWFsdGhjaGVja1RpbWVvdXQ7dGhyb3cgbmV3IFRyKHIsaSl9fWlmKFwiSW50ZXJhY3RpdmVUcmFuc2FjdGlvbk1pc3JvdXRlZFwiaW4gbi5ib2R5KXtsZXQgaT17SURQYXJzZUVycm9yOlwiQ291bGQgbm90IHBhcnNlIGludGVyYWN0aXZlIHRyYW5zYWN0aW9uIElEXCIsTm9RdWVyeUVuZ2luZUZvdW5kRXJyb3I6XCJDb3VsZCBub3QgZmluZCBRdWVyeSBFbmdpbmUgZm9yIHRoZSBzcGVjaWZpZWQgaG9zdCBhbmQgdHJhbnNhY3Rpb24gSURcIixUcmFuc2FjdGlvblN0YXJ0RXJyb3I6XCJDb3VsZCBub3Qgc3RhcnQgaW50ZXJhY3RpdmUgdHJhbnNhY3Rpb25cIn07dGhyb3cgbmV3IE1yKHIsaVtuLmJvZHkuSW50ZXJhY3RpdmVUcmFuc2FjdGlvbk1pc3JvdXRlZC5yZWFzb25dKX1pZihcIkludmFsaWRSZXF1ZXN0RXJyb3JcImluIG4uYm9keSl0aHJvdyBuZXcgU3IocixuLmJvZHkuSW52YWxpZFJlcXVlc3RFcnJvci5yZWFzb24pfWlmKGUuc3RhdHVzPT09NDAxfHxlLnN0YXR1cz09PTQwMyl0aHJvdyBuZXcga3IocixXdCh4byxuKSk7aWYoZS5zdGF0dXM9PT00MDQpcmV0dXJuIG5ldyBJcihyLFd0KGhvLG4pKTtpZihlLnN0YXR1cz09PTQyOSl0aHJvdyBuZXcgRnIocixXdCh3byxuKSk7aWYoZS5zdGF0dXM9PT01MDQpdGhyb3cgbmV3IFJyKHIsV3QoeW8sbikpO2lmKGUuc3RhdHVzPj01MDApdGhyb3cgbmV3IEh0KHIsV3QoYm8sbikpO2lmKGUuc3RhdHVzPj00MDApdGhyb3cgbmV3IF9yKHIsV3QoZ28sbikpfWZ1bmN0aW9uIFd0KGUsdCl7cmV0dXJuIHQudHlwZT09PVwiRW1wdHlFcnJvclwiP2U6YCR7ZX06ICR7SlNPTi5zdHJpbmdpZnkodCl9YH1mdW5jdGlvbiB3bChlKXtsZXQgdD1NYXRoLnBvdygyLGUpKjUwLHI9TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkqdCktTWF0aC5jZWlsKHQvMiksbj10K3I7cmV0dXJuIG5ldyBQcm9taXNlKGk9PnNldFRpbWVvdXQoKCk9PmkobiksbikpfWZ1bmN0aW9uIEVsKGUpe2lmKCEhZS5nZW5lcmF0b3I/LnByZXZpZXdGZWF0dXJlcy5zb21lKHI9PnIudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcIm1ldHJpY3NcIikpKXRocm93IG5ldyBrKFwiVGhlIGBtZXRyaWNzYCBwcmV2aWV3IGZlYXR1cmUgaXMgbm90IHlldCBhdmFpbGFibGUgd2l0aCBBY2NlbGVyYXRlLlxcblBsZWFzZSByZW1vdmUgYG1ldHJpY3NgIGZyb20gdGhlIGBwcmV2aWV3RmVhdHVyZXNgIGluIHlvdXIgc2NoZW1hLlxcblxcbk1vcmUgaW5mb3JtYXRpb24gYWJvdXQgQWNjZWxlcmF0ZTogaHR0cHM6Ly9wcmlzLmx5L2QvYWNjZWxlcmF0ZVwiLGUuY2xpZW50VmVyc2lvbil9dmFyIFBsPXtcIkBwcmlzbWEvZGVidWdcIjpcIndvcmtzcGFjZToqXCIsXCJAcHJpc21hL2VuZ2luZXMtdmVyc2lvblwiOlwiNS43LjEtMS4wY2E1Y2NiY2ZhNmJkYzgxYzAwM2NmNTQ5YWJlNDI2OWY1OWM0MWU1XCIsXCJAcHJpc21hL2ZldGNoLWVuZ2luZVwiOlwid29ya3NwYWNlOipcIixcIkBwcmlzbWEvZ2V0LXBsYXRmb3JtXCI6XCJ3b3Jrc3BhY2U6KlwifTt2YXIgRHI9Y2xhc3MgZXh0ZW5kcyBnZXtjb25zdHJ1Y3RvcihyLG4pe3N1cGVyKGBDYW5ub3QgZmV0Y2ggZGF0YSBmcm9tIHNlcnZpY2U6XG4ke3J9YCxJKG4sITApKTt0aGlzLm5hbWU9XCJSZXF1ZXN0RXJyb3JcIjt0aGlzLmNvZGU9XCJQNTAxMFwifX07dihEcixcIlJlcXVlc3RFcnJvclwiKTthc3luYyBmdW5jdGlvbiB2dChlLHQscj1uPT5uKXtsZXQgbj10LmNsaWVudFZlcnNpb247dHJ5e3JldHVybiB0eXBlb2YgZmV0Y2g9PVwiZnVuY3Rpb25cIj9hd2FpdCByKGZldGNoKShlLHQpOmF3YWl0IHIoRW8pKGUsdCl9Y2F0Y2goaSl7bGV0IG89aS5tZXNzYWdlPz9cIlVua25vd24gZXJyb3JcIjt0aHJvdyBuZXcgRHIobyx7Y2xpZW50VmVyc2lvbjpufSl9fWZ1bmN0aW9uIEpkKGUpe3JldHVybnsuLi5lLmhlYWRlcnMsXCJDb250ZW50LVR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIn19ZnVuY3Rpb24gSGQoZSl7cmV0dXJue21ldGhvZDplLm1ldGhvZCxoZWFkZXJzOkpkKGUpfX1mdW5jdGlvbiBXZChlLHQpe3JldHVybnt0ZXh0OigpPT5Qcm9taXNlLnJlc29sdmUoQnVmZmVyLmNvbmNhdChlKS50b1N0cmluZygpKSxqc29uOigpPT5Qcm9taXNlLnJlc29sdmUoKS50aGVuKCgpPT5KU09OLnBhcnNlKEJ1ZmZlci5jb25jYXQoZSkudG9TdHJpbmcoKSkpLG9rOnQuc3RhdHVzQ29kZT49MjAwJiZ0LnN0YXR1c0NvZGU8PTI5OSxzdGF0dXM6dC5zdGF0dXNDb2RlLHVybDp0LnVybCxoZWFkZXJzOm5ldyBQbyh0LmhlYWRlcnMpfX1hc3luYyBmdW5jdGlvbiBFbyhlLHQ9e30pe2xldCByPXpkKFwiaHR0cHNcIiksbj1IZCh0KSxpPVtdLHtvcmlnaW46b309bmV3IFVSTChlKTtyZXR1cm4gbmV3IFByb21pc2UoKHMsYSk9PntsZXQgbD1yLnJlcXVlc3QoZSxuLHU9PntsZXR7c3RhdHVzQ29kZTpjLGhlYWRlcnM6e2xvY2F0aW9uOnB9fT11O2M+PTMwMSYmYzw9Mzk5JiZwJiYocC5zdGFydHNXaXRoKFwiaHR0cFwiKT09PSExP3MoRW8oYCR7b30ke3B9YCx0KSk6cyhFbyhwLHQpKSksdS5vbihcImRhdGFcIixkPT5pLnB1c2goZCkpLHUub24oXCJlbmRcIiwoKT0+cyhXZChpLHUpKSksdS5vbihcImVycm9yXCIsYSl9KTtsLm9uKFwiZXJyb3JcIixhKSxsLmVuZCh0LmJvZHk/P1wiXCIpfSl9dmFyIHpkPXR5cGVvZiByZXF1aXJlPFwidVwiP3JlcXVpcmU6KCk9Pnt9LFBvPWNsYXNze2NvbnN0cnVjdG9yKHQ9e30pe3RoaXMuaGVhZGVycz1uZXcgTWFwO2ZvcihsZXRbcixuXW9mIE9iamVjdC5lbnRyaWVzKHQpKWlmKHR5cGVvZiBuPT1cInN0cmluZ1wiKXRoaXMuaGVhZGVycy5zZXQocixuKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkobikpZm9yKGxldCBpIG9mIG4pdGhpcy5oZWFkZXJzLnNldChyLGkpfWFwcGVuZCh0LHIpe3RoaXMuaGVhZGVycy5zZXQodCxyKX1kZWxldGUodCl7dGhpcy5oZWFkZXJzLmRlbGV0ZSh0KX1nZXQodCl7cmV0dXJuIHRoaXMuaGVhZGVycy5nZXQodCk/P251bGx9aGFzKHQpe3JldHVybiB0aGlzLmhlYWRlcnMuaGFzKHQpfXNldCh0LHIpe3RoaXMuaGVhZGVycy5zZXQodCxyKX1mb3JFYWNoKHQscil7Zm9yKGxldFtuLGldb2YgdGhpcy5oZWFkZXJzKXQuY2FsbChyLGksbix0aGlzKX19O3ZhciBZZD0vXlsxLTldWzAtOV0qXFwuWzAtOV0rXFwuWzAtOV0rJC8sdmw9JChcInByaXNtYTpjbGllbnQ6ZGF0YXByb3h5RW5naW5lXCIpO2FzeW5jIGZ1bmN0aW9uIFpkKGUsdCl7bGV0IHI9UGxbXCJAcHJpc21hL2VuZ2luZXMtdmVyc2lvblwiXSxuPXQuY2xpZW50VmVyc2lvbj8/XCJ1bmtub3duXCI7aWYocHJvY2Vzcy5lbnYuUFJJU01BX0NMSUVOVF9EQVRBX1BST1hZX0NMSUVOVF9WRVJTSU9OKXJldHVybiBwcm9jZXNzLmVudi5QUklTTUFfQ0xJRU5UX0RBVEFfUFJPWFlfQ0xJRU5UX1ZFUlNJT047aWYoZS5pbmNsdWRlcyhcImFjY2VsZXJhdGVcIikmJm4hPT1cIjAuMC4wXCImJm4hPT1cImluLW1lbW9yeVwiKXJldHVybiBuO2xldFtpLG9dPW4/LnNwbGl0KFwiLVwiKT8/W107aWYobz09PXZvaWQgMCYmWWQudGVzdChpKSlyZXR1cm4gaTtpZihvIT09dm9pZCAwfHxuPT09XCIwLjAuMFwifHxuPT09XCJpbi1tZW1vcnlcIil7aWYoZS5zdGFydHNXaXRoKFwibG9jYWxob3N0XCIpfHxlLnN0YXJ0c1dpdGgoXCIxMjcuMC4wLjFcIikpcmV0dXJuXCIwLjAuMFwiO2xldFtzXT1yLnNwbGl0KFwiLVwiKT8/W10sW2EsbCx1XT1zLnNwbGl0KFwiLlwiKSxjPVhkKGA8PSR7YX0uJHtsfS4ke3V9YCkscD1hd2FpdCB2dChjLHtjbGllbnRWZXJzaW9uOm59KTtpZighcC5vayl0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBmZXRjaCBzdGFibGUgUHJpc21hIHZlcnNpb24sIHVucGtnLmNvbSBzdGF0dXMgJHtwLnN0YXR1c30gJHtwLnN0YXR1c1RleHR9LCByZXNwb25zZSBib2R5OiAke2F3YWl0IHAudGV4dCgpfHxcIjxlbXB0eSBib2R5PlwifWApO2xldCBkPWF3YWl0IHAudGV4dCgpO3ZsKFwibGVuZ3RoIG9mIGJvZHkgZmV0Y2hlZCBmcm9tIHVucGtnLmNvbVwiLGQubGVuZ3RoKTtsZXQgZjt0cnl7Zj1KU09OLnBhcnNlKGQpfWNhdGNoKHkpe3Rocm93IGNvbnNvbGUuZXJyb3IoXCJKU09OLnBhcnNlIGVycm9yOiBib2R5IGZldGNoZWQgZnJvbSB1bnBrZy5jb206IFwiLGQpLHl9cmV0dXJuIGYudmVyc2lvbn10aHJvdyBuZXcgRXQoXCJPbmx5IGBtYWpvci5taW5vci5wYXRjaGAgdmVyc2lvbnMgYXJlIHN1cHBvcnRlZCBieSBBY2NlbGVyYXRlLlwiLHtjbGllbnRWZXJzaW9uOm59KX1hc3luYyBmdW5jdGlvbiBfbChlLHQpe2xldCByPWF3YWl0IFpkKGUsdCk7cmV0dXJuIHZsKFwidmVyc2lvblwiLHIpLHJ9ZnVuY3Rpb24gWGQoZSl7cmV0dXJuIGVuY29kZVVSSShgaHR0cHM6Ly91bnBrZy5jb20vcHJpc21hQCR7ZX0vcGFja2FnZS5qc29uYCl9dmFyIFRsPTMsdm89JChcInByaXNtYTpjbGllbnQ6ZGF0YXByb3h5RW5naW5lXCIpLF9vPWNsYXNze2NvbnN0cnVjdG9yKHthcGlLZXk6dCx0cmFjaW5nSGVscGVyOnIsbG9nTGV2ZWw6bixsb2dRdWVyaWVzOmksZW5naW5lSGFzaDpvfSl7dGhpcy5hcGlLZXk9dCx0aGlzLnRyYWNpbmdIZWxwZXI9cix0aGlzLmxvZ0xldmVsPW4sdGhpcy5sb2dRdWVyaWVzPWksdGhpcy5lbmdpbmVIYXNoPW99YnVpbGQoe3RyYWNlcGFyZW50OnQsaW50ZXJhY3RpdmVUcmFuc2FjdGlvbjpyfT17fSl7bGV0IG49e0F1dGhvcml6YXRpb246YEJlYXJlciAke3RoaXMuYXBpS2V5fWAsXCJQcmlzbWEtRW5naW5lLUhhc2hcIjp0aGlzLmVuZ2luZUhhc2h9O3RoaXMudHJhY2luZ0hlbHBlci5pc0VuYWJsZWQoKSYmKG4udHJhY2VwYXJlbnQ9dD8/dGhpcy50cmFjaW5nSGVscGVyLmdldFRyYWNlUGFyZW50KCkpLHImJihuW1wiWC10cmFuc2FjdGlvbi1pZFwiXT1yLmlkKTtsZXQgaT10aGlzLmJ1aWxkQ2FwdHVyZVNldHRpbmdzKCk7cmV0dXJuIGkubGVuZ3RoPjAmJihuW1wiWC1jYXB0dXJlLXRlbGVtZXRyeVwiXT1pLmpvaW4oXCIsIFwiKSksbn1idWlsZENhcHR1cmVTZXR0aW5ncygpe2xldCB0PVtdO3JldHVybiB0aGlzLnRyYWNpbmdIZWxwZXIuaXNFbmFibGVkKCkmJnQucHVzaChcInRyYWNpbmdcIiksdGhpcy5sb2dMZXZlbCYmdC5wdXNoKHRoaXMubG9nTGV2ZWwpLHRoaXMubG9nUXVlcmllcyYmdC5wdXNoKFwicXVlcnlcIiksdH19LE5yPWNsYXNzIGV4dGVuZHMgR3R7Y29uc3RydWN0b3Iocil7c3VwZXIoKTtFbChyKSx0aGlzLmNvbmZpZz1yLHRoaXMuZW52PXsuLi50aGlzLmNvbmZpZy5lbnYsLi4ucHJvY2Vzcy5lbnZ9LHRoaXMuaW5saW5lU2NoZW1hPXIuaW5saW5lU2NoZW1hLHRoaXMuaW5saW5lRGF0YXNvdXJjZXM9ci5pbmxpbmVEYXRhc291cmNlcyx0aGlzLmlubGluZVNjaGVtYUhhc2g9ci5pbmxpbmVTY2hlbWFIYXNoLHRoaXMuY2xpZW50VmVyc2lvbj1yLmNsaWVudFZlcnNpb24sdGhpcy5lbmdpbmVIYXNoPXIuZW5naW5lVmVyc2lvbix0aGlzLmxvZ0VtaXR0ZXI9ci5sb2dFbWl0dGVyLHRoaXMudHJhY2luZ0hlbHBlcj10aGlzLmNvbmZpZy50cmFjaW5nSGVscGVyfWFwaUtleSgpe3JldHVybiB0aGlzLmhlYWRlckJ1aWxkZXIuYXBpS2V5fXZlcnNpb24oKXtyZXR1cm4gdGhpcy5lbmdpbmVIYXNofWFzeW5jIHN0YXJ0KCl7dGhpcy5zdGFydFByb21pc2UhPT12b2lkIDAmJmF3YWl0IHRoaXMuc3RhcnRQcm9taXNlLHRoaXMuc3RhcnRQcm9taXNlPShhc3luYygpPT57bGV0W3Isbl09dGhpcy5leHRyYWN0SG9zdEFuZEFwaUtleSgpO3RoaXMuaG9zdD1yLHRoaXMuaGVhZGVyQnVpbGRlcj1uZXcgX28oe2FwaUtleTpuLHRyYWNpbmdIZWxwZXI6dGhpcy50cmFjaW5nSGVscGVyLGxvZ0xldmVsOnRoaXMuY29uZmlnLmxvZ0xldmVsLGxvZ1F1ZXJpZXM6dGhpcy5jb25maWcubG9nUXVlcmllcyxlbmdpbmVIYXNoOnRoaXMuZW5naW5lSGFzaH0pLHRoaXMucmVtb3RlQ2xpZW50VmVyc2lvbj1hd2FpdCBfbChyLHRoaXMuY29uZmlnKSx2byhcImhvc3RcIix0aGlzLmhvc3QpfSkoKSxhd2FpdCB0aGlzLnN0YXJ0UHJvbWlzZX1hc3luYyBzdG9wKCl7fXByb3BhZ2F0ZVJlc3BvbnNlRXh0ZW5zaW9ucyhyKXtyPy5sb2dzPy5sZW5ndGgmJnIubG9ncy5mb3JFYWNoKG49Pntzd2l0Y2gobi5sZXZlbCl7Y2FzZVwiZGVidWdcIjpjYXNlXCJlcnJvclwiOmNhc2VcInRyYWNlXCI6Y2FzZVwid2FyblwiOmNhc2VcImluZm9cIjpicmVhaztjYXNlXCJxdWVyeVwiOntsZXQgaT10eXBlb2Ygbi5hdHRyaWJ1dGVzLnF1ZXJ5PT1cInN0cmluZ1wiP24uYXR0cmlidXRlcy5xdWVyeTpcIlwiO2lmKCF0aGlzLnRyYWNpbmdIZWxwZXIuaXNFbmFibGVkKCkpe2xldFtvXT1pLnNwbGl0KFwiLyogdHJhY2VwYXJlbnRcIik7aT1vfXRoaXMubG9nRW1pdHRlci5lbWl0KFwicXVlcnlcIix7cXVlcnk6aSx0aW1lc3RhbXA6bi50aW1lc3RhbXAsZHVyYXRpb246bi5hdHRyaWJ1dGVzLmR1cmF0aW9uX21zLHBhcmFtczpuLmF0dHJpYnV0ZXMucGFyYW1zLHRhcmdldDpuLmF0dHJpYnV0ZXMudGFyZ2V0fSl9fX0pLHI/LnRyYWNlcz8ubGVuZ3RoJiZ0aGlzLnRyYWNpbmdIZWxwZXIuY3JlYXRlRW5naW5lU3Bhbih7c3BhbjohMCxzcGFuczpyLnRyYWNlc30pfW9uKHIsbil7aWYocj09PVwiYmVmb3JlRXhpdFwiKXRocm93IG5ldyBFcnJvcignXCJiZWZvcmVFeGl0XCIgaG9vayBpcyBub3QgYXBwbGljYWJsZSB0byB0aGUgcmVtb3RlIHF1ZXJ5IGVuZ2luZScpO3RoaXMubG9nRW1pdHRlci5vbihyLG4pfWFzeW5jIHVybChyKXtyZXR1cm4gYXdhaXQgdGhpcy5zdGFydCgpLGBodHRwczovLyR7dGhpcy5ob3N0fS8ke3RoaXMucmVtb3RlQ2xpZW50VmVyc2lvbn0vJHt0aGlzLmlubGluZVNjaGVtYUhhc2h9LyR7cn1gfWFzeW5jIHVwbG9hZFNjaGVtYSgpe2xldCByPXtuYW1lOlwic2NoZW1hVXBsb2FkXCIsaW50ZXJuYWw6ITB9O3JldHVybiB0aGlzLnRyYWNpbmdIZWxwZXIucnVuSW5DaGlsZFNwYW4ocixhc3luYygpPT57bGV0IG49YXdhaXQgdnQoYXdhaXQgdGhpcy51cmwoXCJzY2hlbWFcIikse21ldGhvZDpcIlBVVFwiLGhlYWRlcnM6dGhpcy5oZWFkZXJCdWlsZGVyLmJ1aWxkKCksYm9keTp0aGlzLmlubGluZVNjaGVtYSxjbGllbnRWZXJzaW9uOnRoaXMuY2xpZW50VmVyc2lvbn0pO24ub2t8fHZvKFwic2NoZW1hIHJlc3BvbnNlIHN0YXR1c1wiLG4uc3RhdHVzKTtsZXQgaT1hd2FpdCBPcihuLHRoaXMuY2xpZW50VmVyc2lvbik7aWYoaSl0aHJvdyB0aGlzLmxvZ0VtaXR0ZXIuZW1pdChcIndhcm5cIix7bWVzc2FnZTpgRXJyb3Igd2hpbGUgdXBsb2FkaW5nIHNjaGVtYTogJHtpLm1lc3NhZ2V9YH0pLGk7dGhpcy5sb2dFbWl0dGVyLmVtaXQoXCJpbmZvXCIse21lc3NhZ2U6YFNjaGVtYSAocmUpdXBsb2FkZWQgKGhhc2g6ICR7dGhpcy5pbmxpbmVTY2hlbWFIYXNofSlgfSl9KX1yZXF1ZXN0KHIse3RyYWNlcGFyZW50Om4saW50ZXJhY3RpdmVUcmFuc2FjdGlvbjppLGN1c3RvbURhdGFQcm94eUZldGNoOm99KXtyZXR1cm4gdGhpcy5yZXF1ZXN0SW50ZXJuYWwoe2JvZHk6cix0cmFjZXBhcmVudDpuLGludGVyYWN0aXZlVHJhbnNhY3Rpb246aSxjdXN0b21EYXRhUHJveHlGZXRjaDpvfSl9YXN5bmMgcmVxdWVzdEJhdGNoKHIse3RyYWNlcGFyZW50Om4sdHJhbnNhY3Rpb246aSxjdXN0b21EYXRhUHJveHlGZXRjaDpvfSl7bGV0IHM9aT8ua2luZD09PVwiaXR4XCI/aS5vcHRpb25zOnZvaWQgMCxhPVZuKHIsaSkse2JhdGNoUmVzdWx0OmwsZWxhcHNlZDp1fT1hd2FpdCB0aGlzLnJlcXVlc3RJbnRlcm5hbCh7Ym9keTphLGN1c3RvbURhdGFQcm94eUZldGNoOm8saW50ZXJhY3RpdmVUcmFuc2FjdGlvbjpzLHRyYWNlcGFyZW50Om59KTtyZXR1cm4gbC5tYXAoYz0+XCJlcnJvcnNcImluIGMmJmMuZXJyb3JzLmxlbmd0aD4wP1ByKGMuZXJyb3JzWzBdLHRoaXMuY2xpZW50VmVyc2lvbik6e2RhdGE6YyxlbGFwc2VkOnV9KX1yZXF1ZXN0SW50ZXJuYWwoe2JvZHk6cix0cmFjZXBhcmVudDpuLGN1c3RvbURhdGFQcm94eUZldGNoOmksaW50ZXJhY3RpdmVUcmFuc2FjdGlvbjpvfSl7cmV0dXJuIHRoaXMud2l0aFJldHJ5KHthY3Rpb25HZXJ1bmQ6XCJxdWVyeWluZ1wiLGNhbGxiYWNrOmFzeW5jKHtsb2dIdHRwQ2FsbDpzfSk9PntsZXQgYT1vP2Ake28ucGF5bG9hZC5lbmRwb2ludH0vZ3JhcGhxbGA6YXdhaXQgdGhpcy51cmwoXCJncmFwaHFsXCIpO3MoYSk7bGV0IGw9YXdhaXQgdnQoYSx7bWV0aG9kOlwiUE9TVFwiLGhlYWRlcnM6dGhpcy5oZWFkZXJCdWlsZGVyLmJ1aWxkKHt0cmFjZXBhcmVudDpuLGludGVyYWN0aXZlVHJhbnNhY3Rpb246b30pLGJvZHk6SlNPTi5zdHJpbmdpZnkociksY2xpZW50VmVyc2lvbjp0aGlzLmNsaWVudFZlcnNpb259LGkpO2wub2t8fHZvKFwiZ3JhcGhxbCByZXNwb25zZSBzdGF0dXNcIixsLnN0YXR1cyksYXdhaXQgdGhpcy5oYW5kbGVFcnJvcihhd2FpdCBPcihsLHRoaXMuY2xpZW50VmVyc2lvbikpO2xldCB1PWF3YWl0IGwuanNvbigpLGM9dS5leHRlbnNpb25zO2lmKGMmJnRoaXMucHJvcGFnYXRlUmVzcG9uc2VFeHRlbnNpb25zKGMpLHUuZXJyb3JzKXRocm93IHUuZXJyb3JzLmxlbmd0aD09PTE/UHIodS5lcnJvcnNbMF0sdGhpcy5jb25maWcuY2xpZW50VmVyc2lvbik6bmV3IFcodS5lcnJvcnMse2NsaWVudFZlcnNpb246dGhpcy5jb25maWcuY2xpZW50VmVyc2lvbn0pO3JldHVybiB1fX0pfWFzeW5jIHRyYW5zYWN0aW9uKHIsbixpKXtsZXQgbz17c3RhcnQ6XCJzdGFydGluZ1wiLGNvbW1pdDpcImNvbW1pdHRpbmdcIixyb2xsYmFjazpcInJvbGxpbmcgYmFja1wifTtyZXR1cm4gdGhpcy53aXRoUmV0cnkoe2FjdGlvbkdlcnVuZDpgJHtvW3JdfSB0cmFuc2FjdGlvbmAsY2FsbGJhY2s6YXN5bmMoe2xvZ0h0dHBDYWxsOnN9KT0+e2lmKHI9PT1cInN0YXJ0XCIpe2xldCBhPUpTT04uc3RyaW5naWZ5KHttYXhfd2FpdDppPy5tYXhXYWl0Pz8yZTMsdGltZW91dDppPy50aW1lb3V0Pz81ZTMsaXNvbGF0aW9uX2xldmVsOmk/Lmlzb2xhdGlvbkxldmVsfSksbD1hd2FpdCB0aGlzLnVybChcInRyYW5zYWN0aW9uL3N0YXJ0XCIpO3MobCk7bGV0IHU9YXdhaXQgdnQobCx7bWV0aG9kOlwiUE9TVFwiLGhlYWRlcnM6dGhpcy5oZWFkZXJCdWlsZGVyLmJ1aWxkKHt0cmFjZXBhcmVudDpuLnRyYWNlcGFyZW50fSksYm9keTphLGNsaWVudFZlcnNpb246dGhpcy5jbGllbnRWZXJzaW9ufSk7YXdhaXQgdGhpcy5oYW5kbGVFcnJvcihhd2FpdCBPcih1LHRoaXMuY2xpZW50VmVyc2lvbikpO2xldCBjPWF3YWl0IHUuanNvbigpLHA9Yy5leHRlbnNpb25zO3AmJnRoaXMucHJvcGFnYXRlUmVzcG9uc2VFeHRlbnNpb25zKHApO2xldCBkPWMuaWQsZj1jW1wiZGF0YS1wcm94eVwiXS5lbmRwb2ludDtyZXR1cm57aWQ6ZCxwYXlsb2FkOntlbmRwb2ludDpmfX19ZWxzZXtsZXQgYT1gJHtpLnBheWxvYWQuZW5kcG9pbnR9LyR7cn1gO3MoYSk7bGV0IGw9YXdhaXQgdnQoYSx7bWV0aG9kOlwiUE9TVFwiLGhlYWRlcnM6dGhpcy5oZWFkZXJCdWlsZGVyLmJ1aWxkKHt0cmFjZXBhcmVudDpuLnRyYWNlcGFyZW50fSksY2xpZW50VmVyc2lvbjp0aGlzLmNsaWVudFZlcnNpb259KTthd2FpdCB0aGlzLmhhbmRsZUVycm9yKGF3YWl0IE9yKGwsdGhpcy5jbGllbnRWZXJzaW9uKSk7bGV0IGM9KGF3YWl0IGwuanNvbigpKS5leHRlbnNpb25zO2MmJnRoaXMucHJvcGFnYXRlUmVzcG9uc2VFeHRlbnNpb25zKGMpO3JldHVybn19fSl9ZXh0cmFjdEhvc3RBbmRBcGlLZXkoKXtsZXQgcj17Y2xpZW50VmVyc2lvbjp0aGlzLmNsaWVudFZlcnNpb259LG49T2JqZWN0LmtleXModGhpcy5pbmxpbmVEYXRhc291cmNlcylbMF0saT1Cbih7aW5saW5lRGF0YXNvdXJjZXM6dGhpcy5pbmxpbmVEYXRhc291cmNlcyxvdmVycmlkZURhdGFzb3VyY2VzOnRoaXMuY29uZmlnLm92ZXJyaWRlRGF0YXNvdXJjZXMsY2xpZW50VmVyc2lvbjp0aGlzLmNsaWVudFZlcnNpb24sZW52OnRoaXMuZW52fSksbzt0cnl7bz1uZXcgVVJMKGkpfWNhdGNoe3Rocm93IG5ldyB3dChgRXJyb3IgdmFsaWRhdGluZyBkYXRhc291cmNlIFxcYCR7bn1cXGA6IHRoZSBVUkwgbXVzdCBzdGFydCB3aXRoIHRoZSBwcm90b2NvbCBcXGBwcmlzbWE6Ly9cXGBgLHIpfWxldHtwcm90b2NvbDpzLGhvc3Q6YSxzZWFyY2hQYXJhbXM6bH09bztpZihzIT09XCJwcmlzbWE6XCIpdGhyb3cgbmV3IHd0KGBFcnJvciB2YWxpZGF0aW5nIGRhdGFzb3VyY2UgXFxgJHtufVxcYDogdGhlIFVSTCBtdXN0IHN0YXJ0IHdpdGggdGhlIHByb3RvY29sIFxcYHByaXNtYTovL1xcYGAscik7bGV0IHU9bC5nZXQoXCJhcGlfa2V5XCIpO2lmKHU9PT1udWxsfHx1Lmxlbmd0aDwxKXRocm93IG5ldyB3dChgRXJyb3IgdmFsaWRhdGluZyBkYXRhc291cmNlIFxcYCR7bn1cXGA6IHRoZSBVUkwgbXVzdCBjb250YWluIGEgdmFsaWQgQVBJIGtleWAscik7cmV0dXJuW2EsdV19bWV0cmljcygpe3Rocm93IG5ldyBFdChcIk1ldHJpY3MgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkIGZvciBBY2NlbGVyYXRlXCIse2NsaWVudFZlcnNpb246dGhpcy5jbGllbnRWZXJzaW9ufSl9YXN5bmMgd2l0aFJldHJ5KHIpe2ZvcihsZXQgbj0wOztuKyspe2xldCBpPW89Pnt0aGlzLmxvZ0VtaXR0ZXIuZW1pdChcImluZm9cIix7bWVzc2FnZTpgQ2FsbGluZyAke299IChuPSR7bn0pYH0pfTt0cnl7cmV0dXJuIGF3YWl0IHIuY2FsbGJhY2soe2xvZ0h0dHBDYWxsOml9KX1jYXRjaChvKXtpZighKG8gaW5zdGFuY2VvZiBnZSl8fCFvLmlzUmV0cnlhYmxlKXRocm93IG87aWYobj49VGwpdGhyb3cgbyBpbnN0YW5jZW9mIEp0P28uY2F1c2U6bzt0aGlzLmxvZ0VtaXR0ZXIuZW1pdChcIndhcm5cIix7bWVzc2FnZTpgQXR0ZW1wdCAke24rMX0vJHtUbH0gZmFpbGVkIGZvciAke3IuYWN0aW9uR2VydW5kfTogJHtvLm1lc3NhZ2U/P1wiKHVua25vd24pXCJ9YH0pO2xldCBzPWF3YWl0IHdsKG4pO3RoaXMubG9nRW1pdHRlci5lbWl0KFwid2FyblwiLHttZXNzYWdlOmBSZXRyeWluZyBhZnRlciAke3N9bXNgfSl9fX1hc3luYyBoYW5kbGVFcnJvcihyKXtpZihyIGluc3RhbmNlb2YgUHQpdGhyb3cgYXdhaXQgdGhpcy51cGxvYWRTY2hlbWEoKSxuZXcgSnQoe2NsaWVudFZlcnNpb246dGhpcy5jbGllbnRWZXJzaW9uLGNhdXNlOnJ9KTtpZihyKXRocm93IHJ9fTtmdW5jdGlvbiBDbChlKXtpZihlPy5raW5kPT09XCJpdHhcIilyZXR1cm4gZS5vcHRpb25zLmlkfXZhciBDbz1GKHJlcXVpcmUoXCJvc1wiKSksQWw9RihyZXF1aXJlKFwicGF0aFwiKSk7dmFyIFRvPVN5bWJvbChcIlByaXNtYUxpYnJhcnlFbmdpbmVDYWNoZVwiKTtmdW5jdGlvbiBlbSgpe2xldCBlPWdsb2JhbFRoaXM7cmV0dXJuIGVbVG9dPT09dm9pZCAwJiYoZVtUb109e30pLGVbVG9dfWZ1bmN0aW9uIHRtKGUpe2xldCB0PWVtKCk7aWYodFtlXSE9PXZvaWQgMClyZXR1cm4gdFtlXTtsZXQgcj1BbC5kZWZhdWx0LnRvTmFtZXNwYWNlZFBhdGgoZSksbj17ZXhwb3J0czp7fX0saT0wO3JldHVybiBwcm9jZXNzLnBsYXRmb3JtIT09XCJ3aW4zMlwiJiYoaT1Dby5kZWZhdWx0LmNvbnN0YW50cy5kbG9wZW4uUlRMRF9MQVpZfENvLmRlZmF1bHQuY29uc3RhbnRzLmRsb3Blbi5SVExEX0RFRVBCSU5EKSxwcm9jZXNzLmRsb3BlbihuLHIsaSksdFtlXT1uLmV4cG9ydHMsbi5leHBvcnRzfXZhciBSbD17YXN5bmMgbG9hZExpYnJhcnkoZSl7bGV0IHQ9YXdhaXQgUmkoKSxyPWF3YWl0IGRsKFwibGlicmFyeVwiLGUpO3RyeXtyZXR1cm4gZS50cmFjaW5nSGVscGVyLnJ1bkluQ2hpbGRTcGFuKHtuYW1lOlwibG9hZExpYnJhcnlcIixpbnRlcm5hbDohMH0sKCk9PnRtKHIpKX1jYXRjaChuKXtsZXQgaT1OaSh7ZTpuLHBsYXRmb3JtSW5mbzp0LGlkOnJ9KTt0aHJvdyBuZXcgayhpLGUuY2xpZW50VmVyc2lvbil9fX07dmFyIEZvPXt9O1R0KEZvLHtDb21tb25Qcm94eTooKT0+Um8sRHJpdmVyUHJveHk6KCk9Pk1vLEpzQmFzZVF1ZXJ5YWJsZTooKT0+U28sUXVlcnlFbmdpbmU6KCk9PiRyLFRyYW5zYWN0aW9uUHJveHk6KCk9PklvLF9fd2JnX1N0cmluZ184ODgxMGRmZWI0MDIxOTAyOigpPT50ZixfX3diZ19idWZmZXJfMzQ0ZDliNDFlZmU5NmRhNzooKT0+bGYsX193YmdfY2FsbF81M2ZjM2FiZDQyZTI0ZWM4OigpPT5obSxfX3diZ19jYWxsXzY2OTEyN2I5ZDczMGM2NTA6KCk9PlBmLF9fd2JnX2NyeXB0b181OGYxM2FhMjNmZmNiMTY2OigpPT5wZixfX3diZ19kb25lX2JjMjZiZjRhZGE3MTgyNjY6KCk9PndmLF9fd2JnX2VudHJpZXNfNmQ3MjdiNzNlZTAyYjdjZTooKT0+T2YsX193YmdfZ2V0UmFuZG9tVmFsdWVzXzUwNDUxMGI1NTY0OTI1YWY6KCk9PnNmLF9fd2JnX2dldFRpbWVfZWQ2ZWUzMzNiNzAyZjhmYzooKT0+Q20sX193YmdfZ2V0XzJhZmY0NDA4NDBiYjYyMDI6KCk9PnJmLF9fd2JnX2dldF80YTlhYTUxNTdhZmViMzgyOigpPT5VbSxfX3diZ19nZXRfOTQ5OTAwMDViZDZjYTA3YzooKT0+bmYsX193YmdfZ2V0d2l0aHJlZmtleV81ZTZkOTU0NzQwM2RlYWI4OigpPT5lZixfX3diZ19nbG9iYWxUaGlzXzE3ZWZmODI4ODE1ZjdkODQ6KCk9PkNmLF9fd2JnX2dsb2JhbF80NmY5MzlmNjU0MTY0M2M1OigpPT5BZixfX3diZ19pbnN0YW5jZW9mX0FycmF5QnVmZmVyX2M3Y2MzMTdlNWMyOWNjMGQ6KCk9PkZmLF9fd2JnX2luc3RhbmNlb2ZfUHJvbWlzZV9jZmJjYzQyMzAwMzY3NTEzOigpPT5abSxfX3diZ19pbnN0YW5jZW9mX1VpbnQ4QXJyYXlfMTllNmYxNDJhNWU3ZTFlMTooKT0+a2YsX193YmdfaXNBcnJheV8zODUyNWJlNzQ0MmFhMjFlOigpPT5MbSxfX3diZ19pc1NhZmVJbnRlZ2VyX2MzOGIwYTE2ZDBjN2NlZjc6KCk9PkZtLF9fd2JnX2l0ZXJhdG9yXzdlZTFhMzkxZDMxMGY4ZTQ6KCk9PnFtLF9fd2JnX2xlbmd0aF9hNTU4N2Q2Y2Q3OWFiMTk3OigpPT5JZixfX3diZ19sZW5ndGhfY2FjZTJlMGIzZGRjMDUwMjooKT0+Qm0sX193YmdfbXNDcnlwdG9fYWJjYjEyOTVlNzY4ZDFmMjooKT0+aGYsX193YmdfbmV3MF9hZDc1ZGQzOGY5MjQyNGUyOigpPT5UbSxfX3diZ19uZXdfMDgyMzY2ODlmMGFmYjM1NzooKT0+S20sX193YmdfbmV3XzFiOTQxODBlZWI0OGYyYTI6KCk9PkptLF9fd2JnX25ld19jNzI4ZDY4YjhiMzQ0ODdlOigpPT5IbSxfX3diZ19uZXdfZDhhMDAwNzg4Mzg5YTMxZTooKT0+TWYsX193YmdfbmV3X2ZlYjY1Yjg2NWQ5ODBhZTI6KCk9Pm1tLF9fd2JnX25ld25vYXJnc19jY2RjYWUzMGZkMDAyMjYyOigpPT5SZixfX3diZ19uZXd3aXRoYnl0ZW9mZnNldGFuZGxlbmd0aF8yZGMwNGQ5OTA4OGIxNWUzOigpPT51ZixfX3diZ19uZXd3aXRobGVuZ3RoXzEzYjUzMTlhYjQyMmRjZjY6KCk9PmJmLF9fd2JnX25leHRfMTVkYTZhM2RmOTI5MDcyMDooKT0+dmYsX193YmdfbmV4dF8xOTg5YTIwNDQyNDAwYWFhOigpPT54ZixfX3diZ19ub2RlXzUyM2Q3YmQwM2VmNjlmYmE6KCk9PmZmLF9fd2JnX25vd180NTc5MzM1ZDM1ODE1OTRjOigpPT5nbSxfX3diZ19ub3dfOGVkMWE0NDU0ZTQwZWNkMTooKT0+Um0sX193YmdfcGFyc2VfM2YwY2I0ODk3NmNhNDEyMzooKT0+X20sX193YmdfcHJvY2Vzc181Yjc4NmU3MWQ0NjVhNTEzOigpPT5kZixfX3diZ19yYW5kb21GaWxsU3luY19hMGQ5OGFhMTFjODFmZTg5OigpPT5jZixfX3diZ19yZXF1aXJlXzI3ODRlNTkzYTQ2NzQ4Nzc6KCk9PmdmLF9fd2JnX3Jlc29sdmVfYTMyNTJiMjg2MGYwYTA5ZTooKT0+amYsX193Ymdfc2VsZl8zZmFkMDU2ZWRkZWQxMGJkOigpPT5fZixfX3diZ19zZXRUaW1lb3V0XzYzMWZlNjFmMzFmYTJmYWQ6KCk9PnltLF9fd2JnX3NldF8wYWM3OGEyYmMwN2RhMDNjOigpPT5HbSxfX3diZ19zZXRfMzM1NWI5ZjJkMzA5MmUzYjooKT0+V20sX193Ymdfc2V0Xzg0MWFjNTdjZmYzZDY3MmI6KCk9PlltLF9fd2JnX3NldF9kY2ZkNjEzYTM0MjBmOTA4OigpPT5TZixfX3diZ19zZXRfd2FzbTooKT0+a28sX193Ymdfc3RhdGljX2FjY2Vzc29yX1BFUkZPUk1BTkNFXzFhMzI1ODQ4ZWIzY2U2NWE6KCk9PkFtLF9fd2JnX3N0cmluZ2lmeV80MDM5Mjk3MzE1YTI1YjAwOigpPT52bSxfX3diZ19zdWJhcnJheV82Y2E1Y2ZhN2ZiYjlhYmJlOigpPT5vZixfX3diZ190aGVuXzFiYmM5ZWRhZmQ4NTliMDY6KCk9PnFmLF9fd2JnX3RoZW5fODllMWM1NTk1MzBiODVjZjooKT0+JGYsX193YmdfdmFsdWVPZl9mZjRiNjI2NDE4MDM0MzJhOigpPT5YbSxfX3diZ192YWx1ZV8wNTcwNzE0ZmY3ZDc1ZjM1OigpPT5FZixfX3diZ192ZXJzaW9uc19jMmFiODA2NTA1OTBiNmEyOigpPT5tZixfX3diZ193aW5kb3dfYTRmNDZjOThhNjFkNDA4OTooKT0+VGYsX193YmluZGdlbl9iaWdpbnRfZnJvbV9pNjQ6KCk9PkRtLF9fd2JpbmRnZW5fYmlnaW50X2Zyb21fdTY0OigpPT5WbSxfX3diaW5kZ2VuX2JpZ2ludF9nZXRfYXNfaTY0OigpPT5PbSxfX3diaW5kZ2VuX2Jvb2xlYW5fZ2V0OigpPT5TbSxfX3diaW5kZ2VuX2NiX2Ryb3A6KCk9PkxmLF9fd2JpbmRnZW5fY2xvc3VyZV93cmFwcGVyNzA4MzooKT0+VmYsX193YmluZGdlbl9kZWJ1Z19zdHJpbmc6KCk9PkRmLF9fd2JpbmRnZW5fZXJyb3JfbmV3OigpPT5ibSxfX3diaW5kZ2VuX2luOigpPT5qbSxfX3diaW5kZ2VuX2lzX2JpZ2ludDooKT0+SW0sX193YmluZGdlbl9pc19mdW5jdGlvbjooKT0+eWYsX193YmluZGdlbl9pc19vYmplY3Q6KCk9PiRtLF9fd2JpbmRnZW5faXNfc3RyaW5nOigpPT56bSxfX3diaW5kZ2VuX2lzX3VuZGVmaW5lZDooKT0+UG0sX193YmluZGdlbl9qc3ZhbF9lcTooKT0+Tm0sX193YmluZGdlbl9qc3ZhbF9sb29zZV9lcTooKT0+TW0sX193YmluZGdlbl9tZW1vcnk6KCk9PmFmLF9fd2JpbmRnZW5fbnVtYmVyX2dldDooKT0+a20sX193YmluZGdlbl9udW1iZXJfbmV3OigpPT5RbSxfX3diaW5kZ2VuX29iamVjdF9jbG9uZV9yZWY6KCk9PkVtLF9fd2JpbmRnZW5fb2JqZWN0X2Ryb3BfcmVmOigpPT5mbSxfX3diaW5kZ2VuX3N0cmluZ19nZXQ6KCk9PndtLF9fd2JpbmRnZW5fc3RyaW5nX25ldzooKT0+eG0sX193YmluZGdlbl90aHJvdzooKT0+TmYsZGVidWdfcGFuaWM6KCk9PnBtLGdldEJ1aWxkVGltZUluZm86KCk9PmNtfSk7dmFyIGI7ZnVuY3Rpb24ga28oZSl7Yj1lfXZhciBLZT1uZXcgQXJyYXkoMTI4KS5maWxsKHZvaWQgMCk7S2UucHVzaCh2b2lkIDAsbnVsbCwhMCwhMSk7ZnVuY3Rpb24gaChlKXtyZXR1cm4gS2VbZV19dmFyIExyPUtlLmxlbmd0aDtmdW5jdGlvbiBybShlKXtlPDEzMnx8KEtlW2VdPUxyLExyPWUpfWZ1bmN0aW9uIFgoZSl7bGV0IHQ9aChlKTtyZXR1cm4gcm0oZSksdH12YXIgbm09dHlwZW9mIFRleHREZWNvZGVyPlwidVwiPygwLG1vZHVsZS5yZXF1aXJlKShcInV0aWxcIikuVGV4dERlY29kZXI6VGV4dERlY29kZXIsTWw9bmV3IG5tKFwidXRmLThcIix7aWdub3JlQk9NOiEwLGZhdGFsOiEwfSk7TWwuZGVjb2RlKCk7dmFyIEtuPW51bGw7ZnVuY3Rpb24gSG4oKXtyZXR1cm4oS249PT1udWxsfHxLbi5ieXRlTGVuZ3RoPT09MCkmJihLbj1uZXcgVWludDhBcnJheShiLm1lbW9yeS5idWZmZXIpKSxLbn1mdW5jdGlvbiBxcihlLHQpe3JldHVybiBlPWU+Pj4wLE1sLmRlY29kZShIbigpLnN1YmFycmF5KGUsZSt0KSl9ZnVuY3Rpb24gdyhlKXtMcj09PUtlLmxlbmd0aCYmS2UucHVzaChLZS5sZW5ndGgrMSk7bGV0IHQ9THI7cmV0dXJuIExyPUtlW3RdLEtlW3RdPWUsdH12YXIgWj0wLGltPXR5cGVvZiBUZXh0RW5jb2Rlcj5cInVcIj8oMCxtb2R1bGUucmVxdWlyZSkoXCJ1dGlsXCIpLlRleHRFbmNvZGVyOlRleHRFbmNvZGVyLFduPW5ldyBpbShcInV0Zi04XCIpLG9tPXR5cGVvZiBXbi5lbmNvZGVJbnRvPT1cImZ1bmN0aW9uXCI/ZnVuY3Rpb24oZSx0KXtyZXR1cm4gV24uZW5jb2RlSW50byhlLHQpfTpmdW5jdGlvbihlLHQpe2xldCByPVduLmVuY29kZShlKTtyZXR1cm4gdC5zZXQocikse3JlYWQ6ZS5sZW5ndGgsd3JpdHRlbjpyLmxlbmd0aH19O2Z1bmN0aW9uIGxlKGUsdCxyKXtpZihyPT09dm9pZCAwKXtsZXQgYT1Xbi5lbmNvZGUoZSksbD10KGEubGVuZ3RoLDEpPj4+MDtyZXR1cm4gSG4oKS5zdWJhcnJheShsLGwrYS5sZW5ndGgpLnNldChhKSxaPWEubGVuZ3RoLGx9bGV0IG49ZS5sZW5ndGgsaT10KG4sMSk+Pj4wLG89SG4oKSxzPTA7Zm9yKDtzPG47cysrKXtsZXQgYT1lLmNoYXJDb2RlQXQocyk7aWYoYT4xMjcpYnJlYWs7b1tpK3NdPWF9aWYocyE9PW4pe3MhPT0wJiYoZT1lLnNsaWNlKHMpKSxpPXIoaSxuLG49cytlLmxlbmd0aCozLDEpPj4+MDtsZXQgYT1IbigpLnN1YmFycmF5KGkrcyxpK24pLGw9b20oZSxhKTtzKz1sLndyaXR0ZW59cmV0dXJuIFo9cyxpfWZ1bmN0aW9uIFFlKGUpe3JldHVybiBlPT1udWxsfXZhciBRbj1udWxsO2Z1bmN0aW9uIHhlKCl7cmV0dXJuKFFuPT09bnVsbHx8UW4uYnl0ZUxlbmd0aD09PTApJiYoUW49bmV3IEludDMyQXJyYXkoYi5tZW1vcnkuYnVmZmVyKSksUW59dmFyIEduPW51bGw7ZnVuY3Rpb24gc20oKXtyZXR1cm4oR249PT1udWxsfHxHbi5ieXRlTGVuZ3RoPT09MCkmJihHbj1uZXcgRmxvYXQ2NEFycmF5KGIubWVtb3J5LmJ1ZmZlcikpLEdufXZhciBKbj1udWxsO2Z1bmN0aW9uIGFtKCl7cmV0dXJuKEpuPT09bnVsbHx8Sm4uYnl0ZUxlbmd0aD09PTApJiYoSm49bmV3IEJpZ0ludDY0QXJyYXkoYi5tZW1vcnkuYnVmZmVyKSksSm59ZnVuY3Rpb24gQW8oZSl7bGV0IHQ9dHlwZW9mIGU7aWYodD09XCJudW1iZXJcInx8dD09XCJib29sZWFuXCJ8fGU9PW51bGwpcmV0dXJuYCR7ZX1gO2lmKHQ9PVwic3RyaW5nXCIpcmV0dXJuYFwiJHtlfVwiYDtpZih0PT1cInN5bWJvbFwiKXtsZXQgaT1lLmRlc2NyaXB0aW9uO3JldHVybiBpPT1udWxsP1wiU3ltYm9sXCI6YFN5bWJvbCgke2l9KWB9aWYodD09XCJmdW5jdGlvblwiKXtsZXQgaT1lLm5hbWU7cmV0dXJuIHR5cGVvZiBpPT1cInN0cmluZ1wiJiZpLmxlbmd0aD4wP2BGdW5jdGlvbigke2l9KWA6XCJGdW5jdGlvblwifWlmKEFycmF5LmlzQXJyYXkoZSkpe2xldCBpPWUubGVuZ3RoLG89XCJbXCI7aT4wJiYobys9QW8oZVswXSkpO2ZvcihsZXQgcz0xO3M8aTtzKyspbys9XCIsIFwiK0FvKGVbc10pO3JldHVybiBvKz1cIl1cIixvfWxldCByPS9cXFtvYmplY3QgKFteXFxdXSspXFxdLy5leGVjKHRvU3RyaW5nLmNhbGwoZSkpLG47aWYoci5sZW5ndGg+MSluPXJbMV07ZWxzZSByZXR1cm4gdG9TdHJpbmcuY2FsbChlKTtpZihuPT1cIk9iamVjdFwiKXRyeXtyZXR1cm5cIk9iamVjdChcIitKU09OLnN0cmluZ2lmeShlKStcIilcIn1jYXRjaHtyZXR1cm5cIk9iamVjdFwifXJldHVybiBlIGluc3RhbmNlb2YgRXJyb3I/YCR7ZS5uYW1lfTogJHtlLm1lc3NhZ2V9XG4ke2Uuc3RhY2t9YDpufWZ1bmN0aW9uIGxtKGUsdCxyLG4pe2xldCBpPXthOmUsYjp0LGNudDoxLGR0b3I6cn0sbz0oLi4ucyk9PntpLmNudCsrO2xldCBhPWkuYTtpLmE9MDt0cnl7cmV0dXJuIG4oYSxpLmIsLi4ucyl9ZmluYWxseXstLWkuY250PT09MD9iLl9fd2JpbmRnZW5fZXhwb3J0XzIuZ2V0KGkuZHRvcikoYSxpLmIpOmkuYT1hfX07cmV0dXJuIG8ub3JpZ2luYWw9aSxvfWZ1bmN0aW9uIHVtKGUsdCxyKXtiLndhc21fYmluZGdlbl9fY29udmVydF9fY2xvc3VyZXNfX2ludm9rZTFfbXV0X19oZmJkYTY0ZTg1MGY2MmI5YihlLHQsdyhyKSl9ZnVuY3Rpb24gY20oKXtsZXQgZT1iLmdldEJ1aWxkVGltZUluZm8oKTtyZXR1cm4gWChlKX1mdW5jdGlvbiBwbShlKXt0cnl7bGV0IG89Yi5fX3diaW5kZ2VuX2FkZF90b19zdGFja19wb2ludGVyKC0xNik7dmFyIHQ9UWUoZSk/MDpsZShlLGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLHI9WjtiLmRlYnVnX3BhbmljKG8sdCxyKTt2YXIgbj14ZSgpW28vNCswXSxpPXhlKClbby80KzFdO2lmKGkpdGhyb3cgWChuKX1maW5hbGx5e2IuX193YmluZGdlbl9hZGRfdG9fc3RhY2tfcG9pbnRlcigxNil9fWZ1bmN0aW9uIHllKGUsdCl7dHJ5e3JldHVybiBlLmFwcGx5KHRoaXMsdCl9Y2F0Y2gocil7Yi5fX3diaW5kZ2VuX2V4bl9zdG9yZSh3KHIpKX19ZnVuY3Rpb24gZG0oZSx0LHIsbil7Yi53YXNtX2JpbmRnZW5fX2NvbnZlcnRfX2Nsb3N1cmVzX19pbnZva2UyX211dF9faDJmOGMyMjE0NTk1Y2Q5OTIoZSx0LHcociksdyhuKSl9dmFyIFJvPWNsYXNze19fZGVzdHJveV9pbnRvX3Jhdygpe2xldCB0PXRoaXMuX193YmdfcHRyO3JldHVybiB0aGlzLl9fd2JnX3B0cj0wLHR9ZnJlZSgpe2xldCB0PXRoaXMuX19kZXN0cm95X2ludG9fcmF3KCk7Yi5fX3diZ19jb21tb25wcm94eV9mcmVlKHQpfX0sTW89Y2xhc3N7X19kZXN0cm95X2ludG9fcmF3KCl7bGV0IHQ9dGhpcy5fX3diZ19wdHI7cmV0dXJuIHRoaXMuX193YmdfcHRyPTAsdH1mcmVlKCl7bGV0IHQ9dGhpcy5fX2Rlc3Ryb3lfaW50b19yYXcoKTtiLl9fd2JnX2RyaXZlcnByb3h5X2ZyZWUodCl9fSxTbz1jbGFzc3tfX2Rlc3Ryb3lfaW50b19yYXcoKXtsZXQgdD10aGlzLl9fd2JnX3B0cjtyZXR1cm4gdGhpcy5fX3diZ19wdHI9MCx0fWZyZWUoKXtsZXQgdD10aGlzLl9fZGVzdHJveV9pbnRvX3JhdygpO2IuX193YmdfanNiYXNlcXVlcnlhYmxlX2ZyZWUodCl9Z2V0IHByb3ZpZGVyKCl7bGV0IHQ9Yi5fX3diZ19nZXRfanNiYXNlcXVlcnlhYmxlX3Byb3ZpZGVyKHRoaXMuX193YmdfcHRyKTtyZXR1cm4gWCh0KX1zZXQgcHJvdmlkZXIodCl7Yi5fX3diZ19zZXRfanNiYXNlcXVlcnlhYmxlX3Byb3ZpZGVyKHRoaXMuX193YmdfcHRyLHcodCkpfX0sJHI9Y2xhc3N7X19kZXN0cm95X2ludG9fcmF3KCl7bGV0IHQ9dGhpcy5fX3diZ19wdHI7cmV0dXJuIHRoaXMuX193YmdfcHRyPTAsdH1mcmVlKCl7bGV0IHQ9dGhpcy5fX2Rlc3Ryb3lfaW50b19yYXcoKTtiLl9fd2JnX3F1ZXJ5ZW5naW5lX2ZyZWUodCl9Y29uc3RydWN0b3IodCxyLG4pe3RyeXtsZXQgYT1iLl9fd2JpbmRnZW5fYWRkX3RvX3N0YWNrX3BvaW50ZXIoLTE2KTtiLnF1ZXJ5ZW5naW5lX25ldyhhLHcodCksdyhyKSxRZShuKT8wOncobikpO3ZhciBpPXhlKClbYS80KzBdLG89eGUoKVthLzQrMV0scz14ZSgpW2EvNCsyXTtpZihzKXRocm93IFgobyk7cmV0dXJuIHRoaXMuX193YmdfcHRyPWk+Pj4wLHRoaXN9ZmluYWxseXtiLl9fd2JpbmRnZW5fYWRkX3RvX3N0YWNrX3BvaW50ZXIoMTYpfX1jb25uZWN0KHQpe2xldCByPWxlKHQsYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYyksbj1aLGk9Yi5xdWVyeWVuZ2luZV9jb25uZWN0KHRoaXMuX193YmdfcHRyLHIsbik7cmV0dXJuIFgoaSl9ZGlzY29ubmVjdCh0KXtsZXQgcj1sZSh0LGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLG49WixpPWIucXVlcnllbmdpbmVfZGlzY29ubmVjdCh0aGlzLl9fd2JnX3B0cixyLG4pO3JldHVybiBYKGkpfXF1ZXJ5KHQscixuKXtsZXQgaT1sZSh0LGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLG89WixzPWxlKHIsYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYyksYT1aO3ZhciBsPVFlKG4pPzA6bGUobixiLl9fd2JpbmRnZW5fbWFsbG9jLGIuX193YmluZGdlbl9yZWFsbG9jKSx1PVo7bGV0IGM9Yi5xdWVyeWVuZ2luZV9xdWVyeSh0aGlzLl9fd2JnX3B0cixpLG8scyxhLGwsdSk7cmV0dXJuIFgoYyl9c3RhcnRUcmFuc2FjdGlvbih0LHIpe2xldCBuPWxlKHQsYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYyksaT1aLG89bGUocixiLl9fd2JpbmRnZW5fbWFsbG9jLGIuX193YmluZGdlbl9yZWFsbG9jKSxzPVosYT1iLnF1ZXJ5ZW5naW5lX3N0YXJ0VHJhbnNhY3Rpb24odGhpcy5fX3diZ19wdHIsbixpLG8scyk7cmV0dXJuIFgoYSl9Y29tbWl0VHJhbnNhY3Rpb24odCxyKXtsZXQgbj1sZSh0LGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLGk9WixvPWxlKHIsYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYykscz1aLGE9Yi5xdWVyeWVuZ2luZV9jb21taXRUcmFuc2FjdGlvbih0aGlzLl9fd2JnX3B0cixuLGksbyxzKTtyZXR1cm4gWChhKX1yb2xsYmFja1RyYW5zYWN0aW9uKHQscil7bGV0IG49bGUodCxiLl9fd2JpbmRnZW5fbWFsbG9jLGIuX193YmluZGdlbl9yZWFsbG9jKSxpPVosbz1sZShyLGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLHM9WixhPWIucXVlcnllbmdpbmVfcm9sbGJhY2tUcmFuc2FjdGlvbih0aGlzLl9fd2JnX3B0cixuLGksbyxzKTtyZXR1cm4gWChhKX1tZXRyaWNzKHQpe2xldCByPWxlKHQsYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYyksbj1aLGk9Yi5xdWVyeWVuZ2luZV9tZXRyaWNzKHRoaXMuX193YmdfcHRyLHIsbik7cmV0dXJuIFgoaSl9fSxJbz1jbGFzc3tfX2Rlc3Ryb3lfaW50b19yYXcoKXtsZXQgdD10aGlzLl9fd2JnX3B0cjtyZXR1cm4gdGhpcy5fX3diZ19wdHI9MCx0fWZyZWUoKXtsZXQgdD10aGlzLl9fZGVzdHJveV9pbnRvX3JhdygpO2IuX193YmdfdHJhbnNhY3Rpb25wcm94eV9mcmVlKHQpfX07ZnVuY3Rpb24gbW0oZSx0KXt0cnl7dmFyIHI9e2E6ZSxiOnR9LG49KG8scyk9PntsZXQgYT1yLmE7ci5hPTA7dHJ5e3JldHVybiBkbShhLHIuYixvLHMpfWZpbmFsbHl7ci5hPWF9fTtsZXQgaT1uZXcgUHJvbWlzZShuKTtyZXR1cm4gdyhpKX1maW5hbGx5e3IuYT1yLmI9MH19ZnVuY3Rpb24gZm0oZSl7WChlKX1mdW5jdGlvbiBnbSgpe3JldHVybiBEYXRlLm5vdygpfWZ1bmN0aW9uIHltKGUsdCl7cmV0dXJuIHNldFRpbWVvdXQoaChlKSx0Pj4+MCl9ZnVuY3Rpb24gaG0oKXtyZXR1cm4geWUoZnVuY3Rpb24oZSx0LHIpe2xldCBuPWgoZSkuY2FsbChoKHQpLGgocikpO3JldHVybiB3KG4pfSxhcmd1bWVudHMpfWZ1bmN0aW9uIGJtKGUsdCl7bGV0IHI9bmV3IEVycm9yKHFyKGUsdCkpO3JldHVybiB3KHIpfWZ1bmN0aW9uIHhtKGUsdCl7bGV0IHI9cXIoZSx0KTtyZXR1cm4gdyhyKX1mdW5jdGlvbiB3bShlLHQpe2xldCByPWgodCksbj10eXBlb2Ygcj09XCJzdHJpbmdcIj9yOnZvaWQgMDt2YXIgaT1RZShuKT8wOmxlKG4sYi5fX3diaW5kZ2VuX21hbGxvYyxiLl9fd2JpbmRnZW5fcmVhbGxvYyksbz1aO3hlKClbZS80KzFdPW8seGUoKVtlLzQrMF09aX1mdW5jdGlvbiBFbShlKXtsZXQgdD1oKGUpO3JldHVybiB3KHQpfWZ1bmN0aW9uIFBtKGUpe3JldHVybiBoKGUpPT09dm9pZCAwfWZ1bmN0aW9uIHZtKCl7cmV0dXJuIHllKGZ1bmN0aW9uKGUpe2xldCB0PUpTT04uc3RyaW5naWZ5KGgoZSkpO3JldHVybiB3KHQpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIF9tKCl7cmV0dXJuIHllKGZ1bmN0aW9uKGUsdCl7bGV0IHI9SlNPTi5wYXJzZShxcihlLHQpKTtyZXR1cm4gdyhyKX0sYXJndW1lbnRzKX1mdW5jdGlvbiBUbSgpe3JldHVybiB3KG5ldyBEYXRlKX1mdW5jdGlvbiBDbShlKXtyZXR1cm4gaChlKS5nZXRUaW1lKCl9ZnVuY3Rpb24gQW0oKXtsZXQgZT1wZXJmb3JtYW5jZTtyZXR1cm4gUWUoZSk/MDp3KGUpfWZ1bmN0aW9uIFJtKGUpe3JldHVybiBoKGUpLm5vdygpfWZ1bmN0aW9uIE1tKGUsdCl7cmV0dXJuIGgoZSk9PWgodCl9ZnVuY3Rpb24gU20oZSl7bGV0IHQ9aChlKTtyZXR1cm4gdHlwZW9mIHQ9PVwiYm9vbGVhblwiP3Q/MTowOjJ9ZnVuY3Rpb24gSW0oZSl7cmV0dXJuIHR5cGVvZiBoKGUpPT1cImJpZ2ludFwifWZ1bmN0aW9uIGttKGUsdCl7bGV0IHI9aCh0KSxuPXR5cGVvZiByPT1cIm51bWJlclwiP3I6dm9pZCAwO3NtKClbZS84KzFdPVFlKG4pPzA6bix4ZSgpW2UvNCswXT0hUWUobil9ZnVuY3Rpb24gRm0oZSl7cmV0dXJuIE51bWJlci5pc1NhZmVJbnRlZ2VyKGgoZSkpfWZ1bmN0aW9uIE9tKGUsdCl7bGV0IHI9aCh0KSxuPXR5cGVvZiByPT1cImJpZ2ludFwiP3I6dm9pZCAwO2FtKClbZS84KzFdPVFlKG4pP0JpZ0ludCgwKTpuLHhlKClbZS80KzBdPSFRZShuKX1mdW5jdGlvbiBEbShlKXtyZXR1cm4gdyhlKX1mdW5jdGlvbiBObShlLHQpe3JldHVybiBoKGUpPT09aCh0KX1mdW5jdGlvbiBMbShlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShoKGUpKX1mdW5jdGlvbiAkbShlKXtsZXQgdD1oKGUpO3JldHVybiB0eXBlb2YgdD09XCJvYmplY3RcIiYmdCE9PW51bGx9ZnVuY3Rpb24gcW0oKXtyZXR1cm4gdyhTeW1ib2wuaXRlcmF0b3IpfWZ1bmN0aW9uIGptKGUsdCl7cmV0dXJuIGgoZSlpbiBoKHQpfWZ1bmN0aW9uIFZtKGUpe2xldCB0PUJpZ0ludC5hc1VpbnROKDY0LGUpO3JldHVybiB3KHQpfWZ1bmN0aW9uIEJtKGUpe3JldHVybiBoKGUpLmxlbmd0aH1mdW5jdGlvbiBVbShlLHQpe2xldCByPWgoZSlbdD4+PjBdO3JldHVybiB3KHIpfWZ1bmN0aW9uIEttKCl7bGV0IGU9bmV3IEFycmF5O3JldHVybiB3KGUpfWZ1bmN0aW9uIFFtKGUpe3JldHVybiB3KGUpfWZ1bmN0aW9uIEdtKGUsdCxyKXtoKGUpW3Q+Pj4wXT1YKHIpfWZ1bmN0aW9uIEptKCl7cmV0dXJuIHcobmV3IE1hcCl9ZnVuY3Rpb24gSG0oKXtsZXQgZT1uZXcgT2JqZWN0O3JldHVybiB3KGUpfWZ1bmN0aW9uIFdtKGUsdCxyKXtsZXQgbj1oKGUpLnNldChoKHQpLGgocikpO3JldHVybiB3KG4pfWZ1bmN0aW9uIHptKGUpe3JldHVybiB0eXBlb2YgaChlKT09XCJzdHJpbmdcIn1mdW5jdGlvbiBZbShlLHQscil7aChlKVtYKHQpXT1YKHIpfWZ1bmN0aW9uIFptKGUpe2xldCB0O3RyeXt0PWgoZSlpbnN0YW5jZW9mIFByb21pc2V9Y2F0Y2h7dD0hMX1yZXR1cm4gdH1mdW5jdGlvbiBYbShlKXtyZXR1cm4gaChlKS52YWx1ZU9mKCl9ZnVuY3Rpb24gZWYoZSx0KXtsZXQgcj1oKGUpW2godCldO3JldHVybiB3KHIpfWZ1bmN0aW9uIHRmKGUsdCl7bGV0IHI9U3RyaW5nKGgodCkpLG49bGUocixiLl9fd2JpbmRnZW5fbWFsbG9jLGIuX193YmluZGdlbl9yZWFsbG9jKSxpPVo7eGUoKVtlLzQrMV09aSx4ZSgpW2UvNCswXT1ufWZ1bmN0aW9uIHJmKCl7cmV0dXJuIHllKGZ1bmN0aW9uKGUsdCl7bGV0IHI9UmVmbGVjdC5nZXQoaChlKSxoKHQpKTtyZXR1cm4gdyhyKX0sYXJndW1lbnRzKX1mdW5jdGlvbiBuZigpe3JldHVybiB5ZShmdW5jdGlvbihlLHQpe2xldCByPWgoZSlbWCh0KV07cmV0dXJuIHcocil9LGFyZ3VtZW50cyl9ZnVuY3Rpb24gb2YoZSx0LHIpe2xldCBuPWgoZSkuc3ViYXJyYXkodD4+PjAscj4+PjApO3JldHVybiB3KG4pfWZ1bmN0aW9uIHNmKCl7cmV0dXJuIHllKGZ1bmN0aW9uKGUsdCl7aChlKS5nZXRSYW5kb21WYWx1ZXMoaCh0KSl9LGFyZ3VtZW50cyl9ZnVuY3Rpb24gYWYoKXtsZXQgZT1iLm1lbW9yeTtyZXR1cm4gdyhlKX1mdW5jdGlvbiBsZihlKXtsZXQgdD1oKGUpLmJ1ZmZlcjtyZXR1cm4gdyh0KX1mdW5jdGlvbiB1ZihlLHQscil7bGV0IG49bmV3IFVpbnQ4QXJyYXkoaChlKSx0Pj4+MCxyPj4+MCk7cmV0dXJuIHcobil9ZnVuY3Rpb24gY2YoKXtyZXR1cm4geWUoZnVuY3Rpb24oZSx0KXtoKGUpLnJhbmRvbUZpbGxTeW5jKFgodCkpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIHBmKGUpe2xldCB0PWgoZSkuY3J5cHRvO3JldHVybiB3KHQpfWZ1bmN0aW9uIGRmKGUpe2xldCB0PWgoZSkucHJvY2VzcztyZXR1cm4gdyh0KX1mdW5jdGlvbiBtZihlKXtsZXQgdD1oKGUpLnZlcnNpb25zO3JldHVybiB3KHQpfWZ1bmN0aW9uIGZmKGUpe2xldCB0PWgoZSkubm9kZTtyZXR1cm4gdyh0KX1mdW5jdGlvbiBnZigpe3JldHVybiB5ZShmdW5jdGlvbigpe2xldCBlPW1vZHVsZS5yZXF1aXJlO3JldHVybiB3KGUpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIHlmKGUpe3JldHVybiB0eXBlb2YgaChlKT09XCJmdW5jdGlvblwifWZ1bmN0aW9uIGhmKGUpe2xldCB0PWgoZSkubXNDcnlwdG87cmV0dXJuIHcodCl9ZnVuY3Rpb24gYmYoZSl7bGV0IHQ9bmV3IFVpbnQ4QXJyYXkoZT4+PjApO3JldHVybiB3KHQpfWZ1bmN0aW9uIHhmKCl7cmV0dXJuIHllKGZ1bmN0aW9uKGUpe2xldCB0PWgoZSkubmV4dCgpO3JldHVybiB3KHQpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIHdmKGUpe3JldHVybiBoKGUpLmRvbmV9ZnVuY3Rpb24gRWYoZSl7bGV0IHQ9aChlKS52YWx1ZTtyZXR1cm4gdyh0KX1mdW5jdGlvbiBQZigpe3JldHVybiB5ZShmdW5jdGlvbihlLHQpe2xldCByPWgoZSkuY2FsbChoKHQpKTtyZXR1cm4gdyhyKX0sYXJndW1lbnRzKX1mdW5jdGlvbiB2ZihlKXtsZXQgdD1oKGUpLm5leHQ7cmV0dXJuIHcodCl9ZnVuY3Rpb24gX2YoKXtyZXR1cm4geWUoZnVuY3Rpb24oKXtsZXQgZT1zZWxmLnNlbGY7cmV0dXJuIHcoZSl9LGFyZ3VtZW50cyl9ZnVuY3Rpb24gVGYoKXtyZXR1cm4geWUoZnVuY3Rpb24oKXtsZXQgZT13aW5kb3cud2luZG93O3JldHVybiB3KGUpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIENmKCl7cmV0dXJuIHllKGZ1bmN0aW9uKCl7bGV0IGU9Z2xvYmFsVGhpcy5nbG9iYWxUaGlzO3JldHVybiB3KGUpfSxhcmd1bWVudHMpfWZ1bmN0aW9uIEFmKCl7cmV0dXJuIHllKGZ1bmN0aW9uKCl7bGV0IGU9Z2xvYmFsLmdsb2JhbDtyZXR1cm4gdyhlKX0sYXJndW1lbnRzKX1mdW5jdGlvbiBSZihlLHQpe2xldCByPW5ldyBGdW5jdGlvbihxcihlLHQpKTtyZXR1cm4gdyhyKX1mdW5jdGlvbiBNZihlKXtsZXQgdD1uZXcgVWludDhBcnJheShoKGUpKTtyZXR1cm4gdyh0KX1mdW5jdGlvbiBTZihlLHQscil7aChlKS5zZXQoaCh0KSxyPj4+MCl9ZnVuY3Rpb24gSWYoZSl7cmV0dXJuIGgoZSkubGVuZ3RofWZ1bmN0aW9uIGtmKGUpe2xldCB0O3RyeXt0PWgoZSlpbnN0YW5jZW9mIFVpbnQ4QXJyYXl9Y2F0Y2h7dD0hMX1yZXR1cm4gdH1mdW5jdGlvbiBGZihlKXtsZXQgdDt0cnl7dD1oKGUpaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcn1jYXRjaHt0PSExfXJldHVybiB0fWZ1bmN0aW9uIE9mKGUpe2xldCB0PU9iamVjdC5lbnRyaWVzKGgoZSkpO3JldHVybiB3KHQpfWZ1bmN0aW9uIERmKGUsdCl7bGV0IHI9QW8oaCh0KSksbj1sZShyLGIuX193YmluZGdlbl9tYWxsb2MsYi5fX3diaW5kZ2VuX3JlYWxsb2MpLGk9Wjt4ZSgpW2UvNCsxXT1pLHhlKClbZS80KzBdPW59ZnVuY3Rpb24gTmYoZSx0KXt0aHJvdyBuZXcgRXJyb3IocXIoZSx0KSl9ZnVuY3Rpb24gTGYoZSl7bGV0IHQ9WChlKS5vcmlnaW5hbDtyZXR1cm4gdC5jbnQtLT09MT8odC5hPTAsITApOiExfWZ1bmN0aW9uICRmKGUsdCl7bGV0IHI9aChlKS50aGVuKGgodCkpO3JldHVybiB3KHIpfWZ1bmN0aW9uIHFmKGUsdCxyKXtsZXQgbj1oKGUpLnRoZW4oaCh0KSxoKHIpKTtyZXR1cm4gdyhuKX1mdW5jdGlvbiBqZihlKXtsZXQgdD1Qcm9taXNlLnJlc29sdmUoaChlKSk7cmV0dXJuIHcodCl9ZnVuY3Rpb24gVmYoZSx0LHIpe2xldCBuPWxtKGUsdCwzNDIsdW0pO3JldHVybiB3KG4pfXZhciBPbyxTbD17YXN5bmMgbG9hZExpYnJhcnkoZSl7bGV0e2dlbmVyYXRvcjp0LGNsaWVudFZlcnNpb246cixhZGFwdGVyOm59PWU7aWYodD8ucHJldmlld0ZlYXR1cmVzLmluY2x1ZGVzKFwiZHJpdmVyQWRhcHRlcnNcIik9PT12b2lkIDApdGhyb3cgbmV3IGsoJ1RoZSBgZHJpdmVyQWRhcHRlcnNgIHByZXZpZXcgZmVhdHVyZSBpcyByZXF1aXJlZCB3aXRoIGBlbmdpbmVUeXBlPVwid2FzbVwiYCcscik7aWYobj09PXZvaWQgMCl0aHJvdyBuZXcgaygnVGhlIGBhZGFwdGVyYCBvcHRpb24gZm9yIGBQcmlzbWFDbGllbnRgIGlzIHJlcXVpcmVkIHdpdGggYGVuZ2luZVR5cGU9XCJ3YXNtXCJgJyxyKTtpZihPbz09PXZvaWQgMCl7bGV0IGk9YXdhaXQgZS5nZXRRdWVyeUVuZ2luZVdhc21Nb2R1bGU/LigpO2lmKGk9PW51bGwpdGhyb3cgbmV3IGsoXCJUaGUgbG9hZGVkIHdhc20gbW9kdWxlIHdhcyB1bmV4cGVjdGVkbHkgYHVuZGVmaW5lZGAgb3IgYG51bGxgIG9uY2UgbG9hZGVkXCIscik7T289bmV3IFdlYkFzc2VtYmx5Lkluc3RhbmNlKGkse1wiLi9xdWVyeV9lbmdpbmVfYmcuanNcIjpGb30pLmV4cG9ydHMsa28oT28pfXJldHVybntkZWJ1Z1BhbmljKCl7cmV0dXJuIFByb21pc2UucmVqZWN0KFwie31cIil9LGRtbWYoKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFwie31cIil9LHZlcnNpb24oKXtyZXR1cm57Y29tbWl0OlwidW5rbm93blwiLHZlcnNpb246XCJ1bmtub3duXCJ9fSxRdWVyeUVuZ2luZTokcn19fTt2YXIgQmY9XCJQMjAzNlwiLHFlPSQoXCJwcmlzbWE6Y2xpZW50OmxpYnJhcnlFbmdpbmVcIik7ZnVuY3Rpb24gVWYoZSl7cmV0dXJuIGUuaXRlbV90eXBlPT09XCJxdWVyeVwiJiZcInF1ZXJ5XCJpbiBlfWZ1bmN0aW9uIEtmKGUpe3JldHVyblwibGV2ZWxcImluIGU/ZS5sZXZlbD09PVwiZXJyb3JcIiYmZS5tZXNzYWdlPT09XCJQQU5JQ1wiOiExfXZhciBJbD1bLi4uTWksXCJuYXRpdmVcIl0sa2w9MCx6dD1jbGFzcyBleHRlbmRzIEd0e2NvbnN0cnVjdG9yKHIsbil7c3VwZXIoKTtndChyLmdlbmVyYXRvcik9PT1cIndhc21cIj90aGlzLmxpYnJhcnlMb2FkZXI9bj8/U2w6dGhpcy5saWJyYXJ5TG9hZGVyPW4/P1JsLHRoaXMuY29uZmlnPXIsdGhpcy5saWJyYXJ5U3RhcnRlZD0hMSx0aGlzLmxvZ1F1ZXJpZXM9ci5sb2dRdWVyaWVzPz8hMSx0aGlzLmxvZ0xldmVsPXIubG9nTGV2ZWw/P1wiZXJyb3JcIix0aGlzLmxvZ0VtaXR0ZXI9ci5sb2dFbWl0dGVyLHRoaXMuZGF0YW1vZGVsPWF0b2Ioci5pbmxpbmVTY2hlbWEpLHIuZW5hYmxlRGVidWdMb2dzJiYodGhpcy5sb2dMZXZlbD1cImRlYnVnXCIpO2xldCBvPU9iamVjdC5rZXlzKHIub3ZlcnJpZGVEYXRhc291cmNlcylbMF0scz1yLm92ZXJyaWRlRGF0YXNvdXJjZXNbb10/LnVybDtvIT09dm9pZCAwJiZzIT09dm9pZCAwJiYodGhpcy5kYXRhc291cmNlT3ZlcnJpZGVzPXtbb106c30pLHRoaXMubGlicmFyeUluc3RhbnRpYXRpb25Qcm9taXNlPXRoaXMuaW5zdGFudGlhdGVMaWJyYXJ5KCksdGhpcy5jaGVja0ZvclRvb01hbnlFbmdpbmVzKCl9Y2hlY2tGb3JUb29NYW55RW5naW5lcygpe2tsPT09MTAmJmNvbnNvbGUud2FybihgJHtSZShcIndhcm4ocHJpc21hLWNsaWVudClcIil9IFRoaXMgaXMgdGhlIDEwdGggaW5zdGFuY2Ugb2YgUHJpc21hIENsaWVudCBiZWluZyBzdGFydGVkLiBNYWtlIHN1cmUgdGhpcyBpcyBpbnRlbnRpb25hbC5gKX1hc3luYyB0cmFuc2FjdGlvbihyLG4saSl7YXdhaXQgdGhpcy5zdGFydCgpO2xldCBvPUpTT04uc3RyaW5naWZ5KG4pLHM7aWYocj09PVwic3RhcnRcIil7bGV0IGw9SlNPTi5zdHJpbmdpZnkoe21heF93YWl0Omk/Lm1heFdhaXQ/PzJlMyx0aW1lb3V0Omk/LnRpbWVvdXQ/PzVlMyxpc29sYXRpb25fbGV2ZWw6aT8uaXNvbGF0aW9uTGV2ZWx9KTtzPWF3YWl0IHRoaXMuZW5naW5lPy5zdGFydFRyYW5zYWN0aW9uKGwsbyl9ZWxzZSByPT09XCJjb21taXRcIj9zPWF3YWl0IHRoaXMuZW5naW5lPy5jb21taXRUcmFuc2FjdGlvbihpLmlkLG8pOnI9PT1cInJvbGxiYWNrXCImJihzPWF3YWl0IHRoaXMuZW5naW5lPy5yb2xsYmFja1RyYW5zYWN0aW9uKGkuaWQsbykpO2xldCBhPXRoaXMucGFyc2VFbmdpbmVSZXNwb25zZShzKTtpZihRZihhKSl7bGV0IGw9dGhpcy5nZXRFeHRlcm5hbEFkYXB0ZXJFcnJvcihhKTt0aHJvdyBsP2wuZXJyb3I6bmV3IEgoYS5tZXNzYWdlLHtjb2RlOmEuZXJyb3JfY29kZSxjbGllbnRWZXJzaW9uOnRoaXMuY29uZmlnLmNsaWVudFZlcnNpb24sbWV0YTphLm1ldGF9KX1yZXR1cm4gYX1hc3luYyBpbnN0YW50aWF0ZUxpYnJhcnkoKXtpZihxZShcImludGVybmFsU2V0dXBcIiksdGhpcy5saWJyYXJ5SW5zdGFudGlhdGlvblByb21pc2UpcmV0dXJuIHRoaXMubGlicmFyeUluc3RhbnRpYXRpb25Qcm9taXNlO3dpKCksdGhpcy5wbGF0Zm9ybT1hd2FpdCB0aGlzLmdldFBsYXRmb3JtKCksYXdhaXQgdGhpcy5sb2FkRW5naW5lKCksdGhpcy52ZXJzaW9uKCl9YXN5bmMgZ2V0UGxhdGZvcm0oKXt7aWYodGhpcy5wbGF0Zm9ybSlyZXR1cm4gdGhpcy5wbGF0Zm9ybTtsZXQgcj1hd2FpdCBmdCgpO2lmKCFJbC5pbmNsdWRlcyhyKSl0aHJvdyBuZXcgayhgVW5rbm93biAke3ZlKFwiUFJJU01BX1FVRVJZX0VOR0lORV9MSUJSQVJZXCIpfSAke3ZlKHBlKHIpKX0uIFBvc3NpYmxlIGJpbmFyeVRhcmdldHM6ICR7cHQoSWwuam9pbihcIiwgXCIpKX0gb3IgYSBwYXRoIHRvIHRoZSBxdWVyeSBlbmdpbmUgbGlicmFyeS5cbllvdSBtYXkgaGF2ZSB0byBydW4gJHtwdChcInByaXNtYSBnZW5lcmF0ZVwiKX0gZm9yIHlvdXIgY2hhbmdlcyB0byB0YWtlIGVmZmVjdC5gLHRoaXMuY29uZmlnLmNsaWVudFZlcnNpb24pO3JldHVybiByfX1wYXJzZUVuZ2luZVJlc3BvbnNlKHIpe2lmKCFyKXRocm93IG5ldyBXKFwiUmVzcG9uc2UgZnJvbSB0aGUgRW5naW5lIHdhcyBlbXB0eVwiLHtjbGllbnRWZXJzaW9uOnRoaXMuY29uZmlnLmNsaWVudFZlcnNpb259KTt0cnl7cmV0dXJuIEpTT04ucGFyc2Uocil9Y2F0Y2h7dGhyb3cgbmV3IFcoXCJVbmFibGUgdG8gSlNPTi5wYXJzZSByZXNwb25zZSBmcm9tIGVuZ2luZVwiLHtjbGllbnRWZXJzaW9uOnRoaXMuY29uZmlnLmNsaWVudFZlcnNpb259KX19YXN5bmMgbG9hZEVuZ2luZSgpe2lmKCF0aGlzLmVuZ2luZSl7dGhpcy5RdWVyeUVuZ2luZUNvbnN0cnVjdG9yfHwodGhpcy5saWJyYXJ5PWF3YWl0IHRoaXMubGlicmFyeUxvYWRlci5sb2FkTGlicmFyeSh0aGlzLmNvbmZpZyksdGhpcy5RdWVyeUVuZ2luZUNvbnN0cnVjdG9yPXRoaXMubGlicmFyeS5RdWVyeUVuZ2luZSk7dHJ5e2xldCByPW5ldyBXZWFrUmVmKHRoaXMpLHthZGFwdGVyOm59PXRoaXMuY29uZmlnO24mJnFlKFwiVXNpbmcgZHJpdmVyIGFkYXB0ZXI6ICVPXCIsbiksdGhpcy5lbmdpbmU9bmV3IHRoaXMuUXVlcnlFbmdpbmVDb25zdHJ1Y3Rvcih7ZGF0YW1vZGVsOnRoaXMuZGF0YW1vZGVsLGVudjpwcm9jZXNzLmVudixsb2dRdWVyaWVzOnRoaXMuY29uZmlnLmxvZ1F1ZXJpZXM/PyExLGlnbm9yZUVudlZhckVycm9yczohMCxkYXRhc291cmNlT3ZlcnJpZGVzOnRoaXMuZGF0YXNvdXJjZU92ZXJyaWRlcz8/e30sbG9nTGV2ZWw6dGhpcy5sb2dMZXZlbCxjb25maWdEaXI6dGhpcy5jb25maWcuY3dkLGVuZ2luZVByb3RvY29sOlwianNvblwifSxpPT57ci5kZXJlZigpPy5sb2dnZXIoaSl9LG4pLGtsKyt9Y2F0Y2gocil7bGV0IG49cixpPXRoaXMucGFyc2VJbml0RXJyb3Iobi5tZXNzYWdlKTt0aHJvdyB0eXBlb2YgaT09XCJzdHJpbmdcIj9uOm5ldyBrKGkubWVzc2FnZSx0aGlzLmNvbmZpZy5jbGllbnRWZXJzaW9uLGkuZXJyb3JfY29kZSl9fX1sb2dnZXIocil7bGV0IG49dGhpcy5wYXJzZUVuZ2luZVJlc3BvbnNlKHIpO2lmKG4pe2lmKFwic3BhblwiaW4gbil7dGhpcy5jb25maWcudHJhY2luZ0hlbHBlci5jcmVhdGVFbmdpbmVTcGFuKG4pO3JldHVybn1uLmxldmVsPW4/LmxldmVsLnRvTG93ZXJDYXNlKCk/P1widW5rbm93blwiLFVmKG4pP3RoaXMubG9nRW1pdHRlci5lbWl0KFwicXVlcnlcIix7dGltZXN0YW1wOm5ldyBEYXRlLHF1ZXJ5Om4ucXVlcnkscGFyYW1zOm4ucGFyYW1zLGR1cmF0aW9uOk51bWJlcihuLmR1cmF0aW9uX21zKSx0YXJnZXQ6bi5tb2R1bGVfcGF0aH0pOktmKG4pP3RoaXMubG9nZ2VyUnVzdFBhbmljPW5ldyBiZSh0aGlzLmdldEVycm9yTWVzc2FnZVdpdGhMaW5rKGAke24ubWVzc2FnZX06ICR7bi5yZWFzb259IGluICR7bi5maWxlfToke24ubGluZX06JHtuLmNvbHVtbn1gKSx0aGlzLmNvbmZpZy5jbGllbnRWZXJzaW9uKTp0aGlzLmxvZ0VtaXR0ZXIuZW1pdChuLmxldmVsLHt0aW1lc3RhbXA6bmV3IERhdGUsbWVzc2FnZTpuLm1lc3NhZ2UsdGFyZ2V0Om4ubW9kdWxlX3BhdGh9KX19Z2V0RXJyb3JNZXNzYWdlV2l0aExpbmsocil7cmV0dXJuIGJsKHtwbGF0Zm9ybTp0aGlzLnBsYXRmb3JtLHRpdGxlOnIsdmVyc2lvbjp0aGlzLmNvbmZpZy5jbGllbnRWZXJzaW9uLGVuZ2luZVZlcnNpb246dGhpcy52ZXJzaW9uSW5mbz8uY29tbWl0LGRhdGFiYXNlOnRoaXMuY29uZmlnLmFjdGl2ZVByb3ZpZGVyLHF1ZXJ5OnRoaXMubGFzdFF1ZXJ5fSl9cGFyc2VJbml0RXJyb3Iocil7dHJ5e3JldHVybiBKU09OLnBhcnNlKHIpfWNhdGNoe31yZXR1cm4gcn1wYXJzZVJlcXVlc3RFcnJvcihyKXt0cnl7cmV0dXJuIEpTT04ucGFyc2Uocil9Y2F0Y2h7fXJldHVybiByfW9uKHIsbil7aWYocj09PVwiYmVmb3JlRXhpdFwiKXRocm93IG5ldyBFcnJvcignXCJiZWZvcmVFeGl0XCIgaG9vayBpcyBub3QgYXBwbGljYWJsZSB0byB0aGUgbGlicmFyeSBlbmdpbmUgc2luY2UgUHJpc21hIDUuMC4wLCBpdCBpcyBvbmx5IHJlbGV2YW50IGFuZCBpbXBsZW1lbnRlZCBmb3IgdGhlIGJpbmFyeSBlbmdpbmUuIFBsZWFzZSBhZGQgeW91ciBldmVudCBsaXN0ZW5lciB0byB0aGUgYHByb2Nlc3NgIG9iamVjdCBkaXJlY3RseSBpbnN0ZWFkLicpO3RoaXMubG9nRW1pdHRlci5vbihyLG4pfWFzeW5jIHN0YXJ0KCl7aWYoYXdhaXQgdGhpcy5saWJyYXJ5SW5zdGFudGlhdGlvblByb21pc2UsYXdhaXQgdGhpcy5saWJyYXJ5U3RvcHBpbmdQcm9taXNlLHRoaXMubGlicmFyeVN0YXJ0aW5nUHJvbWlzZSlyZXR1cm4gcWUoYGxpYnJhcnkgYWxyZWFkeSBzdGFydGluZywgdGhpcy5saWJyYXJ5U3RhcnRlZDogJHt0aGlzLmxpYnJhcnlTdGFydGVkfWApLHRoaXMubGlicmFyeVN0YXJ0aW5nUHJvbWlzZTtpZih0aGlzLmxpYnJhcnlTdGFydGVkKXJldHVybjtsZXQgcj1hc3luYygpPT57cWUoXCJsaWJyYXJ5IHN0YXJ0aW5nXCIpO3RyeXtsZXQgbj17dHJhY2VwYXJlbnQ6dGhpcy5jb25maWcudHJhY2luZ0hlbHBlci5nZXRUcmFjZVBhcmVudCgpfTthd2FpdCB0aGlzLmVuZ2luZT8uY29ubmVjdChKU09OLnN0cmluZ2lmeShuKSksdGhpcy5saWJyYXJ5U3RhcnRlZD0hMCxxZShcImxpYnJhcnkgc3RhcnRlZFwiKX1jYXRjaChuKXtsZXQgaT10aGlzLnBhcnNlSW5pdEVycm9yKG4ubWVzc2FnZSk7dGhyb3cgdHlwZW9mIGk9PVwic3RyaW5nXCI/bjpuZXcgayhpLm1lc3NhZ2UsdGhpcy5jb25maWcuY2xpZW50VmVyc2lvbixpLmVycm9yX2NvZGUpfWZpbmFsbHl7dGhpcy5saWJyYXJ5U3RhcnRpbmdQcm9taXNlPXZvaWQgMH19O3JldHVybiB0aGlzLmxpYnJhcnlTdGFydGluZ1Byb21pc2U9dGhpcy5jb25maWcudHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3BhbihcImNvbm5lY3RcIixyKSx0aGlzLmxpYnJhcnlTdGFydGluZ1Byb21pc2V9YXN5bmMgc3RvcCgpe2lmKGF3YWl0IHRoaXMubGlicmFyeVN0YXJ0aW5nUHJvbWlzZSxhd2FpdCB0aGlzLmV4ZWN1dGluZ1F1ZXJ5UHJvbWlzZSx0aGlzLmxpYnJhcnlTdG9wcGluZ1Byb21pc2UpcmV0dXJuIHFlKFwibGlicmFyeSBpcyBhbHJlYWR5IHN0b3BwaW5nXCIpLHRoaXMubGlicmFyeVN0b3BwaW5nUHJvbWlzZTtpZighdGhpcy5saWJyYXJ5U3RhcnRlZClyZXR1cm47bGV0IHI9YXN5bmMoKT0+e2F3YWl0IG5ldyBQcm9taXNlKGk9PnNldFRpbWVvdXQoaSw1KSkscWUoXCJsaWJyYXJ5IHN0b3BwaW5nXCIpO2xldCBuPXt0cmFjZXBhcmVudDp0aGlzLmNvbmZpZy50cmFjaW5nSGVscGVyLmdldFRyYWNlUGFyZW50KCl9O2F3YWl0IHRoaXMuZW5naW5lPy5kaXNjb25uZWN0KEpTT04uc3RyaW5naWZ5KG4pKSx0aGlzLmxpYnJhcnlTdGFydGVkPSExLHRoaXMubGlicmFyeVN0b3BwaW5nUHJvbWlzZT12b2lkIDAscWUoXCJsaWJyYXJ5IHN0b3BwZWRcIil9O3JldHVybiB0aGlzLmxpYnJhcnlTdG9wcGluZ1Byb21pc2U9dGhpcy5jb25maWcudHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3BhbihcImRpc2Nvbm5lY3RcIixyKSx0aGlzLmxpYnJhcnlTdG9wcGluZ1Byb21pc2V9dmVyc2lvbigpe3JldHVybiB0aGlzLnZlcnNpb25JbmZvPXRoaXMubGlicmFyeT8udmVyc2lvbigpLHRoaXMudmVyc2lvbkluZm8/LnZlcnNpb24/P1widW5rbm93blwifWRlYnVnUGFuaWMocil7cmV0dXJuIHRoaXMubGlicmFyeT8uZGVidWdQYW5pYyhyKX1hc3luYyByZXF1ZXN0KHIse3RyYWNlcGFyZW50Om4saW50ZXJhY3RpdmVUcmFuc2FjdGlvbjppfSl7cWUoYHNlbmRpbmcgcmVxdWVzdCwgdGhpcy5saWJyYXJ5U3RhcnRlZDogJHt0aGlzLmxpYnJhcnlTdGFydGVkfWApO2xldCBvPUpTT04uc3RyaW5naWZ5KHt0cmFjZXBhcmVudDpufSkscz1KU09OLnN0cmluZ2lmeShyKTt0cnl7YXdhaXQgdGhpcy5zdGFydCgpLHRoaXMuZXhlY3V0aW5nUXVlcnlQcm9taXNlPXRoaXMuZW5naW5lPy5xdWVyeShzLG8saT8uaWQpLHRoaXMubGFzdFF1ZXJ5PXM7bGV0IGE9dGhpcy5wYXJzZUVuZ2luZVJlc3BvbnNlKGF3YWl0IHRoaXMuZXhlY3V0aW5nUXVlcnlQcm9taXNlKTtpZihhLmVycm9ycyl0aHJvdyBhLmVycm9ycy5sZW5ndGg9PT0xP3RoaXMuYnVpbGRRdWVyeUVycm9yKGEuZXJyb3JzWzBdKTpuZXcgVyhKU09OLnN0cmluZ2lmeShhLmVycm9ycykse2NsaWVudFZlcnNpb246dGhpcy5jb25maWcuY2xpZW50VmVyc2lvbn0pO2lmKHRoaXMubG9nZ2VyUnVzdFBhbmljKXRocm93IHRoaXMubG9nZ2VyUnVzdFBhbmljO3JldHVybntkYXRhOmEsZWxhcHNlZDowfX1jYXRjaChhKXtpZihhIGluc3RhbmNlb2Ygayl0aHJvdyBhO2lmKGEuY29kZT09PVwiR2VuZXJpY0ZhaWx1cmVcIiYmYS5tZXNzYWdlPy5zdGFydHNXaXRoKFwiUEFOSUM6XCIpKXRocm93IG5ldyBiZSh0aGlzLmdldEVycm9yTWVzc2FnZVdpdGhMaW5rKGEubWVzc2FnZSksdGhpcy5jb25maWcuY2xpZW50VmVyc2lvbik7bGV0IGw9dGhpcy5wYXJzZVJlcXVlc3RFcnJvcihhLm1lc3NhZ2UpO3Rocm93IHR5cGVvZiBsPT1cInN0cmluZ1wiP2E6bmV3IFcoYCR7bC5tZXNzYWdlfVxuJHtsLmJhY2t0cmFjZX1gLHtjbGllbnRWZXJzaW9uOnRoaXMuY29uZmlnLmNsaWVudFZlcnNpb259KX19YXN5bmMgcmVxdWVzdEJhdGNoKHIse3RyYW5zYWN0aW9uOm4sdHJhY2VwYXJlbnQ6aX0pe3FlKFwicmVxdWVzdEJhdGNoXCIpO2xldCBvPVZuKHIsbik7YXdhaXQgdGhpcy5zdGFydCgpLHRoaXMubGFzdFF1ZXJ5PUpTT04uc3RyaW5naWZ5KG8pLHRoaXMuZXhlY3V0aW5nUXVlcnlQcm9taXNlPXRoaXMuZW5naW5lLnF1ZXJ5KHRoaXMubGFzdFF1ZXJ5LEpTT04uc3RyaW5naWZ5KHt0cmFjZXBhcmVudDppfSksQ2wobikpO2xldCBzPWF3YWl0IHRoaXMuZXhlY3V0aW5nUXVlcnlQcm9taXNlLGE9dGhpcy5wYXJzZUVuZ2luZVJlc3BvbnNlKHMpO2lmKGEuZXJyb3JzKXRocm93IGEuZXJyb3JzLmxlbmd0aD09PTE/dGhpcy5idWlsZFF1ZXJ5RXJyb3IoYS5lcnJvcnNbMF0pOm5ldyBXKEpTT04uc3RyaW5naWZ5KGEuZXJyb3JzKSx7Y2xpZW50VmVyc2lvbjp0aGlzLmNvbmZpZy5jbGllbnRWZXJzaW9ufSk7bGV0e2JhdGNoUmVzdWx0OmwsZXJyb3JzOnV9PWE7aWYoQXJyYXkuaXNBcnJheShsKSlyZXR1cm4gbC5tYXAoYz0+Yy5lcnJvcnMmJmMuZXJyb3JzLmxlbmd0aD4wP3RoaXMubG9nZ2VyUnVzdFBhbmljPz90aGlzLmJ1aWxkUXVlcnlFcnJvcihjLmVycm9yc1swXSk6e2RhdGE6YyxlbGFwc2VkOjB9KTt0aHJvdyB1JiZ1Lmxlbmd0aD09PTE/bmV3IEVycm9yKHVbMF0uZXJyb3IpOm5ldyBFcnJvcihKU09OLnN0cmluZ2lmeShhKSl9YnVpbGRRdWVyeUVycm9yKHIpe2lmKHIudXNlcl9mYWNpbmdfZXJyb3IuaXNfcGFuaWMpcmV0dXJuIG5ldyBiZSh0aGlzLmdldEVycm9yTWVzc2FnZVdpdGhMaW5rKHIudXNlcl9mYWNpbmdfZXJyb3IubWVzc2FnZSksdGhpcy5jb25maWcuY2xpZW50VmVyc2lvbik7bGV0IG49dGhpcy5nZXRFeHRlcm5hbEFkYXB0ZXJFcnJvcihyLnVzZXJfZmFjaW5nX2Vycm9yKTtyZXR1cm4gbj9uLmVycm9yOlByKHIsdGhpcy5jb25maWcuY2xpZW50VmVyc2lvbil9Z2V0RXh0ZXJuYWxBZGFwdGVyRXJyb3Iocil7aWYoci5lcnJvcl9jb2RlPT09QmYmJnRoaXMuY29uZmlnLmFkYXB0ZXIpe2xldCBuPXIubWV0YT8uaWQ7cG4odHlwZW9mIG49PVwibnVtYmVyXCIsXCJNYWxmb3JtZWQgZXh0ZXJuYWwgSlMgZXJyb3IgcmVjZWl2ZWQgZnJvbSB0aGUgZW5naW5lXCIpO2xldCBpPXRoaXMuY29uZmlnLmFkYXB0ZXIuZXJyb3JSZWdpc3RyeS5jb25zdW1lRXJyb3Iobik7cmV0dXJuIHBuKGksXCJFeHRlcm5hbCBlcnJvciB3aXRoIHJlcG9ydGVkIGlkIHdhcyBub3QgcmVnaXN0ZXJlZFwiKSxpfX1hc3luYyBtZXRyaWNzKHIpe2F3YWl0IHRoaXMuc3RhcnQoKTtsZXQgbj1hd2FpdCB0aGlzLmVuZ2luZS5tZXRyaWNzKEpTT04uc3RyaW5naWZ5KHIpKTtyZXR1cm4gci5mb3JtYXQ9PT1cInByb21ldGhldXNcIj9uOnRoaXMucGFyc2VFbmdpbmVSZXNwb25zZShuKX19O2Z1bmN0aW9uIFFmKGUpe3JldHVybiB0eXBlb2YgZT09XCJvYmplY3RcIiYmZSE9PW51bGwmJmUuZXJyb3JfY29kZSE9PXZvaWQgMH1mdW5jdGlvbiBGbChlLHQpe2xldCByO3RyeXtyPUJuKHtpbmxpbmVEYXRhc291cmNlczp0LmlubGluZURhdGFzb3VyY2VzLG92ZXJyaWRlRGF0YXNvdXJjZXM6dC5vdmVycmlkZURhdGFzb3VyY2VzLGVudjp7Li4udC5lbnYsLi4ucHJvY2Vzcy5lbnZ9LGNsaWVudFZlcnNpb246dC5jbGllbnRWZXJzaW9ufSl9Y2F0Y2h7fWUubm9FbmdpbmUhPT0hMCYmcj8uc3RhcnRzV2l0aChcInByaXNtYTovL1wiKSYmbHIoXCJyZWNvbW1lbmQtLW5vLWVuZ2luZVwiLFwiSW4gcHJvZHVjdGlvbiwgd2UgcmVjb21tZW5kIHVzaW5nIGBwcmlzbWEgZ2VuZXJhdGUgLS1uby1lbmdpbmVgIChTZWU6IGBwcmlzbWEgZ2VuZXJhdGUgLS1oZWxwYClcIik7bGV0IG49Z3QodC5nZW5lcmF0b3IpO2lmKG49PT1cIndhc21cIiYmdC5hZGFwdGVyIT09dm9pZCAwKXJldHVybiBuZXcgenQodCk7aWYocj8uc3RhcnRzV2l0aChcInByaXNtYTovL1wiKXx8ZS5ub0VuZ2luZSlyZXR1cm4gbmV3IE5yKHQpO2lmKG49PT1cImxpYnJhcnlcIilyZXR1cm4gbmV3IHp0KHQpO3Rocm93XCJiaW5hcnlcIixuZXcgc2UoXCJJbnZhbGlkIGNsaWVudCBlbmdpbmUgdHlwZSwgcGxlYXNlIHVzZSBgbGlicmFyeWAgb3IgYGJpbmFyeWBcIix7Y2xpZW50VmVyc2lvbjp0LmNsaWVudFZlcnNpb259KX1mdW5jdGlvbiB6bih7Z2VuZXJhdG9yOmV9KXtyZXR1cm4gZT8ucHJldmlld0ZlYXR1cmVzPz9bXX12YXIgcWw9RihEbygpKTtmdW5jdGlvbiBMbChlLHQpe2xldCByPSRsKGUpLG49R2YociksaT1IZihuKTtpP1luKGksdCk6dC5hZGRFcnJvck1lc3NhZ2UoKCk9PlwiVW5rbm93biBlcnJvclwiKX1mdW5jdGlvbiAkbChlKXtyZXR1cm4gZS5lcnJvcnMuZmxhdE1hcCh0PT50LmtpbmQ9PT1cIlVuaW9uXCI/JGwodCk6W3RdKX1mdW5jdGlvbiBHZihlKXtsZXQgdD1uZXcgTWFwLHI9W107Zm9yKGxldCBuIG9mIGUpe2lmKG4ua2luZCE9PVwiSW52YWxpZEFyZ3VtZW50VHlwZVwiKXtyLnB1c2gobik7Y29udGludWV9bGV0IGk9YCR7bi5zZWxlY3Rpb25QYXRoLmpvaW4oXCIuXCIpfToke24uYXJndW1lbnRQYXRoLmpvaW4oXCIuXCIpfWAsbz10LmdldChpKTtvP3Quc2V0KGksey4uLm4sYXJndW1lbnQ6ey4uLm4uYXJndW1lbnQsdHlwZU5hbWVzOkpmKG8uYXJndW1lbnQudHlwZU5hbWVzLG4uYXJndW1lbnQudHlwZU5hbWVzKX19KTp0LnNldChpLG4pfXJldHVybiByLnB1c2goLi4udC52YWx1ZXMoKSkscn1mdW5jdGlvbiBKZihlLHQpe3JldHVyblsuLi5uZXcgU2V0KGUuY29uY2F0KHQpKV19ZnVuY3Rpb24gSGYoZSl7cmV0dXJuIFFpKGUsKHQscik9PntsZXQgbj1EbCh0KSxpPURsKHIpO3JldHVybiBuIT09aT9uLWk6TmwodCktTmwocil9KX1mdW5jdGlvbiBEbChlKXtsZXQgdD0wO3JldHVybiBBcnJheS5pc0FycmF5KGUuc2VsZWN0aW9uUGF0aCkmJih0Kz1lLnNlbGVjdGlvblBhdGgubGVuZ3RoKSxBcnJheS5pc0FycmF5KGUuYXJndW1lbnRQYXRoKSYmKHQrPWUuYXJndW1lbnRQYXRoLmxlbmd0aCksdH1mdW5jdGlvbiBObChlKXtzd2l0Y2goZS5raW5kKXtjYXNlXCJJbnZhbGlkQXJndW1lbnRWYWx1ZVwiOmNhc2VcIlZhbHVlVG9vTGFyZ2VcIjpyZXR1cm4gMjA7Y2FzZVwiSW52YWxpZEFyZ3VtZW50VHlwZVwiOnJldHVybiAxMDtjYXNlXCJSZXF1aXJlZEFyZ3VtZW50TWlzc2luZ1wiOnJldHVybi0xMDtkZWZhdWx0OnJldHVybiAwfX12YXIgR2U9Y2xhc3N7Y29uc3RydWN0b3IodCxyKXt0aGlzLm5hbWU9dDt0aGlzLnZhbHVlPXI7dGhpcy5pc1JlcXVpcmVkPSExfW1ha2VSZXF1aXJlZCgpe3JldHVybiB0aGlzLmlzUmVxdWlyZWQ9ITAsdGhpc313cml0ZSh0KXtsZXR7Y29sb3JzOntncmVlbjpyfX09dC5jb250ZXh0O3QuYWRkTWFyZ2luU3ltYm9sKHIodGhpcy5pc1JlcXVpcmVkP1wiK1wiOlwiP1wiKSksdC53cml0ZShyKHRoaXMubmFtZSkpLHRoaXMuaXNSZXF1aXJlZHx8dC53cml0ZShyKFwiP1wiKSksdC53cml0ZShyKFwiOiBcIikpLHR5cGVvZiB0aGlzLnZhbHVlPT1cInN0cmluZ1wiP3Qud3JpdGUocih0aGlzLnZhbHVlKSk6dC53cml0ZSh0aGlzLnZhbHVlKX19O3ZhciBabj1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuZmllbGRzPVtdfWFkZEZpZWxkKHQscil7cmV0dXJuIHRoaXMuZmllbGRzLnB1c2goe3dyaXRlKG4pe2xldHtncmVlbjppLGRpbTpvfT1uLmNvbnRleHQuY29sb3JzO24ud3JpdGUoaShvKGAke3R9OiAke3J9YCkpKS5hZGRNYXJnaW5TeW1ib2woaShvKFwiK1wiKSkpfX0pLHRoaXN9d3JpdGUodCl7bGV0e2NvbG9yczp7Z3JlZW46cn19PXQuY29udGV4dDt0LndyaXRlTGluZShyKFwie1wiKSkud2l0aEluZGVudCgoKT0+e3Qud3JpdGVKb2luZWQoQnQsdGhpcy5maWVsZHMpLm5ld0xpbmUoKX0pLndyaXRlKHIoXCJ9XCIpKS5hZGRNYXJnaW5TeW1ib2wocihcIitcIikpfX07ZnVuY3Rpb24gWW4oZSx0KXtzd2l0Y2goZS5raW5kKXtjYXNlXCJJbmNsdWRlQW5kU2VsZWN0XCI6V2YoZSx0KTticmVhaztjYXNlXCJJbmNsdWRlT25TY2FsYXJcIjp6ZihlLHQpO2JyZWFrO2Nhc2VcIkVtcHR5U2VsZWN0aW9uXCI6WWYoZSx0KTticmVhaztjYXNlXCJVbmtub3duU2VsZWN0aW9uRmllbGRcIjpaZihlLHQpO2JyZWFrO2Nhc2VcIlVua25vd25Bcmd1bWVudFwiOlhmKGUsdCk7YnJlYWs7Y2FzZVwiVW5rbm93bklucHV0RmllbGRcIjplZyhlLHQpO2JyZWFrO2Nhc2VcIlJlcXVpcmVkQXJndW1lbnRNaXNzaW5nXCI6dGcoZSx0KTticmVhaztjYXNlXCJJbnZhbGlkQXJndW1lbnRUeXBlXCI6cmcoZSx0KTticmVhaztjYXNlXCJJbnZhbGlkQXJndW1lbnRWYWx1ZVwiOm5nKGUsdCk7YnJlYWs7Y2FzZVwiVmFsdWVUb29MYXJnZVwiOmlnKGUsdCk7YnJlYWs7Y2FzZVwiU29tZUZpZWxkc01pc3NpbmdcIjpvZyhlLHQpO2JyZWFrO2Nhc2VcIlRvb01hbnlGaWVsZHNHaXZlblwiOnNnKGUsdCk7YnJlYWs7Y2FzZVwiVW5pb25cIjpMbChlLHQpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwibm90IGltcGxlbWVudGVkOiBcIitlLmtpbmQpfX1mdW5jdGlvbiBXZihlLHQpe2xldCByPXQuYXJndW1lbnRzLmdldERlZXBTdWJTZWxlY3Rpb25WYWx1ZShlLnNlbGVjdGlvblBhdGgpO3ImJnIgaW5zdGFuY2VvZiB6JiYoci5nZXRGaWVsZChcImluY2x1ZGVcIik/Lm1hcmtBc0Vycm9yKCksci5nZXRGaWVsZChcInNlbGVjdFwiKT8ubWFya0FzRXJyb3IoKSksdC5hZGRFcnJvck1lc3NhZ2Uobj0+YFBsZWFzZSAke24uYm9sZChcImVpdGhlclwiKX0gdXNlICR7bi5ncmVlbihcImBpbmNsdWRlYFwiKX0gb3IgJHtuLmdyZWVuKFwiYHNlbGVjdGBcIil9LCBidXQgJHtuLnJlZChcIm5vdCBib3RoXCIpfSBhdCB0aGUgc2FtZSB0aW1lLmApfWZ1bmN0aW9uIHpmKGUsdCl7bGV0W3Isbl09WG4oZS5zZWxlY3Rpb25QYXRoKSxpPWUub3V0cHV0VHlwZSxvPXQuYXJndW1lbnRzLmdldERlZXBTZWxlY3Rpb25QYXJlbnQocik/LnZhbHVlO2lmKG8mJihvLmdldEZpZWxkKG4pPy5tYXJrQXNFcnJvcigpLGkpKWZvcihsZXQgcyBvZiBpLmZpZWxkcylzLmlzUmVsYXRpb24mJm8uYWRkU3VnZ2VzdGlvbihuZXcgR2Uocy5uYW1lLFwidHJ1ZVwiKSk7dC5hZGRFcnJvck1lc3NhZ2Uocz0+e2xldCBhPWBJbnZhbGlkIHNjYWxhciBmaWVsZCAke3MucmVkKGBcXGAke259XFxgYCl9IGZvciAke3MuYm9sZChcImluY2x1ZGVcIil9IHN0YXRlbWVudGA7cmV0dXJuIGk/YSs9YCBvbiBtb2RlbCAke3MuYm9sZChpLm5hbWUpfS4gJHtqcihzKX1gOmErPVwiLlwiLGErPWBcbk5vdGUgdGhhdCAke3MuYm9sZChcImluY2x1ZGVcIil9IHN0YXRlbWVudHMgb25seSBhY2NlcHQgcmVsYXRpb24gZmllbGRzLmAsYX0pfWZ1bmN0aW9uIFlmKGUsdCl7bGV0IHI9ZS5vdXRwdXRUeXBlLG49dC5hcmd1bWVudHMuZ2V0RGVlcFNlbGVjdGlvblBhcmVudChlLnNlbGVjdGlvblBhdGgpPy52YWx1ZSxpPW4/LmlzRW1wdHkoKT8/ITE7biYmKG4ucmVtb3ZlQWxsRmllbGRzKCksQmwobixyKSksdC5hZGRFcnJvck1lc3NhZ2Uobz0+aT9gVGhlICR7by5yZWQoXCJgc2VsZWN0YFwiKX0gc3RhdGVtZW50IGZvciB0eXBlICR7by5ib2xkKHIubmFtZSl9IG11c3Qgbm90IGJlIGVtcHR5LiAke2pyKG8pfWA6YFRoZSAke28ucmVkKFwiYHNlbGVjdGBcIil9IHN0YXRlbWVudCBmb3IgdHlwZSAke28uYm9sZChyLm5hbWUpfSBuZWVkcyAke28uYm9sZChcImF0IGxlYXN0IG9uZSB0cnV0aHkgdmFsdWVcIil9LmApfWZ1bmN0aW9uIFpmKGUsdCl7bGV0W3Isbl09WG4oZS5zZWxlY3Rpb25QYXRoKSxpPXQuYXJndW1lbnRzLmdldERlZXBTZWxlY3Rpb25QYXJlbnQocik7aSYmKGkudmFsdWUuZ2V0RmllbGQobik/Lm1hcmtBc0Vycm9yKCksQmwoaS52YWx1ZSxlLm91dHB1dFR5cGUpKSx0LmFkZEVycm9yTWVzc2FnZShvPT57bGV0IHM9W2BVbmtub3duIGZpZWxkICR7by5yZWQoYFxcYCR7bn1cXGBgKX1gXTtyZXR1cm4gaSYmcy5wdXNoKGBmb3IgJHtvLmJvbGQoaS5raW5kKX0gc3RhdGVtZW50YCkscy5wdXNoKGBvbiBtb2RlbCAke28uYm9sZChgXFxgJHtlLm91dHB1dFR5cGUubmFtZX1cXGBgKX0uYCkscy5wdXNoKGpyKG8pKSxzLmpvaW4oXCIgXCIpfSl9ZnVuY3Rpb24gWGYoZSx0KXtsZXQgcj1lLmFyZ3VtZW50UGF0aFswXSxuPXQuYXJndW1lbnRzLmdldERlZXBTdWJTZWxlY3Rpb25WYWx1ZShlLnNlbGVjdGlvblBhdGgpO24gaW5zdGFuY2VvZiB6JiYobi5nZXRGaWVsZChyKT8ubWFya0FzRXJyb3IoKSxhZyhuLGUuYXJndW1lbnRzKSksdC5hZGRFcnJvck1lc3NhZ2UoaT0+amwoaSxyLGUuYXJndW1lbnRzLm1hcChvPT5vLm5hbWUpKSl9ZnVuY3Rpb24gZWcoZSx0KXtsZXRbcixuXT1YbihlLmFyZ3VtZW50UGF0aCksaT10LmFyZ3VtZW50cy5nZXREZWVwU3ViU2VsZWN0aW9uVmFsdWUoZS5zZWxlY3Rpb25QYXRoKTtpZihpIGluc3RhbmNlb2Ygeil7aS5nZXREZWVwRmllbGQoZS5hcmd1bWVudFBhdGgpPy5tYXJrQXNFcnJvcigpO2xldCBvPWkuZ2V0RGVlcEZpZWxkVmFsdWUocik7byBpbnN0YW5jZW9mIHomJlVsKG8sZS5pbnB1dFR5cGUpfXQuYWRkRXJyb3JNZXNzYWdlKG89PmpsKG8sbixlLmlucHV0VHlwZS5maWVsZHMubWFwKHM9PnMubmFtZSkpKX1mdW5jdGlvbiBqbChlLHQscil7bGV0IG49W2BVbmtub3duIGFyZ3VtZW50IFxcYCR7ZS5yZWQodCl9XFxgLmBdLGk9dWcodCxyKTtyZXR1cm4gaSYmbi5wdXNoKGBEaWQgeW91IG1lYW4gXFxgJHtlLmdyZWVuKGkpfVxcYD9gKSxyLmxlbmd0aD4wJiZuLnB1c2goanIoZSkpLG4uam9pbihcIiBcIil9ZnVuY3Rpb24gdGcoZSx0KXtsZXQgcjt0LmFkZEVycm9yTWVzc2FnZShsPT5yPy52YWx1ZSBpbnN0YW5jZW9mIFkmJnIudmFsdWUudGV4dD09PVwibnVsbFwiP2BBcmd1bWVudCBcXGAke2wuZ3JlZW4obyl9XFxgIG11c3Qgbm90IGJlICR7bC5yZWQoXCJudWxsXCIpfS5gOmBBcmd1bWVudCBcXGAke2wuZ3JlZW4obyl9XFxgIGlzIG1pc3NpbmcuYCk7bGV0IG49dC5hcmd1bWVudHMuZ2V0RGVlcFN1YlNlbGVjdGlvblZhbHVlKGUuc2VsZWN0aW9uUGF0aCk7aWYoIShuIGluc3RhbmNlb2YgeikpcmV0dXJuO2xldFtpLG9dPVhuKGUuYXJndW1lbnRQYXRoKSxzPW5ldyBabixhPW4uZ2V0RGVlcEZpZWxkVmFsdWUoaSk7aWYoYSBpbnN0YW5jZW9mIHopaWYocj1hLmdldEZpZWxkKG8pLHImJmEucmVtb3ZlRmllbGQobyksZS5pbnB1dFR5cGVzLmxlbmd0aD09PTEmJmUuaW5wdXRUeXBlc1swXS5raW5kPT09XCJvYmplY3RcIil7Zm9yKGxldCBsIG9mIGUuaW5wdXRUeXBlc1swXS5maWVsZHMpcy5hZGRGaWVsZChsLm5hbWUsbC50eXBlTmFtZXMuam9pbihcIiB8IFwiKSk7YS5hZGRTdWdnZXN0aW9uKG5ldyBHZShvLHMpLm1ha2VSZXF1aXJlZCgpKX1lbHNle2xldCBsPWUuaW5wdXRUeXBlcy5tYXAoVmwpLmpvaW4oXCIgfCBcIik7YS5hZGRTdWdnZXN0aW9uKG5ldyBHZShvLGwpLm1ha2VSZXF1aXJlZCgpKX19ZnVuY3Rpb24gVmwoZSl7cmV0dXJuIGUua2luZD09PVwibGlzdFwiP2Ake1ZsKGUuZWxlbWVudFR5cGUpfVtdYDplLm5hbWV9ZnVuY3Rpb24gcmcoZSx0KXtsZXQgcj1lLmFyZ3VtZW50Lm5hbWUsbj10LmFyZ3VtZW50cy5nZXREZWVwU3ViU2VsZWN0aW9uVmFsdWUoZS5zZWxlY3Rpb25QYXRoKTtuIGluc3RhbmNlb2YgeiYmbi5nZXREZWVwRmllbGRWYWx1ZShlLmFyZ3VtZW50UGF0aCk/Lm1hcmtBc0Vycm9yKCksdC5hZGRFcnJvck1lc3NhZ2UoaT0+e2xldCBvPWVpKFwib3JcIixlLmFyZ3VtZW50LnR5cGVOYW1lcy5tYXAocz0+aS5ncmVlbihzKSkpO3JldHVybmBBcmd1bWVudCBcXGAke2kuYm9sZChyKX1cXGA6IEludmFsaWQgdmFsdWUgcHJvdmlkZWQuIEV4cGVjdGVkICR7b30sIHByb3ZpZGVkICR7aS5yZWQoZS5pbmZlcnJlZFR5cGUpfS5gfSl9ZnVuY3Rpb24gbmcoZSx0KXtsZXQgcj1lLmFyZ3VtZW50Lm5hbWUsbj10LmFyZ3VtZW50cy5nZXREZWVwU3ViU2VsZWN0aW9uVmFsdWUoZS5zZWxlY3Rpb25QYXRoKTtuIGluc3RhbmNlb2YgeiYmbi5nZXREZWVwRmllbGRWYWx1ZShlLmFyZ3VtZW50UGF0aCk/Lm1hcmtBc0Vycm9yKCksdC5hZGRFcnJvck1lc3NhZ2UoaT0+e2xldCBvPVtgSW52YWxpZCB2YWx1ZSBmb3IgYXJndW1lbnQgXFxgJHtpLmJvbGQocil9XFxgYF07aWYoZS51bmRlcmx5aW5nRXJyb3ImJm8ucHVzaChgOiAke2UudW5kZXJseWluZ0Vycm9yfWApLG8ucHVzaChcIi5cIiksZS5hcmd1bWVudC50eXBlTmFtZXMubGVuZ3RoPjApe2xldCBzPWVpKFwib3JcIixlLmFyZ3VtZW50LnR5cGVOYW1lcy5tYXAoYT0+aS5ncmVlbihhKSkpO28ucHVzaChgIEV4cGVjdGVkICR7c30uYCl9cmV0dXJuIG8uam9pbihcIlwiKX0pfWZ1bmN0aW9uIGlnKGUsdCl7bGV0IHI9ZS5hcmd1bWVudC5uYW1lLG49dC5hcmd1bWVudHMuZ2V0RGVlcFN1YlNlbGVjdGlvblZhbHVlKGUuc2VsZWN0aW9uUGF0aCksaTtpZihuIGluc3RhbmNlb2Ygeil7bGV0IHM9bi5nZXREZWVwRmllbGQoZS5hcmd1bWVudFBhdGgpPy52YWx1ZTtzPy5tYXJrQXNFcnJvcigpLHMgaW5zdGFuY2VvZiBZJiYoaT1zLnRleHQpfXQuYWRkRXJyb3JNZXNzYWdlKG89PntsZXQgcz1bXCJVbmFibGUgdG8gZml0IHZhbHVlXCJdO3JldHVybiBpJiZzLnB1c2goby5yZWQoaSkpLHMucHVzaChgaW50byBhIDY0LWJpdCBzaWduZWQgaW50ZWdlciBmb3IgZmllbGQgXFxgJHtvLmJvbGQocil9XFxgYCkscy5qb2luKFwiIFwiKX0pfWZ1bmN0aW9uIG9nKGUsdCl7bGV0IHI9ZS5hcmd1bWVudFBhdGhbZS5hcmd1bWVudFBhdGgubGVuZ3RoLTFdLG49dC5hcmd1bWVudHMuZ2V0RGVlcFN1YlNlbGVjdGlvblZhbHVlKGUuc2VsZWN0aW9uUGF0aCk7aWYobiBpbnN0YW5jZW9mIHope2xldCBpPW4uZ2V0RGVlcEZpZWxkVmFsdWUoZS5hcmd1bWVudFBhdGgpO2kgaW5zdGFuY2VvZiB6JiZVbChpLGUuaW5wdXRUeXBlKX10LmFkZEVycm9yTWVzc2FnZShpPT57bGV0IG89W2BBcmd1bWVudCBcXGAke2kuYm9sZChyKX1cXGAgb2YgdHlwZSAke2kuYm9sZChlLmlucHV0VHlwZS5uYW1lKX0gbmVlZHNgXTtyZXR1cm4gZS5jb25zdHJhaW50cy5taW5GaWVsZENvdW50PT09MT9lLmNvbnN0cmFpbnRzLnJlcXVpcmVkRmllbGRzP28ucHVzaChgJHtpLmdyZWVuKFwiYXQgbGVhc3Qgb25lIG9mXCIpfSAke2VpKFwib3JcIixlLmNvbnN0cmFpbnRzLnJlcXVpcmVkRmllbGRzLm1hcChzPT5gXFxgJHtpLmJvbGQocyl9XFxgYCkpfSBhcmd1bWVudHMuYCk6by5wdXNoKGAke2kuZ3JlZW4oXCJhdCBsZWFzdCBvbmVcIil9IGFyZ3VtZW50LmApOm8ucHVzaChgJHtpLmdyZWVuKGBhdCBsZWFzdCAke2UuY29uc3RyYWludHMubWluRmllbGRDb3VudH1gKX0gYXJndW1lbnRzLmApLG8ucHVzaChqcihpKSksby5qb2luKFwiIFwiKX0pfWZ1bmN0aW9uIHNnKGUsdCl7bGV0IHI9ZS5hcmd1bWVudFBhdGhbZS5hcmd1bWVudFBhdGgubGVuZ3RoLTFdLG49dC5hcmd1bWVudHMuZ2V0RGVlcFN1YlNlbGVjdGlvblZhbHVlKGUuc2VsZWN0aW9uUGF0aCksaT1bXTtpZihuIGluc3RhbmNlb2Ygeil7bGV0IG89bi5nZXREZWVwRmllbGRWYWx1ZShlLmFyZ3VtZW50UGF0aCk7byBpbnN0YW5jZW9mIHomJihvLm1hcmtBc0Vycm9yKCksaT1PYmplY3Qua2V5cyhvLmdldEZpZWxkcygpKSl9dC5hZGRFcnJvck1lc3NhZ2Uobz0+e2xldCBzPVtgQXJndW1lbnQgXFxgJHtvLmJvbGQocil9XFxgIG9mIHR5cGUgJHtvLmJvbGQoZS5pbnB1dFR5cGUubmFtZSl9IG5lZWRzYF07cmV0dXJuIGUuY29uc3RyYWludHMubWluRmllbGRDb3VudD09PTEmJmUuY29uc3RyYWludHMubWF4RmllbGRDb3VudD09MT9zLnB1c2goYCR7by5ncmVlbihcImV4YWN0bHkgb25lXCIpfSBhcmd1bWVudCxgKTplLmNvbnN0cmFpbnRzLm1heEZpZWxkQ291bnQ9PTE/cy5wdXNoKGAke28uZ3JlZW4oXCJhdCBtb3N0IG9uZVwiKX0gYXJndW1lbnQsYCk6cy5wdXNoKGAke28uZ3JlZW4oYGF0IG1vc3QgJHtlLmNvbnN0cmFpbnRzLm1heEZpZWxkQ291bnR9YCl9IGFyZ3VtZW50cyxgKSxzLnB1c2goYGJ1dCB5b3UgcHJvdmlkZWQgJHtlaShcImFuZFwiLGkubWFwKGE9Pm8ucmVkKGEpKSl9LiBQbGVhc2UgY2hvb3NlYCksZS5jb25zdHJhaW50cy5tYXhGaWVsZENvdW50PT09MT9zLnB1c2goXCJvbmUuXCIpOnMucHVzaChgJHtlLmNvbnN0cmFpbnRzLm1heEZpZWxkQ291bnR9LmApLHMuam9pbihcIiBcIil9KX1mdW5jdGlvbiBCbChlLHQpe2ZvcihsZXQgciBvZiB0LmZpZWxkcyllLmhhc0ZpZWxkKHIubmFtZSl8fGUuYWRkU3VnZ2VzdGlvbihuZXcgR2Uoci5uYW1lLFwidHJ1ZVwiKSl9ZnVuY3Rpb24gYWcoZSx0KXtmb3IobGV0IHIgb2YgdCllLmhhc0ZpZWxkKHIubmFtZSl8fGUuYWRkU3VnZ2VzdGlvbihuZXcgR2Uoci5uYW1lLHIudHlwZU5hbWVzLmpvaW4oXCIgfCBcIikpKX1mdW5jdGlvbiBVbChlLHQpe2lmKHQua2luZD09PVwib2JqZWN0XCIpZm9yKGxldCByIG9mIHQuZmllbGRzKWUuaGFzRmllbGQoci5uYW1lKXx8ZS5hZGRTdWdnZXN0aW9uKG5ldyBHZShyLm5hbWUsci50eXBlTmFtZXMuam9pbihcIiB8IFwiKSkpfWZ1bmN0aW9uIFhuKGUpe2xldCB0PVsuLi5lXSxyPXQucG9wKCk7aWYoIXIpdGhyb3cgbmV3IEVycm9yKFwidW5leHBlY3RlZCBlbXB0eSBwYXRoXCIpO3JldHVyblt0LHJdfWZ1bmN0aW9uIGpyKHtncmVlbjplLGVuYWJsZWQ6dH0pe3JldHVyblwiQXZhaWxhYmxlIG9wdGlvbnMgYXJlIFwiKyh0P2BsaXN0ZWQgaW4gJHtlKFwiZ3JlZW5cIil9YDpcIm1hcmtlZCB3aXRoID9cIikrXCIuXCJ9ZnVuY3Rpb24gZWkoZSx0KXtpZih0Lmxlbmd0aD09PTEpcmV0dXJuIHRbMF07bGV0IHI9Wy4uLnRdLG49ci5wb3AoKTtyZXR1cm5gJHtyLmpvaW4oXCIsIFwiKX0gJHtlfSAke259YH12YXIgbGc9MztmdW5jdGlvbiB1ZyhlLHQpe2xldCByPTEvMCxuO2ZvcihsZXQgaSBvZiB0KXtsZXQgbz0oMCxxbC5kZWZhdWx0KShlLGkpO28+bGd8fG88ciYmKHI9byxuPWkpfXJldHVybiBufWZ1bmN0aW9uIHRpKHthcmdzOmUsZXJyb3JzOnQsZXJyb3JGb3JtYXQ6cixjYWxsc2l0ZTpuLG9yaWdpbmFsTWV0aG9kOmksY2xpZW50VmVyc2lvbjpvfSl7bGV0IHM9U24oZSk7Zm9yKGxldCBwIG9mIHQpWW4ocCxzKTtsZXQgYT1yPT09XCJwcmV0dHlcIj9FYTpSbixsPXMucmVuZGVyQWxsTWVzc2FnZXMoYSksdT1uZXcgTnQoMCx7Y29sb3JzOmF9KS53cml0ZShzKS50b1N0cmluZygpLGM9UXQoe21lc3NhZ2U6bCxjYWxsc2l0ZTpuLG9yaWdpbmFsTWV0aG9kOmksc2hvd0NvbG9yczpyPT09XCJwcmV0dHlcIixjYWxsQXJndW1lbnRzOnV9KTt0aHJvdyBuZXcgc2UoYyx7Y2xpZW50VmVyc2lvbjpvfSl9dmFyIGNnPXtmaW5kVW5pcXVlOlwiZmluZFVuaXF1ZVwiLGZpbmRVbmlxdWVPclRocm93OlwiZmluZFVuaXF1ZU9yVGhyb3dcIixmaW5kRmlyc3Q6XCJmaW5kRmlyc3RcIixmaW5kRmlyc3RPclRocm93OlwiZmluZEZpcnN0T3JUaHJvd1wiLGZpbmRNYW55OlwiZmluZE1hbnlcIixjb3VudDpcImFnZ3JlZ2F0ZVwiLGNyZWF0ZTpcImNyZWF0ZU9uZVwiLGNyZWF0ZU1hbnk6XCJjcmVhdGVNYW55XCIsdXBkYXRlOlwidXBkYXRlT25lXCIsdXBkYXRlTWFueTpcInVwZGF0ZU1hbnlcIix1cHNlcnQ6XCJ1cHNlcnRPbmVcIixkZWxldGU6XCJkZWxldGVPbmVcIixkZWxldGVNYW55OlwiZGVsZXRlTWFueVwiLGV4ZWN1dGVSYXc6XCJleGVjdXRlUmF3XCIscXVlcnlSYXc6XCJxdWVyeVJhd1wiLGFnZ3JlZ2F0ZTpcImFnZ3JlZ2F0ZVwiLGdyb3VwQnk6XCJncm91cEJ5XCIscnVuQ29tbWFuZFJhdzpcInJ1bkNvbW1hbmRSYXdcIixmaW5kUmF3OlwiZmluZFJhd1wiLGFnZ3JlZ2F0ZVJhdzpcImFnZ3JlZ2F0ZVJhd1wifTtmdW5jdGlvbiBLbCh7bW9kZWxOYW1lOmUsYWN0aW9uOnQsYXJnczpyLHJ1bnRpbWVEYXRhTW9kZWw6bixleHRlbnNpb25zOmksY2FsbHNpdGU6byxjbGllbnRNZXRob2Q6cyxlcnJvckZvcm1hdDphLGNsaWVudFZlcnNpb246bH0pe2xldCB1PW5ldyBObyh7cnVudGltZURhdGFNb2RlbDpuLG1vZGVsTmFtZTplLGFjdGlvbjp0LHJvb3RBcmdzOnIsY2FsbHNpdGU6byxleHRlbnNpb25zOmksc2VsZWN0aW9uUGF0aDpbXSxhcmd1bWVudFBhdGg6W10sb3JpZ2luYWxNZXRob2Q6cyxlcnJvckZvcm1hdDphLGNsaWVudFZlcnNpb246bH0pO3JldHVybnttb2RlbE5hbWU6ZSxhY3Rpb246Y2dbdF0scXVlcnk6TG8ocix1KX19ZnVuY3Rpb24gTG8oe3NlbGVjdDplLGluY2x1ZGU6dCwuLi5yfT17fSxuKXtyZXR1cm57YXJndW1lbnRzOkdsKHIsbiksc2VsZWN0aW9uOnBnKGUsdCxuKX19ZnVuY3Rpb24gcGcoZSx0LHIpe3JldHVybiBlJiZ0JiZyLnRocm93VmFsaWRhdGlvbkVycm9yKHtraW5kOlwiSW5jbHVkZUFuZFNlbGVjdFwiLHNlbGVjdGlvblBhdGg6ci5nZXRTZWxlY3Rpb25QYXRoKCl9KSxlP2ZnKGUscik6ZGcocix0KX1mdW5jdGlvbiBkZyhlLHQpe2xldCByPXt9O3JldHVybiBlLm1vZGVsJiYhZS5pc1Jhd0FjdGlvbigpJiYoci4kY29tcG9zaXRlcz0hMCxyLiRzY2FsYXJzPSEwKSx0JiZtZyhyLHQsZSkscn1mdW5jdGlvbiBtZyhlLHQscil7Zm9yKGxldFtuLGldb2YgT2JqZWN0LmVudHJpZXModCkpe2xldCBvPXIuZmluZEZpZWxkKG4pO28mJm8/LmtpbmQhPT1cIm9iamVjdFwiJiZyLnRocm93VmFsaWRhdGlvbkVycm9yKHtraW5kOlwiSW5jbHVkZU9uU2NhbGFyXCIsc2VsZWN0aW9uUGF0aDpyLmdldFNlbGVjdGlvblBhdGgoKS5jb25jYXQobiksb3V0cHV0VHlwZTpyLmdldE91dHB1dFR5cGVEZXNjcmlwdGlvbigpfSksaT09PSEwP2Vbbl09ITA6dHlwZW9mIGk9PVwib2JqZWN0XCImJihlW25dPUxvKGksci5uZXN0U2VsZWN0aW9uKG4pKSl9fWZ1bmN0aW9uIGZnKGUsdCl7bGV0IHI9e30sbj10LmdldENvbXB1dGVkRmllbGRzKCksaT1ybChlLG4pO2ZvcihsZXRbbyxzXW9mIE9iamVjdC5lbnRyaWVzKGkpKXtsZXQgYT10LmZpbmRGaWVsZChvKTtuPy5bb10mJiFhfHwocz09PSEwP3Jbb109ITA6dHlwZW9mIHM9PVwib2JqZWN0XCImJihyW29dPUxvKHMsdC5uZXN0U2VsZWN0aW9uKG8pKSkpfXJldHVybiByfWZ1bmN0aW9uIFFsKGUsdCl7aWYoZT09PW51bGwpcmV0dXJuIG51bGw7aWYodHlwZW9mIGU9PVwic3RyaW5nXCJ8fHR5cGVvZiBlPT1cIm51bWJlclwifHx0eXBlb2YgZT09XCJib29sZWFuXCIpcmV0dXJuIGU7aWYodHlwZW9mIGU9PVwiYmlnaW50XCIpcmV0dXJueyR0eXBlOlwiQmlnSW50XCIsdmFsdWU6U3RyaW5nKGUpfTtpZihMdChlKSl7aWYoYm4oZSkpcmV0dXJueyR0eXBlOlwiRGF0ZVRpbWVcIix2YWx1ZTplLnRvSVNPU3RyaW5nKCl9O3QudGhyb3dWYWxpZGF0aW9uRXJyb3Ioe2tpbmQ6XCJJbnZhbGlkQXJndW1lbnRWYWx1ZVwiLHNlbGVjdGlvblBhdGg6dC5nZXRTZWxlY3Rpb25QYXRoKCksYXJndW1lbnRQYXRoOnQuZ2V0QXJndW1lbnRQYXRoKCksYXJndW1lbnQ6e25hbWU6dC5nZXRBcmd1bWVudE5hbWUoKSx0eXBlTmFtZXM6W1wiRGF0ZVwiXX0sdW5kZXJseWluZ0Vycm9yOlwiUHJvdmlkZWQgRGF0ZSBvYmplY3QgaXMgaW52YWxpZFwifSl9aWYoVnQoZSkpcmV0dXJueyR0eXBlOlwiRmllbGRSZWZcIix2YWx1ZTp7X3JlZjplLm5hbWUsX2NvbnRhaW5lcjplLm1vZGVsTmFtZX19O2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGdnKGUsdCk7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXJldHVybnskdHlwZTpcIkJ5dGVzXCIsdmFsdWU6QnVmZmVyLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIil9O2lmKHlnKGUpKXJldHVybiBlLnZhbHVlcztpZihqdChlKSlyZXR1cm57JHR5cGU6XCJEZWNpbWFsXCIsdmFsdWU6ZS50b0ZpeGVkKCl9O2lmKGUgaW5zdGFuY2VvZiBrZSl7aWYoZSE9PWZuLmluc3RhbmNlc1tlLl9nZXROYW1lKCldKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgT2JqZWN0RW51bVZhbHVlXCIpO3JldHVybnskdHlwZTpcIkVudW1cIix2YWx1ZTplLl9nZXROYW1lKCl9fWlmKGhnKGUpKXJldHVybiBlLnRvSlNPTigpO2lmKHR5cGVvZiBlPT1cIm9iamVjdFwiKXJldHVybiBHbChlLHQpO3QudGhyb3dWYWxpZGF0aW9uRXJyb3Ioe2tpbmQ6XCJJbnZhbGlkQXJndW1lbnRWYWx1ZVwiLHNlbGVjdGlvblBhdGg6dC5nZXRTZWxlY3Rpb25QYXRoKCksYXJndW1lbnRQYXRoOnQuZ2V0QXJndW1lbnRQYXRoKCksYXJndW1lbnQ6e25hbWU6dC5nZXRBcmd1bWVudE5hbWUoKSx0eXBlTmFtZXM6W119LHVuZGVybHlpbmdFcnJvcjpgV2UgY291bGQgbm90IHNlcmlhbGl6ZSAke09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0gdmFsdWUuIFNlcmlhbGl6ZSB0aGUgb2JqZWN0IHRvIEpTT04gb3IgaW1wbGVtZW50IGEgXCIudG9KU09OKClcIiBtZXRob2Qgb24gaXRgfSl9ZnVuY3Rpb24gR2woZSx0KXtpZihlLiR0eXBlKXJldHVybnskdHlwZTpcIkpzb25cIix2YWx1ZTpKU09OLnN0cmluZ2lmeShlKX07bGV0IHI9e307Zm9yKGxldCBuIGluIGUpe2xldCBpPWVbbl07aSE9PXZvaWQgMCYmKHJbbl09UWwoaSx0Lm5lc3RBcmd1bWVudChuKSkpfXJldHVybiByfWZ1bmN0aW9uIGdnKGUsdCl7bGV0IHI9W107Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspe2xldCBpPXQubmVzdEFyZ3VtZW50KFN0cmluZyhuKSksbz1lW25dO289PT12b2lkIDAmJnQudGhyb3dWYWxpZGF0aW9uRXJyb3Ioe2tpbmQ6XCJJbnZhbGlkQXJndW1lbnRWYWx1ZVwiLHNlbGVjdGlvblBhdGg6aS5nZXRTZWxlY3Rpb25QYXRoKCksYXJndW1lbnRQYXRoOmkuZ2V0QXJndW1lbnRQYXRoKCksYXJndW1lbnQ6e25hbWU6YCR7dC5nZXRBcmd1bWVudE5hbWUoKX1bJHtufV1gLHR5cGVOYW1lczpbXX0sdW5kZXJseWluZ0Vycm9yOlwiQ2FuIG5vdCB1c2UgYHVuZGVmaW5lZGAgdmFsdWUgd2l0aGluIGFycmF5LiBVc2UgYG51bGxgIG9yIGZpbHRlciBvdXQgYHVuZGVmaW5lZGAgdmFsdWVzXCJ9KSxyLnB1c2goUWwobyxpKSl9cmV0dXJuIHJ9ZnVuY3Rpb24geWcoZSl7cmV0dXJuIHR5cGVvZiBlPT1cIm9iamVjdFwiJiZlIT09bnVsbCYmZS5fX3ByaXNtYVJhd1BhcmFtZXRlcnNfXz09PSEwfWZ1bmN0aW9uIGhnKGUpe3JldHVybiB0eXBlb2YgZT09XCJvYmplY3RcIiYmZSE9PW51bGwmJnR5cGVvZiBlLnRvSlNPTj09XCJmdW5jdGlvblwifXZhciBObz1jbGFzcyBle2NvbnN0cnVjdG9yKHQpe3RoaXMucGFyYW1zPXQ7dGhpcy5wYXJhbXMubW9kZWxOYW1lJiYodGhpcy5tb2RlbD10aGlzLnBhcmFtcy5ydW50aW1lRGF0YU1vZGVsLm1vZGVsc1t0aGlzLnBhcmFtcy5tb2RlbE5hbWVdKX10aHJvd1ZhbGlkYXRpb25FcnJvcih0KXt0aSh7ZXJyb3JzOlt0XSxvcmlnaW5hbE1ldGhvZDp0aGlzLnBhcmFtcy5vcmlnaW5hbE1ldGhvZCxhcmdzOnRoaXMucGFyYW1zLnJvb3RBcmdzPz97fSxjYWxsc2l0ZTp0aGlzLnBhcmFtcy5jYWxsc2l0ZSxlcnJvckZvcm1hdDp0aGlzLnBhcmFtcy5lcnJvckZvcm1hdCxjbGllbnRWZXJzaW9uOnRoaXMucGFyYW1zLmNsaWVudFZlcnNpb259KX1nZXRTZWxlY3Rpb25QYXRoKCl7cmV0dXJuIHRoaXMucGFyYW1zLnNlbGVjdGlvblBhdGh9Z2V0QXJndW1lbnRQYXRoKCl7cmV0dXJuIHRoaXMucGFyYW1zLmFyZ3VtZW50UGF0aH1nZXRBcmd1bWVudE5hbWUoKXtyZXR1cm4gdGhpcy5wYXJhbXMuYXJndW1lbnRQYXRoW3RoaXMucGFyYW1zLmFyZ3VtZW50UGF0aC5sZW5ndGgtMV19Z2V0T3V0cHV0VHlwZURlc2NyaXB0aW9uKCl7aWYoISghdGhpcy5wYXJhbXMubW9kZWxOYW1lfHwhdGhpcy5tb2RlbCkpcmV0dXJue25hbWU6dGhpcy5wYXJhbXMubW9kZWxOYW1lLGZpZWxkczp0aGlzLm1vZGVsLmZpZWxkcy5tYXAodD0+KHtuYW1lOnQubmFtZSx0eXBlTmFtZTpcImJvb2xlYW5cIixpc1JlbGF0aW9uOnQua2luZD09PVwib2JqZWN0XCJ9KSl9fWlzUmF3QWN0aW9uKCl7cmV0dXJuW1wiZXhlY3V0ZVJhd1wiLFwicXVlcnlSYXdcIixcInJ1bkNvbW1hbmRSYXdcIixcImZpbmRSYXdcIixcImFnZ3JlZ2F0ZVJhd1wiXS5pbmNsdWRlcyh0aGlzLnBhcmFtcy5hY3Rpb24pfWdldENvbXB1dGVkRmllbGRzKCl7aWYodGhpcy5wYXJhbXMubW9kZWxOYW1lKXJldHVybiB0aGlzLnBhcmFtcy5leHRlbnNpb25zLmdldEFsbENvbXB1dGVkRmllbGRzKHRoaXMucGFyYW1zLm1vZGVsTmFtZSl9ZmluZEZpZWxkKHQpe3JldHVybiB0aGlzLm1vZGVsPy5maWVsZHMuZmluZChyPT5yLm5hbWU9PT10KX1uZXN0U2VsZWN0aW9uKHQpe2xldCByPXRoaXMuZmluZEZpZWxkKHQpLG49cj8ua2luZD09PVwib2JqZWN0XCI/ci50eXBlOnZvaWQgMDtyZXR1cm4gbmV3IGUoey4uLnRoaXMucGFyYW1zLG1vZGVsTmFtZTpuLHNlbGVjdGlvblBhdGg6dGhpcy5wYXJhbXMuc2VsZWN0aW9uUGF0aC5jb25jYXQodCl9KX1uZXN0QXJndW1lbnQodCl7cmV0dXJuIG5ldyBlKHsuLi50aGlzLnBhcmFtcyxhcmd1bWVudFBhdGg6dGhpcy5wYXJhbXMuYXJndW1lbnRQYXRoLmNvbmNhdCh0KX0pfX07dmFyIEpsPWU9Pih7Y29tbWFuZDplfSk7dmFyIEhsPWU9PmUuc3RyaW5ncy5yZWR1Y2UoKHQscixuKT0+YCR7dH1AUCR7bn0ke3J9YCk7ZnVuY3Rpb24gVnIoZSl7dHJ5e3JldHVybiBXbChlLFwiZmFzdFwiKX1jYXRjaHtyZXR1cm4gV2woZSxcInNsb3dcIil9fWZ1bmN0aW9uIFdsKGUsdCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGUubWFwKHI9PmJnKHIsdCkpKX1mdW5jdGlvbiBiZyhlLHQpe3JldHVybiB0eXBlb2YgZT09XCJiaWdpbnRcIj97cHJpc21hX190eXBlOlwiYmlnaW50XCIscHJpc21hX192YWx1ZTplLnRvU3RyaW5nKCl9Okx0KGUpP3twcmlzbWFfX3R5cGU6XCJkYXRlXCIscHJpc21hX192YWx1ZTplLnRvSlNPTigpfTpOZS5pc0RlY2ltYWwoZSk/e3ByaXNtYV9fdHlwZTpcImRlY2ltYWxcIixwcmlzbWFfX3ZhbHVlOmUudG9KU09OKCl9OkJ1ZmZlci5pc0J1ZmZlcihlKT97cHJpc21hX190eXBlOlwiYnl0ZXNcIixwcmlzbWFfX3ZhbHVlOmUudG9TdHJpbmcoXCJiYXNlNjRcIil9OnhnKGUpfHxBcnJheUJ1ZmZlci5pc1ZpZXcoZSk/e3ByaXNtYV9fdHlwZTpcImJ5dGVzXCIscHJpc21hX192YWx1ZTpCdWZmZXIuZnJvbShlKS50b1N0cmluZyhcImJhc2U2NFwiKX06dHlwZW9mIGU9PVwib2JqZWN0XCImJnQ9PT1cInNsb3dcIj9ZbChlKTplfWZ1bmN0aW9uIHhnKGUpe3JldHVybiBlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fGUgaW5zdGFuY2VvZiBTaGFyZWRBcnJheUJ1ZmZlcj8hMDp0eXBlb2YgZT09XCJvYmplY3RcIiYmZSE9PW51bGw/ZVtTeW1ib2wudG9TdHJpbmdUYWddPT09XCJBcnJheUJ1ZmZlclwifHxlW1N5bWJvbC50b1N0cmluZ1RhZ109PT1cIlNoYXJlZEFycmF5QnVmZmVyXCI6ITF9ZnVuY3Rpb24gWWwoZSl7aWYodHlwZW9mIGUhPVwib2JqZWN0XCJ8fGU9PT1udWxsKXJldHVybiBlO2lmKHR5cGVvZiBlLnRvSlNPTj09XCJmdW5jdGlvblwiKXJldHVybiBlLnRvSlNPTigpO2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUubWFwKHpsKTtsZXQgdD17fTtmb3IobGV0IHIgb2YgT2JqZWN0LmtleXMoZSkpdFtyXT16bChlW3JdKTtyZXR1cm4gdH1mdW5jdGlvbiB6bChlKXtyZXR1cm4gdHlwZW9mIGU9PVwiYmlnaW50XCI/ZS50b1N0cmluZygpOllsKGUpfXZhciB3Zz0vXihcXHMqYWx0ZXJcXHMpL2ksWmw9JChcInByaXNtYTpjbGllbnRcIik7ZnVuY3Rpb24gJG8oZSx0LHIsbil7aWYoIShlIT09XCJwb3N0Z3Jlc3FsXCImJmUhPT1cImNvY2tyb2FjaGRiXCIpJiZyLmxlbmd0aD4wJiZ3Zy5leGVjKHQpKXRocm93IG5ldyBFcnJvcihgUnVubmluZyBBTFRFUiB1c2luZyAke259IGlzIG5vdCBzdXBwb3J0ZWRcblVzaW5nIHRoZSBleGFtcGxlIGJlbG93IHlvdSBjYW4gc3RpbGwgZXhlY3V0ZSB5b3VyIHF1ZXJ5IHdpdGggUHJpc21hLCBidXQgcGxlYXNlIG5vdGUgdGhhdCBpdCBpcyB2dWxuZXJhYmxlIHRvIFNRTCBpbmplY3Rpb24gYXR0YWNrcyBhbmQgcmVxdWlyZXMgeW91IHRvIHRha2UgY2FyZSBvZiBpbnB1dCBzYW5pdGl6YXRpb24uXG5cbkV4YW1wbGU6XG4gIGF3YWl0IHByaXNtYS4kZXhlY3V0ZVJhd1Vuc2FmZShcXGBBTFRFUiBVU0VSIHByaXNtYSBXSVRIIFBBU1NXT1JEICdcXCR7cGFzc3dvcmR9J1xcYClcblxuTW9yZSBJbmZvcm1hdGlvbjogaHR0cHM6Ly9wcmlzLmx5L2QvZXhlY3V0ZS1yYXdcbmApfXZhciBxbz0oe2NsaWVudE1ldGhvZDplLGFjdGl2ZVByb3ZpZGVyOnQsZHJpdmVyQWRhcHRlclByb3ZpZGVyOnJ9KT0+bj0+e3IhPT12b2lkIDAmJih0PXIpO2xldCBpPVwiXCIsbztpZihBcnJheS5pc0FycmF5KG4pKXtsZXRbcywuLi5hXT1uO2k9cyxvPXt2YWx1ZXM6VnIoYXx8W10pLF9fcHJpc21hUmF3UGFyYW1ldGVyc19fOiEwfX1lbHNlIHN3aXRjaCh0KXtjYXNlXCJzcWxpdGVcIjpjYXNlXCJteXNxbFwiOntpPW4uc3FsLG89e3ZhbHVlczpWcihuLnZhbHVlcyksX19wcmlzbWFSYXdQYXJhbWV0ZXJzX186ITB9O2JyZWFrfWNhc2VcImNvY2tyb2FjaGRiXCI6Y2FzZVwicG9zdGdyZXNxbFwiOmNhc2VcInBvc3RncmVzXCI6e2k9bi50ZXh0LG89e3ZhbHVlczpWcihuLnZhbHVlcyksX19wcmlzbWFSYXdQYXJhbWV0ZXJzX186ITB9O2JyZWFrfWNhc2VcInNxbHNlcnZlclwiOntpPUhsKG4pLG89e3ZhbHVlczpWcihuLnZhbHVlcyksX19wcmlzbWFSYXdQYXJhbWV0ZXJzX186ITB9O2JyZWFrfWRlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKGBUaGUgJHt0fSBwcm92aWRlciBkb2VzIG5vdCBzdXBwb3J0ICR7ZX1gKX1yZXR1cm4gbz8udmFsdWVzP1psKGBwcmlzbWEuJHtlfSgke2l9LCAke28udmFsdWVzfSlgKTpabChgcHJpc21hLiR7ZX0oJHtpfSlgKSx7cXVlcnk6aSxwYXJhbWV0ZXJzOm99fSxYbD17cmVxdWVzdEFyZ3NUb01pZGRsZXdhcmVBcmdzKGUpe3JldHVybltlLnN0cmluZ3MsLi4uZS52YWx1ZXNdfSxtaWRkbGV3YXJlQXJnc1RvUmVxdWVzdEFyZ3MoZSl7bGV0W3QsLi4ucl09ZTtyZXR1cm4gbmV3IG1lKHQscil9fSxldT17cmVxdWVzdEFyZ3NUb01pZGRsZXdhcmVBcmdzKGUpe3JldHVybltlXX0sbWlkZGxld2FyZUFyZ3NUb1JlcXVlc3RBcmdzKGUpe3JldHVybiBlWzBdfX07ZnVuY3Rpb24gam8oZSl7cmV0dXJuIGZ1bmN0aW9uKHIpe2xldCBuLGk9KG89ZSk9Pnt0cnl7cmV0dXJuIG89PT12b2lkIDB8fG8/LmtpbmQ9PT1cIml0eFwiP24/PyhuPXR1KHIobykpKTp0dShyKG8pKX1jYXRjaChzKXtyZXR1cm4gUHJvbWlzZS5yZWplY3Qocyl9fTtyZXR1cm57dGhlbihvLHMpe3JldHVybiBpKCkudGhlbihvLHMpfSxjYXRjaChvKXtyZXR1cm4gaSgpLmNhdGNoKG8pfSxmaW5hbGx5KG8pe3JldHVybiBpKCkuZmluYWxseShvKX0scmVxdWVzdFRyYW5zYWN0aW9uKG8pe2xldCBzPWkobyk7cmV0dXJuIHMucmVxdWVzdFRyYW5zYWN0aW9uP3MucmVxdWVzdFRyYW5zYWN0aW9uKG8pOnN9LFtTeW1ib2wudG9TdHJpbmdUYWddOlwiUHJpc21hUHJvbWlzZVwifX19ZnVuY3Rpb24gdHUoZSl7cmV0dXJuIHR5cGVvZiBlLnRoZW49PVwiZnVuY3Rpb25cIj9lOlByb21pc2UucmVzb2x2ZShlKX12YXIgcnU9e2lzRW5hYmxlZCgpe3JldHVybiExfSxnZXRUcmFjZVBhcmVudCgpe3JldHVyblwiMDAtMTAtMTAtMDBcIn0sYXN5bmMgY3JlYXRlRW5naW5lU3Bhbigpe30sZ2V0QWN0aXZlQ29udGV4dCgpe30scnVuSW5DaGlsZFNwYW4oZSx0KXtyZXR1cm4gdCgpfX0sVm89Y2xhc3N7aXNFbmFibGVkKCl7cmV0dXJuIHRoaXMuZ2V0R2xvYmFsVHJhY2luZ0hlbHBlcigpLmlzRW5hYmxlZCgpfWdldFRyYWNlUGFyZW50KHQpe3JldHVybiB0aGlzLmdldEdsb2JhbFRyYWNpbmdIZWxwZXIoKS5nZXRUcmFjZVBhcmVudCh0KX1jcmVhdGVFbmdpbmVTcGFuKHQpe3JldHVybiB0aGlzLmdldEdsb2JhbFRyYWNpbmdIZWxwZXIoKS5jcmVhdGVFbmdpbmVTcGFuKHQpfWdldEFjdGl2ZUNvbnRleHQoKXtyZXR1cm4gdGhpcy5nZXRHbG9iYWxUcmFjaW5nSGVscGVyKCkuZ2V0QWN0aXZlQ29udGV4dCgpfXJ1bkluQ2hpbGRTcGFuKHQscil7cmV0dXJuIHRoaXMuZ2V0R2xvYmFsVHJhY2luZ0hlbHBlcigpLnJ1bkluQ2hpbGRTcGFuKHQscil9Z2V0R2xvYmFsVHJhY2luZ0hlbHBlcigpe3JldHVybiBnbG9iYWxUaGlzLlBSSVNNQV9JTlNUUlVNRU5UQVRJT04/LmhlbHBlcj8/cnV9fTtmdW5jdGlvbiBudShlKXtyZXR1cm4gZS5pbmNsdWRlcyhcInRyYWNpbmdcIik/bmV3IFZvOnJ1fWZ1bmN0aW9uIGl1KGUsdD0oKT0+e30pe2xldCByLG49bmV3IFByb21pc2UoaT0+cj1pKTtyZXR1cm57dGhlbihpKXtyZXR1cm4tLWU9PT0wJiZyKHQoKSksaT8uKG4pfX19ZnVuY3Rpb24gb3UoZSl7cmV0dXJuIHR5cGVvZiBlPT1cInN0cmluZ1wiP2U6ZS5yZWR1Y2UoKHQscik9PntsZXQgbj10eXBlb2Ygcj09XCJzdHJpbmdcIj9yOnIubGV2ZWw7cmV0dXJuIG49PT1cInF1ZXJ5XCI/dDp0JiYocj09PVwiaW5mb1wifHx0PT09XCJpbmZvXCIpP1wiaW5mb1wiOm59LHZvaWQgMCl9dmFyIHJpPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5fbWlkZGxld2FyZXM9W119dXNlKHQpe3RoaXMuX21pZGRsZXdhcmVzLnB1c2godCl9Z2V0KHQpe3JldHVybiB0aGlzLl9taWRkbGV3YXJlc1t0XX1oYXModCl7cmV0dXJuISF0aGlzLl9taWRkbGV3YXJlc1t0XX1sZW5ndGgoKXtyZXR1cm4gdGhpcy5fbWlkZGxld2FyZXMubGVuZ3RofX07dmFyIGF1PUYoQmkoKSk7ZnVuY3Rpb24gbmkoZSl7cmV0dXJuIHR5cGVvZiBlLmJhdGNoUmVxdWVzdElkeD09XCJudW1iZXJcIn1mdW5jdGlvbiBpaShlKXtyZXR1cm4gZT09PW51bGw/ZTpBcnJheS5pc0FycmF5KGUpP2UubWFwKGlpKTp0eXBlb2YgZT09XCJvYmplY3RcIj9FZyhlKT9QZyhlKTpPdChlLGlpKTplfWZ1bmN0aW9uIEVnKGUpe3JldHVybiBlIT09bnVsbCYmdHlwZW9mIGU9PVwib2JqZWN0XCImJnR5cGVvZiBlLiR0eXBlPT1cInN0cmluZ1wifWZ1bmN0aW9uIFBnKHskdHlwZTplLHZhbHVlOnR9KXtzd2l0Y2goZSl7Y2FzZVwiQmlnSW50XCI6cmV0dXJuIEJpZ0ludCh0KTtjYXNlXCJCeXRlc1wiOnJldHVybiBCdWZmZXIuZnJvbSh0LFwiYmFzZTY0XCIpO2Nhc2VcIkRhdGVUaW1lXCI6cmV0dXJuIG5ldyBEYXRlKHQpO2Nhc2VcIkRlY2ltYWxcIjpyZXR1cm4gbmV3IE5lKHQpO2Nhc2VcIkpzb25cIjpyZXR1cm4gSlNPTi5wYXJzZSh0KTtkZWZhdWx0Onl0KHQsXCJVbmtub3duIHRhZ2dlZCB2YWx1ZVwiKX19ZnVuY3Rpb24gc3UoZSl7aWYoZS5hY3Rpb24hPT1cImZpbmRVbmlxdWVcIiYmZS5hY3Rpb24hPT1cImZpbmRVbmlxdWVPclRocm93XCIpcmV0dXJuO2xldCB0PVtdO3JldHVybiBlLm1vZGVsTmFtZSYmdC5wdXNoKGUubW9kZWxOYW1lKSxlLnF1ZXJ5LmFyZ3VtZW50cyYmdC5wdXNoKEJvKGUucXVlcnkuYXJndW1lbnRzKSksdC5wdXNoKEJvKGUucXVlcnkuc2VsZWN0aW9uKSksdC5qb2luKFwiXCIpfWZ1bmN0aW9uIEJvKGUpe3JldHVybmAoJHtPYmplY3Qua2V5cyhlKS5zb3J0KCkubWFwKHI9PntsZXQgbj1lW3JdO3JldHVybiB0eXBlb2Ygbj09XCJvYmplY3RcIiYmbiE9PW51bGw/YCgke3J9ICR7Qm8obil9KWA6cn0pLmpvaW4oXCIgXCIpfSlgfXZhciB2Zz17YWdncmVnYXRlOiExLGFnZ3JlZ2F0ZVJhdzohMSxjcmVhdGVNYW55OiEwLGNyZWF0ZU9uZTohMCxkZWxldGVNYW55OiEwLGRlbGV0ZU9uZTohMCxleGVjdXRlUmF3OiEwLGZpbmRGaXJzdDohMSxmaW5kRmlyc3RPclRocm93OiExLGZpbmRNYW55OiExLGZpbmRSYXc6ITEsZmluZFVuaXF1ZTohMSxmaW5kVW5pcXVlT3JUaHJvdzohMSxncm91cEJ5OiExLHF1ZXJ5UmF3OiExLHJ1bkNvbW1hbmRSYXc6ITAsdXBkYXRlTWFueTohMCx1cGRhdGVPbmU6ITAsdXBzZXJ0T25lOiEwfTtmdW5jdGlvbiBVbyhlKXtyZXR1cm4gdmdbZV19dmFyIG9pPWNsYXNze2NvbnN0cnVjdG9yKHQpe3RoaXMub3B0aW9ucz10O3RoaXMudGlja0FjdGl2ZT0hMTt0aGlzLmJhdGNoZXM9e319cmVxdWVzdCh0KXtsZXQgcj10aGlzLm9wdGlvbnMuYmF0Y2hCeSh0KTtyZXR1cm4gcj8odGhpcy5iYXRjaGVzW3JdfHwodGhpcy5iYXRjaGVzW3JdPVtdLHRoaXMudGlja0FjdGl2ZXx8KHRoaXMudGlja0FjdGl2ZT0hMCxwcm9jZXNzLm5leHRUaWNrKCgpPT57dGhpcy5kaXNwYXRjaEJhdGNoZXMoKSx0aGlzLnRpY2tBY3RpdmU9ITF9KSkpLG5ldyBQcm9taXNlKChuLGkpPT57dGhpcy5iYXRjaGVzW3JdLnB1c2goe3JlcXVlc3Q6dCxyZXNvbHZlOm4scmVqZWN0Oml9KX0pKTp0aGlzLm9wdGlvbnMuc2luZ2xlTG9hZGVyKHQpfWRpc3BhdGNoQmF0Y2hlcygpe2ZvcihsZXQgdCBpbiB0aGlzLmJhdGNoZXMpe2xldCByPXRoaXMuYmF0Y2hlc1t0XTtkZWxldGUgdGhpcy5iYXRjaGVzW3RdLHIubGVuZ3RoPT09MT90aGlzLm9wdGlvbnMuc2luZ2xlTG9hZGVyKHJbMF0ucmVxdWVzdCkudGhlbihuPT57biBpbnN0YW5jZW9mIEVycm9yP3JbMF0ucmVqZWN0KG4pOnJbMF0ucmVzb2x2ZShuKX0pLmNhdGNoKG49PntyWzBdLnJlamVjdChuKX0pOihyLnNvcnQoKG4saSk9PnRoaXMub3B0aW9ucy5iYXRjaE9yZGVyKG4ucmVxdWVzdCxpLnJlcXVlc3QpKSx0aGlzLm9wdGlvbnMuYmF0Y2hMb2FkZXIoci5tYXAobj0+bi5yZXF1ZXN0KSkudGhlbihuPT57aWYobiBpbnN0YW5jZW9mIEVycm9yKWZvcihsZXQgaT0wO2k8ci5sZW5ndGg7aSsrKXJbaV0ucmVqZWN0KG4pO2Vsc2UgZm9yKGxldCBpPTA7aTxyLmxlbmd0aDtpKyspe2xldCBvPW5baV07byBpbnN0YW5jZW9mIEVycm9yP3JbaV0ucmVqZWN0KG8pOnJbaV0ucmVzb2x2ZShvKX19KS5jYXRjaChuPT57Zm9yKGxldCBpPTA7aTxyLmxlbmd0aDtpKyspcltpXS5yZWplY3Qobil9KSl9fWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuXCJEYXRhTG9hZGVyXCJ9fTt2YXIgX2c9JChcInByaXNtYTpjbGllbnQ6cmVxdWVzdF9oYW5kbGVyXCIpLHNpPWNsYXNze2NvbnN0cnVjdG9yKHQscil7dGhpcy5sb2dFbWl0dGVyPXIsdGhpcy5jbGllbnQ9dCx0aGlzLmRhdGFsb2FkZXI9bmV3IG9pKHtiYXRjaExvYWRlcjpZYShhc3luYyh7cmVxdWVzdHM6bixjdXN0b21EYXRhUHJveHlGZXRjaDppfSk9PntsZXR7dHJhbnNhY3Rpb246byxvdGVsUGFyZW50Q3R4OnN9PW5bMF0sYT1uLm1hcChwPT5wLnByb3RvY29sUXVlcnkpLGw9dGhpcy5jbGllbnQuX3RyYWNpbmdIZWxwZXIuZ2V0VHJhY2VQYXJlbnQocyksdT1uLnNvbWUocD0+VW8ocC5wcm90b2NvbFF1ZXJ5LmFjdGlvbikpO3JldHVybihhd2FpdCB0aGlzLmNsaWVudC5fZW5naW5lLnJlcXVlc3RCYXRjaChhLHt0cmFjZXBhcmVudDpsLHRyYW5zYWN0aW9uOlRnKG8pLGNvbnRhaW5zV3JpdGU6dSxjdXN0b21EYXRhUHJveHlGZXRjaDppfSkpLm1hcCgocCxkKT0+e2lmKHAgaW5zdGFuY2VvZiBFcnJvcilyZXR1cm4gcDt0cnl7cmV0dXJuIHRoaXMubWFwUXVlcnlFbmdpbmVSZXN1bHQobltkXSxwKX1jYXRjaChmKXtyZXR1cm4gZn19KX0pLHNpbmdsZUxvYWRlcjphc3luYyBuPT57bGV0IGk9bi50cmFuc2FjdGlvbj8ua2luZD09PVwiaXR4XCI/bHUobi50cmFuc2FjdGlvbik6dm9pZCAwLG89YXdhaXQgdGhpcy5jbGllbnQuX2VuZ2luZS5yZXF1ZXN0KG4ucHJvdG9jb2xRdWVyeSx7dHJhY2VwYXJlbnQ6dGhpcy5jbGllbnQuX3RyYWNpbmdIZWxwZXIuZ2V0VHJhY2VQYXJlbnQoKSxpbnRlcmFjdGl2ZVRyYW5zYWN0aW9uOmksaXNXcml0ZTpVbyhuLnByb3RvY29sUXVlcnkuYWN0aW9uKSxjdXN0b21EYXRhUHJveHlGZXRjaDpuLmN1c3RvbURhdGFQcm94eUZldGNofSk7cmV0dXJuIHRoaXMubWFwUXVlcnlFbmdpbmVSZXN1bHQobixvKX0sYmF0Y2hCeTpuPT5uLnRyYW5zYWN0aW9uPy5pZD9gdHJhbnNhY3Rpb24tJHtuLnRyYW5zYWN0aW9uLmlkfWA6c3Uobi5wcm90b2NvbFF1ZXJ5KSxiYXRjaE9yZGVyKG4saSl7cmV0dXJuIG4udHJhbnNhY3Rpb24/LmtpbmQ9PT1cImJhdGNoXCImJmkudHJhbnNhY3Rpb24/LmtpbmQ9PT1cImJhdGNoXCI/bi50cmFuc2FjdGlvbi5pbmRleC1pLnRyYW5zYWN0aW9uLmluZGV4OjB9fSl9YXN5bmMgcmVxdWVzdCh0KXt0cnl7cmV0dXJuIGF3YWl0IHRoaXMuZGF0YWxvYWRlci5yZXF1ZXN0KHQpfWNhdGNoKHIpe2xldHtjbGllbnRNZXRob2Q6bixjYWxsc2l0ZTppLHRyYW5zYWN0aW9uOm8sYXJnczpzLG1vZGVsTmFtZTphfT10O3RoaXMuaGFuZGxlQW5kTG9nUmVxdWVzdEVycm9yKHtlcnJvcjpyLGNsaWVudE1ldGhvZDpuLGNhbGxzaXRlOmksdHJhbnNhY3Rpb246byxhcmdzOnMsbW9kZWxOYW1lOmF9KX19bWFwUXVlcnlFbmdpbmVSZXN1bHQoe2RhdGFQYXRoOnQsdW5wYWNrZXI6cn0sbil7bGV0IGk9bj8uZGF0YSxvPW4/LmVsYXBzZWQscz10aGlzLnVucGFjayhpLHQscik7cmV0dXJuIHByb2Nlc3MuZW52LlBSSVNNQV9DTElFTlRfR0VUX1RJTUU/e2RhdGE6cyxlbGFwc2VkOm99OnN9aGFuZGxlQW5kTG9nUmVxdWVzdEVycm9yKHQpe3RyeXt0aGlzLmhhbmRsZVJlcXVlc3RFcnJvcih0KX1jYXRjaChyKXt0aHJvdyB0aGlzLmxvZ0VtaXR0ZXImJnRoaXMubG9nRW1pdHRlci5lbWl0KFwiZXJyb3JcIix7bWVzc2FnZTpyLm1lc3NhZ2UsdGFyZ2V0OnQuY2xpZW50TWV0aG9kLHRpbWVzdGFtcDpuZXcgRGF0ZX0pLHJ9fWhhbmRsZVJlcXVlc3RFcnJvcih7ZXJyb3I6dCxjbGllbnRNZXRob2Q6cixjYWxsc2l0ZTpuLHRyYW5zYWN0aW9uOmksYXJnczpvLG1vZGVsTmFtZTpzfSl7aWYoX2codCksQ2codCxpKXx8dCBpbnN0YW5jZW9mIEJlKXRocm93IHQ7aWYodCBpbnN0YW5jZW9mIEgmJkFnKHQpKXtsZXQgbD11dSh0Lm1ldGEpO3RpKHthcmdzOm8sZXJyb3JzOltsXSxjYWxsc2l0ZTpuLGVycm9yRm9ybWF0OnRoaXMuY2xpZW50Ll9lcnJvckZvcm1hdCxvcmlnaW5hbE1ldGhvZDpyLGNsaWVudFZlcnNpb246dGhpcy5jbGllbnQuX2NsaWVudFZlcnNpb259KX1sZXQgYT10Lm1lc3NhZ2U7aWYobiYmKGE9UXQoe2NhbGxzaXRlOm4sb3JpZ2luYWxNZXRob2Q6cixpc1BhbmljOnQuaXNQYW5pYyxzaG93Q29sb3JzOnRoaXMuY2xpZW50Ll9lcnJvckZvcm1hdD09PVwicHJldHR5XCIsbWVzc2FnZTphfSkpLGE9dGhpcy5zYW5pdGl6ZU1lc3NhZ2UoYSksdC5jb2RlKXtsZXQgbD1zP3ttb2RlbE5hbWU6cywuLi50Lm1ldGF9OnQubWV0YTt0aHJvdyBuZXcgSChhLHtjb2RlOnQuY29kZSxjbGllbnRWZXJzaW9uOnRoaXMuY2xpZW50Ll9jbGllbnRWZXJzaW9uLG1ldGE6bCxiYXRjaFJlcXVlc3RJZHg6dC5iYXRjaFJlcXVlc3RJZHh9KX1lbHNle2lmKHQuaXNQYW5pYyl0aHJvdyBuZXcgYmUoYSx0aGlzLmNsaWVudC5fY2xpZW50VmVyc2lvbik7aWYodCBpbnN0YW5jZW9mIFcpdGhyb3cgbmV3IFcoYSx7Y2xpZW50VmVyc2lvbjp0aGlzLmNsaWVudC5fY2xpZW50VmVyc2lvbixiYXRjaFJlcXVlc3RJZHg6dC5iYXRjaFJlcXVlc3RJZHh9KTtpZih0IGluc3RhbmNlb2Ygayl0aHJvdyBuZXcgayhhLHRoaXMuY2xpZW50Ll9jbGllbnRWZXJzaW9uKTtpZih0IGluc3RhbmNlb2YgYmUpdGhyb3cgbmV3IGJlKGEsdGhpcy5jbGllbnQuX2NsaWVudFZlcnNpb24pfXRocm93IHQuY2xpZW50VmVyc2lvbj10aGlzLmNsaWVudC5fY2xpZW50VmVyc2lvbix0fXNhbml0aXplTWVzc2FnZSh0KXtyZXR1cm4gdGhpcy5jbGllbnQuX2Vycm9yRm9ybWF0JiZ0aGlzLmNsaWVudC5fZXJyb3JGb3JtYXQhPT1cInByZXR0eVwiPygwLGF1LmRlZmF1bHQpKHQpOnR9dW5wYWNrKHQscixuKXtpZighdHx8KHQuZGF0YSYmKHQ9dC5kYXRhKSwhdCkpcmV0dXJuIHQ7bGV0IGk9T2JqZWN0LnZhbHVlcyh0KVswXSxvPXIuZmlsdGVyKGE9PmEhPT1cInNlbGVjdFwiJiZhIT09XCJpbmNsdWRlXCIpLHM9aWkodW8oaSxvKSk7cmV0dXJuIG4/bihzKTpzfWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuXCJSZXF1ZXN0SGFuZGxlclwifX07ZnVuY3Rpb24gVGcoZSl7aWYoZSl7aWYoZS5raW5kPT09XCJiYXRjaFwiKXJldHVybntraW5kOlwiYmF0Y2hcIixvcHRpb25zOntpc29sYXRpb25MZXZlbDplLmlzb2xhdGlvbkxldmVsfX07aWYoZS5raW5kPT09XCJpdHhcIilyZXR1cm57a2luZDpcIml0eFwiLG9wdGlvbnM6bHUoZSl9O3l0KGUsXCJVbmtub3duIHRyYW5zYWN0aW9uIGtpbmRcIil9fWZ1bmN0aW9uIGx1KGUpe3JldHVybntpZDplLmlkLHBheWxvYWQ6ZS5wYXlsb2FkfX1mdW5jdGlvbiBDZyhlLHQpe3JldHVybiBuaShlKSYmdD8ua2luZD09PVwiYmF0Y2hcIiYmZS5iYXRjaFJlcXVlc3RJZHghPT10LmluZGV4fWZ1bmN0aW9uIEFnKGUpe3JldHVybiBlLmNvZGU9PT1cIlAyMDA5XCJ8fGUuY29kZT09PVwiUDIwMTJcIn1mdW5jdGlvbiB1dShlKXtpZihlLmtpbmQ9PT1cIlVuaW9uXCIpcmV0dXJue2tpbmQ6XCJVbmlvblwiLGVycm9yczplLmVycm9ycy5tYXAodXUpfTtpZihBcnJheS5pc0FycmF5KGUuc2VsZWN0aW9uUGF0aCkpe2xldFssLi4udF09ZS5zZWxlY3Rpb25QYXRoO3JldHVybnsuLi5lLHNlbGVjdGlvblBhdGg6dH19cmV0dXJuIGV9dmFyIGN1PVwiNS43LjFcIjt2YXIgcHU9Y3U7ZnVuY3Rpb24gZHUoZSl7cmV0dXJuIGUubWFwKHQ9PntsZXQgcj17fTtmb3IobGV0IG4gb2YgT2JqZWN0LmtleXModCkpcltuXT1tdSh0W25dKTtyZXR1cm4gcn0pfWZ1bmN0aW9uIG11KHtwcmlzbWFfX3R5cGU6ZSxwcmlzbWFfX3ZhbHVlOnR9KXtzd2l0Y2goZSl7Y2FzZVwiYmlnaW50XCI6cmV0dXJuIEJpZ0ludCh0KTtjYXNlXCJieXRlc1wiOnJldHVybiBCdWZmZXIuZnJvbSh0LFwiYmFzZTY0XCIpO2Nhc2VcImRlY2ltYWxcIjpyZXR1cm4gbmV3IE5lKHQpO2Nhc2VcImRhdGV0aW1lXCI6Y2FzZVwiZGF0ZVwiOnJldHVybiBuZXcgRGF0ZSh0KTtjYXNlXCJ0aW1lXCI6cmV0dXJuIG5ldyBEYXRlKGAxOTcwLTAxLTAxVCR7dH1aYCk7Y2FzZVwiYXJyYXlcIjpyZXR1cm4gdC5tYXAobXUpO2RlZmF1bHQ6cmV0dXJuIHR9fXZhciBodT1GKERvKCkpO3ZhciBVPWNsYXNzIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IodCl7c3VwZXIodCtgXG5SZWFkIG1vcmUgYXQgaHR0cHM6Ly9wcmlzLmx5L2QvY2xpZW50LWNvbnN0cnVjdG9yYCksdGhpcy5uYW1lPVwiUHJpc21hQ2xpZW50Q29uc3RydWN0b3JWYWxpZGF0aW9uRXJyb3JcIn1nZXRbU3ltYm9sLnRvU3RyaW5nVGFnXSgpe3JldHVyblwiUHJpc21hQ2xpZW50Q29uc3RydWN0b3JWYWxpZGF0aW9uRXJyb3JcIn19O3YoVSxcIlByaXNtYUNsaWVudENvbnN0cnVjdG9yVmFsaWRhdGlvbkVycm9yXCIpO3ZhciBmdT1bXCJkYXRhc291cmNlc1wiLFwiZGF0YXNvdXJjZVVybFwiLFwiZXJyb3JGb3JtYXRcIixcImFkYXB0ZXJcIixcImxvZ1wiLFwiX19pbnRlcm5hbFwiXSxndT1bXCJwcmV0dHlcIixcImNvbG9ybGVzc1wiLFwibWluaW1hbFwiXSx5dT1bXCJpbmZvXCIsXCJxdWVyeVwiLFwid2FyblwiLFwiZXJyb3JcIl0sTWc9e2RhdGFzb3VyY2VzOihlLHtkYXRhc291cmNlTmFtZXM6dH0pPT57aWYoZSl7aWYodHlwZW9mIGUhPVwib2JqZWN0XCJ8fEFycmF5LmlzQXJyYXkoZSkpdGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShlKX0gZm9yIFwiZGF0YXNvdXJjZXNcIiBwcm92aWRlZCB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3JgKTtmb3IobGV0W3Isbl1vZiBPYmplY3QuZW50cmllcyhlKSl7aWYoIXQuaW5jbHVkZXMocikpe2xldCBpPVl0KHIsdCl8fGAgQXZhaWxhYmxlIGRhdGFzb3VyY2VzOiAke3Quam9pbihcIiwgXCIpfWA7dGhyb3cgbmV3IFUoYFVua25vd24gZGF0YXNvdXJjZSAke3J9IHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke2l9YCl9aWYodHlwZW9mIG4hPVwib2JqZWN0XCJ8fEFycmF5LmlzQXJyYXkobikpdGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShlKX0gZm9yIGRhdGFzb3VyY2UgXCIke3J9XCIgcHJvdmlkZWQgdG8gUHJpc21hQ2xpZW50IGNvbnN0cnVjdG9yLlxuSXQgc2hvdWxkIGhhdmUgdGhpcyBmb3JtOiB7IHVybDogXCJDT05ORUNUSU9OX1NUUklOR1wiIH1gKTtpZihuJiZ0eXBlb2Ygbj09XCJvYmplY3RcIilmb3IobGV0W2ksb11vZiBPYmplY3QuZW50cmllcyhuKSl7aWYoaSE9PVwidXJsXCIpdGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShlKX0gZm9yIGRhdGFzb3VyY2UgXCIke3J9XCIgcHJvdmlkZWQgdG8gUHJpc21hQ2xpZW50IGNvbnN0cnVjdG9yLlxuSXQgc2hvdWxkIGhhdmUgdGhpcyBmb3JtOiB7IHVybDogXCJDT05ORUNUSU9OX1NUUklOR1wiIH1gKTtpZih0eXBlb2YgbyE9XCJzdHJpbmdcIil0aHJvdyBuZXcgVShgSW52YWxpZCB2YWx1ZSAke0pTT04uc3RyaW5naWZ5KG8pfSBmb3IgZGF0YXNvdXJjZSBcIiR7cn1cIiBwcm92aWRlZCB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3IuXG5JdCBzaG91bGQgaGF2ZSB0aGlzIGZvcm06IHsgdXJsOiBcIkNPTk5FQ1RJT05fU1RSSU5HXCIgfWApfX19fSxhZGFwdGVyOihlLHQpPT57aWYoZT09PW51bGwpcmV0dXJuO2lmKGU9PT12b2lkIDApdGhyb3cgbmV3IFUoJ1wiYWRhcHRlclwiIHByb3BlcnR5IG11c3Qgbm90IGJlIHVuZGVmaW5lZCwgdXNlIG51bGwgdG8gY29uZGl0aW9uYWxseSBkaXNhYmxlIGRyaXZlciBhZGFwdGVycy4nKTtpZighem4odCkuaW5jbHVkZXMoXCJkcml2ZXJBZGFwdGVyc1wiKSl0aHJvdyBuZXcgVSgnXCJhZGFwdGVyXCIgcHJvcGVydHkgY2FuIG9ubHkgYmUgcHJvdmlkZWQgdG8gUHJpc21hQ2xpZW50IGNvbnN0cnVjdG9yIHdoZW4gXCJkcml2ZXJBZGFwdGVyc1wiIHByZXZpZXcgZmVhdHVyZSBpcyBlbmFibGVkLicpO2lmKGd0KCk9PT1cImJpbmFyeVwiKXRocm93IG5ldyBVKCdDYW5ub3QgdXNlIGEgZHJpdmVyIGFkYXB0ZXIgd2l0aCB0aGUgXCJiaW5hcnlcIiBRdWVyeSBFbmdpbmUuIFBsZWFzZSB1c2UgdGhlIFwibGlicmFyeVwiIFF1ZXJ5IEVuZ2luZS4nKX0sZGF0YXNvdXJjZVVybDplPT57aWYodHlwZW9mIGU8XCJ1XCImJnR5cGVvZiBlIT1cInN0cmluZ1wiKXRocm93IG5ldyBVKGBJbnZhbGlkIHZhbHVlICR7SlNPTi5zdHJpbmdpZnkoZSl9IGZvciBcImRhdGFzb3VyY2VVcmxcIiBwcm92aWRlZCB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3IuXG5FeHBlY3RlZCBzdHJpbmcgb3IgdW5kZWZpbmVkLmApfSxlcnJvckZvcm1hdDplPT57aWYoZSl7aWYodHlwZW9mIGUhPVwic3RyaW5nXCIpdGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShlKX0gZm9yIFwiZXJyb3JGb3JtYXRcIiBwcm92aWRlZCB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3IuYCk7aWYoIWd1LmluY2x1ZGVzKGUpKXtsZXQgdD1ZdChlLGd1KTt0aHJvdyBuZXcgVShgSW52YWxpZCBlcnJvckZvcm1hdCAke2V9IHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke3R9YCl9fX0sbG9nOmU9PntpZighZSlyZXR1cm47aWYoIUFycmF5LmlzQXJyYXkoZSkpdGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShlKX0gZm9yIFwibG9nXCIgcHJvdmlkZWQgdG8gUHJpc21hQ2xpZW50IGNvbnN0cnVjdG9yLmApO2Z1bmN0aW9uIHQocil7aWYodHlwZW9mIHI9PVwic3RyaW5nXCImJiF5dS5pbmNsdWRlcyhyKSl7bGV0IG49WXQocix5dSk7dGhyb3cgbmV3IFUoYEludmFsaWQgbG9nIGxldmVsIFwiJHtyfVwiIHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke259YCl9fWZvcihsZXQgciBvZiBlKXt0KHIpO2xldCBuPXtsZXZlbDp0LGVtaXQ6aT0+e2xldCBvPVtcInN0ZG91dFwiLFwiZXZlbnRcIl07aWYoIW8uaW5jbHVkZXMoaSkpe2xldCBzPVl0KGksbyk7dGhyb3cgbmV3IFUoYEludmFsaWQgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShpKX0gZm9yIFwiZW1pdFwiIGluIGxvZ0xldmVsIHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke3N9YCl9fX07aWYociYmdHlwZW9mIHI9PVwib2JqZWN0XCIpZm9yKGxldFtpLG9db2YgT2JqZWN0LmVudHJpZXMocikpaWYobltpXSluW2ldKG8pO2Vsc2UgdGhyb3cgbmV3IFUoYEludmFsaWQgcHJvcGVydHkgJHtpfSBmb3IgXCJsb2dcIiBwcm92aWRlZCB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3JgKX19LF9faW50ZXJuYWw6ZT0+e2lmKCFlKXJldHVybjtsZXQgdD1bXCJkZWJ1Z1wiLFwiaG9va3NcIixcImVuZ2luZVwiLFwibWVhc3VyZVBlcmZvcm1hbmNlXCJdO2lmKHR5cGVvZiBlIT1cIm9iamVjdFwiKXRocm93IG5ldyBVKGBJbnZhbGlkIHZhbHVlICR7SlNPTi5zdHJpbmdpZnkoZSl9IGZvciBcIl9faW50ZXJuYWxcIiB0byBQcmlzbWFDbGllbnQgY29uc3RydWN0b3JgKTtmb3IobGV0W3Jdb2YgT2JqZWN0LmVudHJpZXMoZSkpaWYoIXQuaW5jbHVkZXMocikpe2xldCBuPVl0KHIsdCk7dGhyb3cgbmV3IFUoYEludmFsaWQgcHJvcGVydHkgJHtKU09OLnN0cmluZ2lmeShyKX0gZm9yIFwiX19pbnRlcm5hbFwiIHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke259YCl9fX07ZnVuY3Rpb24gYnUoZSx0KXtmb3IobGV0W3Isbl1vZiBPYmplY3QuZW50cmllcyhlKSl7aWYoIWZ1LmluY2x1ZGVzKHIpKXtsZXQgaT1ZdChyLGZ1KTt0aHJvdyBuZXcgVShgVW5rbm93biBwcm9wZXJ0eSAke3J9IHByb3ZpZGVkIHRvIFByaXNtYUNsaWVudCBjb25zdHJ1Y3Rvci4ke2l9YCl9TWdbcl0obix0KX1pZihlLmRhdGFzb3VyY2VVcmwmJmUuZGF0YXNvdXJjZXMpdGhyb3cgbmV3IFUoJ0NhbiBub3QgdXNlIFwiZGF0YXNvdXJjZVVybFwiIGFuZCBcImRhdGFzb3VyY2VzXCIgb3B0aW9ucyBhdCB0aGUgc2FtZSB0aW1lLiBQaWNrIG9uZSBvZiB0aGVtJyl9ZnVuY3Rpb24gWXQoZSx0KXtpZih0Lmxlbmd0aD09PTB8fHR5cGVvZiBlIT1cInN0cmluZ1wiKXJldHVyblwiXCI7bGV0IHI9U2coZSx0KTtyZXR1cm4gcj9gIERpZCB5b3UgbWVhbiBcIiR7cn1cIj9gOlwiXCJ9ZnVuY3Rpb24gU2coZSx0KXtpZih0Lmxlbmd0aD09PTApcmV0dXJuIG51bGw7bGV0IHI9dC5tYXAoaT0+KHt2YWx1ZTppLGRpc3RhbmNlOigwLGh1LmRlZmF1bHQpKGUsaSl9KSk7ci5zb3J0KChpLG8pPT5pLmRpc3RhbmNlPG8uZGlzdGFuY2U/LTE6MSk7bGV0IG49clswXTtyZXR1cm4gbi5kaXN0YW5jZTwzP24udmFsdWU6bnVsbH1mdW5jdGlvbiB4dShlKXtyZXR1cm4gZS5sZW5ndGg9PT0wP1Byb21pc2UucmVzb2x2ZShbXSk6bmV3IFByb21pc2UoKHQscik9PntsZXQgbj1uZXcgQXJyYXkoZS5sZW5ndGgpLGk9bnVsbCxvPSExLHM9MCxhPSgpPT57b3x8KHMrKyxzPT09ZS5sZW5ndGgmJihvPSEwLGk/cihpKTp0KG4pKSl9LGw9dT0+e298fChvPSEwLHIodSkpfTtmb3IobGV0IHU9MDt1PGUubGVuZ3RoO3UrKyllW3VdLnRoZW4oYz0+e25bdV09YyxhKCl9LGM9PntpZighbmkoYykpe2woYyk7cmV0dXJufWMuYmF0Y2hSZXF1ZXN0SWR4PT09dT9sKGMpOihpfHwoaT1jKSxhKCkpfSl9KX12YXIgbHQ9JChcInByaXNtYTpjbGllbnRcIik7dHlwZW9mIGdsb2JhbFRoaXM9PVwib2JqZWN0XCImJihnbG9iYWxUaGlzLk5PREVfQ0xJRU5UPSEwKTt2YXIgSWc9e3JlcXVlc3RBcmdzVG9NaWRkbGV3YXJlQXJnczplPT5lLG1pZGRsZXdhcmVBcmdzVG9SZXF1ZXN0QXJnczplPT5lfSxrZz1TeW1ib2wuZm9yKFwicHJpc21hLmNsaWVudC50cmFuc2FjdGlvbi5pZFwiKSxGZz17aWQ6MCxuZXh0SWQoKXtyZXR1cm4rK3RoaXMuaWR9fTtmdW5jdGlvbiBfdShlKXtjbGFzcyB0e2NvbnN0cnVjdG9yKG4pe3RoaXMuX21pZGRsZXdhcmVzPW5ldyByaTt0aGlzLl9jcmVhdGVQcmlzbWFQcm9taXNlPWpvKCk7dGhpcy4kZXh0ZW5kcz1VYTtvbChlKSxuJiZidShuLGUpO2xldCBpPW4/LmFkYXB0ZXI/WWkobi5hZGFwdGVyKTp2b2lkIDAsbz1uZXcgUHUuRXZlbnRFbWl0dGVyKCkub24oXCJlcnJvclwiLCgpPT57fSk7dGhpcy5fZXh0ZW5zaW9ucz1Mbi5lbXB0eSgpLHRoaXMuX3ByZXZpZXdGZWF0dXJlcz16bihlKSx0aGlzLl9jbGllbnRWZXJzaW9uPWUuY2xpZW50VmVyc2lvbj8/cHUsdGhpcy5fYWN0aXZlUHJvdmlkZXI9ZS5hY3RpdmVQcm92aWRlcix0aGlzLl90cmFjaW5nSGVscGVyPW51KHRoaXMuX3ByZXZpZXdGZWF0dXJlcyk7bGV0IHM9e3Jvb3RFbnZQYXRoOmUucmVsYXRpdmVFbnZQYXRocy5yb290RW52UGF0aCYmQnIuZGVmYXVsdC5yZXNvbHZlKGUuZGlybmFtZSxlLnJlbGF0aXZlRW52UGF0aHMucm9vdEVudlBhdGgpLHNjaGVtYUVudlBhdGg6ZS5yZWxhdGl2ZUVudlBhdGhzLnNjaGVtYUVudlBhdGgmJkJyLmRlZmF1bHQucmVzb2x2ZShlLmRpcm5hbWUsZS5yZWxhdGl2ZUVudlBhdGhzLnNjaGVtYUVudlBhdGgpfSxhPSFpJiZpcihzLHtjb25mbGljdENoZWNrOlwibm9uZVwifSl8fGUuaW5qZWN0YWJsZUVkZ2VFbnY/LigpO3RyeXtsZXQgbD1uPz97fSx1PWwuX19pbnRlcm5hbD8/e30sYz11LmRlYnVnPT09ITA7YyYmJC5lbmFibGUoXCJwcmlzbWE6Y2xpZW50XCIpO2xldCBwPUJyLmRlZmF1bHQucmVzb2x2ZShlLmRpcm5hbWUsZS5yZWxhdGl2ZVBhdGgpO3Z1LmRlZmF1bHQuZXhpc3RzU3luYyhwKXx8KHA9ZS5kaXJuYW1lKSxsdChcImRpcm5hbWVcIixlLmRpcm5hbWUpLGx0KFwicmVsYXRpdmVQYXRoXCIsZS5yZWxhdGl2ZVBhdGgpLGx0KFwiY3dkXCIscCk7bGV0IGQ9dS5lbmdpbmV8fHt9O2lmKGwuZXJyb3JGb3JtYXQ/dGhpcy5fZXJyb3JGb3JtYXQ9bC5lcnJvckZvcm1hdDpwcm9jZXNzLmVudi5OT0RFX0VOVj09PVwicHJvZHVjdGlvblwiP3RoaXMuX2Vycm9yRm9ybWF0PVwibWluaW1hbFwiOnByb2Nlc3MuZW52Lk5PX0NPTE9SP3RoaXMuX2Vycm9yRm9ybWF0PVwiY29sb3JsZXNzXCI6dGhpcy5fZXJyb3JGb3JtYXQ9XCJjb2xvcmxlc3NcIix0aGlzLl9ydW50aW1lRGF0YU1vZGVsPWUucnVudGltZURhdGFNb2RlbCx0aGlzLl9lbmdpbmVDb25maWc9e2N3ZDpwLGRpcm5hbWU6ZS5kaXJuYW1lLGVuYWJsZURlYnVnTG9nczpjLGFsbG93VHJpZ2dlclBhbmljOmQuYWxsb3dUcmlnZ2VyUGFuaWMsZGF0YW1vZGVsUGF0aDpCci5kZWZhdWx0LmpvaW4oZS5kaXJuYW1lLGUuZmlsZW5hbWU/P1wic2NoZW1hLnByaXNtYVwiKSxwcmlzbWFQYXRoOmQuYmluYXJ5UGF0aD8/dm9pZCAwLGVuZ2luZUVuZHBvaW50OmQuZW5kcG9pbnQsZ2VuZXJhdG9yOmUuZ2VuZXJhdG9yLHNob3dDb2xvcnM6dGhpcy5fZXJyb3JGb3JtYXQ9PT1cInByZXR0eVwiLGxvZ0xldmVsOmwubG9nJiZvdShsLmxvZyksbG9nUXVlcmllczpsLmxvZyYmISEodHlwZW9mIGwubG9nPT1cInN0cmluZ1wiP2wubG9nPT09XCJxdWVyeVwiOmwubG9nLmZpbmQoZj0+dHlwZW9mIGY9PVwic3RyaW5nXCI/Zj09PVwicXVlcnlcIjpmLmxldmVsPT09XCJxdWVyeVwiKSksZW52OmE/LnBhcnNlZD8/e30sZmxhZ3M6W10sZ2V0UXVlcnlFbmdpbmVXYXNtTW9kdWxlOmUuZ2V0UXVlcnlFbmdpbmVXYXNtTW9kdWxlLGNsaWVudFZlcnNpb246ZS5jbGllbnRWZXJzaW9uLGVuZ2luZVZlcnNpb246ZS5lbmdpbmVWZXJzaW9uLHByZXZpZXdGZWF0dXJlczp0aGlzLl9wcmV2aWV3RmVhdHVyZXMsYWN0aXZlUHJvdmlkZXI6ZS5hY3RpdmVQcm92aWRlcixpbmxpbmVTY2hlbWE6ZS5pbmxpbmVTY2hlbWEsb3ZlcnJpZGVEYXRhc291cmNlczpzbChsLGUuZGF0YXNvdXJjZU5hbWVzKSxpbmxpbmVEYXRhc291cmNlczplLmlubGluZURhdGFzb3VyY2VzLGlubGluZVNjaGVtYUhhc2g6ZS5pbmxpbmVTY2hlbWFIYXNoLHRyYWNpbmdIZWxwZXI6dGhpcy5fdHJhY2luZ0hlbHBlcixsb2dFbWl0dGVyOm8saXNCdW5kbGVkOmUuaXNCdW5kbGVkLGFkYXB0ZXI6aX0sbHQoXCJjbGllbnRWZXJzaW9uXCIsZS5jbGllbnRWZXJzaW9uKSx0aGlzLl9lbmdpbmU9RmwoZSx0aGlzLl9lbmdpbmVDb25maWcpLHRoaXMuX3JlcXVlc3RIYW5kbGVyPW5ldyBzaSh0aGlzLG8pLGwubG9nKWZvcihsZXQgZiBvZiBsLmxvZyl7bGV0IHk9dHlwZW9mIGY9PVwic3RyaW5nXCI/ZjpmLmVtaXQ9PT1cInN0ZG91dFwiP2YubGV2ZWw6bnVsbDt5JiZ0aGlzLiRvbih5LGc9Pnthci5sb2coYCR7YXIudGFnc1t5XT8/XCJcIn1gLGcubWVzc2FnZXx8Zy5xdWVyeSl9KX10aGlzLl9tZXRyaWNzPW5ldyBEdCh0aGlzLl9lbmdpbmUpfWNhdGNoKGwpe3Rocm93IGwuY2xpZW50VmVyc2lvbj10aGlzLl9jbGllbnRWZXJzaW9uLGx9cmV0dXJuIHRoaXMuX2FwcGxpZWRQYXJlbnQ9d3IodGhpcyl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm5cIlByaXNtYUNsaWVudFwifSR1c2Uobil7dGhpcy5fbWlkZGxld2FyZXMudXNlKG4pfSRvbihuLGkpe249PT1cImJlZm9yZUV4aXRcIj90aGlzLl9lbmdpbmUub24oXCJiZWZvcmVFeGl0XCIsaSk6dGhpcy5fZW5naW5lLm9uKG4sbz0+e2xldCBzPW8uZmllbGRzO3JldHVybiBpKG49PT1cInF1ZXJ5XCI/e3RpbWVzdGFtcDpvLnRpbWVzdGFtcCxxdWVyeTpzPy5xdWVyeT8/by5xdWVyeSxwYXJhbXM6cz8ucGFyYW1zPz9vLnBhcmFtcyxkdXJhdGlvbjpzPy5kdXJhdGlvbl9tcz8/by5kdXJhdGlvbix0YXJnZXQ6by50YXJnZXR9Ont0aW1lc3RhbXA6by50aW1lc3RhbXAsbWVzc2FnZTpzPy5tZXNzYWdlPz9vLm1lc3NhZ2UsdGFyZ2V0Om8udGFyZ2V0fSl9KX0kY29ubmVjdCgpe3RyeXtyZXR1cm4gdGhpcy5fZW5naW5lLnN0YXJ0KCl9Y2F0Y2gobil7dGhyb3cgbi5jbGllbnRWZXJzaW9uPXRoaXMuX2NsaWVudFZlcnNpb24sbn19YXN5bmMgJGRpc2Nvbm5lY3QoKXt0cnl7YXdhaXQgdGhpcy5fZW5naW5lLnN0b3AoKX1jYXRjaChuKXt0aHJvdyBuLmNsaWVudFZlcnNpb249dGhpcy5fY2xpZW50VmVyc2lvbixufWZpbmFsbHl7Y3MoKX19JGV4ZWN1dGVSYXdJbnRlcm5hbChuLGksbyxzKXtsZXQgYT10aGlzLl9hY3RpdmVQcm92aWRlcixsPXRoaXMuX2VuZ2luZUNvbmZpZy5hZGFwdGVyPy5wcm92aWRlcjtyZXR1cm4gdGhpcy5fcmVxdWVzdCh7YWN0aW9uOlwiZXhlY3V0ZVJhd1wiLGFyZ3M6byx0cmFuc2FjdGlvbjpuLGNsaWVudE1ldGhvZDppLGFyZ3NNYXBwZXI6cW8oe2NsaWVudE1ldGhvZDppLGFjdGl2ZVByb3ZpZGVyOmEsZHJpdmVyQWRhcHRlclByb3ZpZGVyOmx9KSxjYWxsc2l0ZTpvdCh0aGlzLl9lcnJvckZvcm1hdCksZGF0YVBhdGg6W10sbWlkZGxld2FyZUFyZ3NNYXBwZXI6c30pfSRleGVjdXRlUmF3KG4sLi4uaSl7cmV0dXJuIHRoaXMuX2NyZWF0ZVByaXNtYVByb21pc2Uobz0+e2lmKG4ucmF3IT09dm9pZCAwfHxuLnNxbCE9PXZvaWQgMCl7bGV0W3MsYV09d3UobixpKTtyZXR1cm4gJG8odGhpcy5fYWN0aXZlUHJvdmlkZXIscy50ZXh0LHMudmFsdWVzLEFycmF5LmlzQXJyYXkobik/XCJwcmlzbWEuJGV4ZWN1dGVSYXdgPFNRTD5gXCI6XCJwcmlzbWEuJGV4ZWN1dGVSYXcoc3FsYDxTUUw+YClcIiksdGhpcy4kZXhlY3V0ZVJhd0ludGVybmFsKG8sXCIkZXhlY3V0ZVJhd1wiLHMsYSl9dGhyb3cgbmV3IHNlKFwiYCRleGVjdXRlUmF3YCBpcyBhIHRhZyBmdW5jdGlvbiwgcGxlYXNlIHVzZSBpdCBsaWtlIHRoZSBmb2xsb3dpbmc6XFxuYGBgXFxuY29uc3QgcmVzdWx0ID0gYXdhaXQgcHJpc21hLiRleGVjdXRlUmF3YFVQREFURSBVc2VyIFNFVCBjb29sID0gJHt0cnVlfSBXSEVSRSBlbWFpbCA9ICR7J3VzZXJAZW1haWwuY29tJ307YFxcbmBgYFxcblxcbk9yIHJlYWQgb3VyIGRvY3MgYXQgaHR0cHM6Ly93d3cucHJpc21hLmlvL2RvY3MvY29uY2VwdHMvY29tcG9uZW50cy9wcmlzbWEtY2xpZW50L3Jhdy1kYXRhYmFzZS1hY2Nlc3MjZXhlY3V0ZXJhd1xcblwiLHtjbGllbnRWZXJzaW9uOnRoaXMuX2NsaWVudFZlcnNpb259KX0pfSRleGVjdXRlUmF3VW5zYWZlKG4sLi4uaSl7cmV0dXJuIHRoaXMuX2NyZWF0ZVByaXNtYVByb21pc2Uobz0+KCRvKHRoaXMuX2FjdGl2ZVByb3ZpZGVyLG4saSxcInByaXNtYS4kZXhlY3V0ZVJhd1Vuc2FmZSg8U1FMPiwgWy4uLnZhbHVlc10pXCIpLHRoaXMuJGV4ZWN1dGVSYXdJbnRlcm5hbChvLFwiJGV4ZWN1dGVSYXdVbnNhZmVcIixbbiwuLi5pXSkpKX0kcnVuQ29tbWFuZFJhdyhuKXtpZihlLmFjdGl2ZVByb3ZpZGVyIT09XCJtb25nb2RiXCIpdGhyb3cgbmV3IHNlKGBUaGUgJHtlLmFjdGl2ZVByb3ZpZGVyfSBwcm92aWRlciBkb2VzIG5vdCBzdXBwb3J0ICRydW5Db21tYW5kUmF3LiBVc2UgdGhlIG1vbmdvZGIgcHJvdmlkZXIuYCx7Y2xpZW50VmVyc2lvbjp0aGlzLl9jbGllbnRWZXJzaW9ufSk7cmV0dXJuIHRoaXMuX2NyZWF0ZVByaXNtYVByb21pc2UoaT0+dGhpcy5fcmVxdWVzdCh7YXJnczpuLGNsaWVudE1ldGhvZDpcIiRydW5Db21tYW5kUmF3XCIsZGF0YVBhdGg6W10sYWN0aW9uOlwicnVuQ29tbWFuZFJhd1wiLGFyZ3NNYXBwZXI6SmwsY2FsbHNpdGU6b3QodGhpcy5fZXJyb3JGb3JtYXQpLHRyYW5zYWN0aW9uOml9KSl9YXN5bmMgJHF1ZXJ5UmF3SW50ZXJuYWwobixpLG8scyl7bGV0IGE9dGhpcy5fYWN0aXZlUHJvdmlkZXIsbD10aGlzLl9lbmdpbmVDb25maWcuYWRhcHRlcj8ucHJvdmlkZXI7cmV0dXJuIHRoaXMuX3JlcXVlc3Qoe2FjdGlvbjpcInF1ZXJ5UmF3XCIsYXJnczpvLHRyYW5zYWN0aW9uOm4sY2xpZW50TWV0aG9kOmksYXJnc01hcHBlcjpxbyh7Y2xpZW50TWV0aG9kOmksYWN0aXZlUHJvdmlkZXI6YSxkcml2ZXJBZGFwdGVyUHJvdmlkZXI6bH0pLGNhbGxzaXRlOm90KHRoaXMuX2Vycm9yRm9ybWF0KSxkYXRhUGF0aDpbXSxtaWRkbGV3YXJlQXJnc01hcHBlcjpzfSkudGhlbihkdSl9JHF1ZXJ5UmF3KG4sLi4uaSl7cmV0dXJuIHRoaXMuX2NyZWF0ZVByaXNtYVByb21pc2Uobz0+e2lmKG4ucmF3IT09dm9pZCAwfHxuLnNxbCE9PXZvaWQgMClyZXR1cm4gdGhpcy4kcXVlcnlSYXdJbnRlcm5hbChvLFwiJHF1ZXJ5UmF3XCIsLi4ud3UobixpKSk7dGhyb3cgbmV3IHNlKFwiYCRxdWVyeVJhd2AgaXMgYSB0YWcgZnVuY3Rpb24sIHBsZWFzZSB1c2UgaXQgbGlrZSB0aGUgZm9sbG93aW5nOlxcbmBgYFxcbmNvbnN0IHJlc3VsdCA9IGF3YWl0IHByaXNtYS4kcXVlcnlSYXdgU0VMRUNUICogRlJPTSBVc2VyIFdIRVJFIGlkID0gJHsxfSBPUiBlbWFpbCA9ICR7J3VzZXJAZW1haWwuY29tJ307YFxcbmBgYFxcblxcbk9yIHJlYWQgb3VyIGRvY3MgYXQgaHR0cHM6Ly93d3cucHJpc21hLmlvL2RvY3MvY29uY2VwdHMvY29tcG9uZW50cy9wcmlzbWEtY2xpZW50L3Jhdy1kYXRhYmFzZS1hY2Nlc3MjcXVlcnlyYXdcXG5cIix7Y2xpZW50VmVyc2lvbjp0aGlzLl9jbGllbnRWZXJzaW9ufSl9KX0kcXVlcnlSYXdVbnNhZmUobiwuLi5pKXtyZXR1cm4gdGhpcy5fY3JlYXRlUHJpc21hUHJvbWlzZShvPT50aGlzLiRxdWVyeVJhd0ludGVybmFsKG8sXCIkcXVlcnlSYXdVbnNhZmVcIixbbiwuLi5pXSkpfV90cmFuc2FjdGlvbldpdGhBcnJheSh7cHJvbWlzZXM6bixvcHRpb25zOml9KXtsZXQgbz1GZy5uZXh0SWQoKSxzPWl1KG4ubGVuZ3RoKSxhPW4ubWFwKChsLHUpPT57aWYobD8uW1N5bWJvbC50b1N0cmluZ1RhZ10hPT1cIlByaXNtYVByb21pc2VcIil0aHJvdyBuZXcgRXJyb3IoXCJBbGwgZWxlbWVudHMgb2YgdGhlIGFycmF5IG5lZWQgdG8gYmUgUHJpc21hIENsaWVudCBwcm9taXNlcy4gSGludDogUGxlYXNlIG1ha2Ugc3VyZSB5b3UgYXJlIG5vdCBhd2FpdGluZyB0aGUgUHJpc21hIGNsaWVudCBjYWxscyB5b3UgaW50ZW5kZWQgdG8gcGFzcyBpbiB0aGUgJHRyYW5zYWN0aW9uIGZ1bmN0aW9uLlwiKTtsZXQgYz1pPy5pc29sYXRpb25MZXZlbCxwPXtraW5kOlwiYmF0Y2hcIixpZDpvLGluZGV4OnUsaXNvbGF0aW9uTGV2ZWw6Yyxsb2NrOnN9O3JldHVybiBsLnJlcXVlc3RUcmFuc2FjdGlvbj8uKHApPz9sfSk7cmV0dXJuIHh1KGEpfWFzeW5jIF90cmFuc2FjdGlvbldpdGhDYWxsYmFjayh7Y2FsbGJhY2s6bixvcHRpb25zOml9KXtsZXQgbz17dHJhY2VwYXJlbnQ6dGhpcy5fdHJhY2luZ0hlbHBlci5nZXRUcmFjZVBhcmVudCgpfSxzPWF3YWl0IHRoaXMuX2VuZ2luZS50cmFuc2FjdGlvbihcInN0YXJ0XCIsbyxpKSxhO3RyeXtsZXQgbD17a2luZDpcIml0eFwiLC4uLnN9O2E9YXdhaXQgbih0aGlzLl9jcmVhdGVJdHhDbGllbnQobCkpLGF3YWl0IHRoaXMuX2VuZ2luZS50cmFuc2FjdGlvbihcImNvbW1pdFwiLG8scyl9Y2F0Y2gobCl7dGhyb3cgYXdhaXQgdGhpcy5fZW5naW5lLnRyYW5zYWN0aW9uKFwicm9sbGJhY2tcIixvLHMpLmNhdGNoKCgpPT57fSksbH1yZXR1cm4gYX1fY3JlYXRlSXR4Q2xpZW50KG4pe3JldHVybiB3cihPZShPbih0aGlzKSxbY2UoXCJfYXBwbGllZFBhcmVudFwiLCgpPT50aGlzLl9hcHBsaWVkUGFyZW50Ll9jcmVhdGVJdHhDbGllbnQobikpLGNlKFwiX2NyZWF0ZVByaXNtYVByb21pc2VcIiwoKT0+am8obikpLGNlKGtnLCgpPT5uLmlkKSx5cihKaSldKSl9JHRyYW5zYWN0aW9uKG4saSl7bGV0IG87dHlwZW9mIG49PVwiZnVuY3Rpb25cIj9vPSgpPT50aGlzLl90cmFuc2FjdGlvbldpdGhDYWxsYmFjayh7Y2FsbGJhY2s6bixvcHRpb25zOml9KTpvPSgpPT50aGlzLl90cmFuc2FjdGlvbldpdGhBcnJheSh7cHJvbWlzZXM6bixvcHRpb25zOml9KTtsZXQgcz17bmFtZTpcInRyYW5zYWN0aW9uXCIsYXR0cmlidXRlczp7bWV0aG9kOlwiJHRyYW5zYWN0aW9uXCJ9fTtyZXR1cm4gdGhpcy5fdHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3BhbihzLG8pfV9yZXF1ZXN0KG4pe24ub3RlbFBhcmVudEN0eD10aGlzLl90cmFjaW5nSGVscGVyLmdldEFjdGl2ZUNvbnRleHQoKTtsZXQgaT1uLm1pZGRsZXdhcmVBcmdzTWFwcGVyPz9JZyxvPXthcmdzOmkucmVxdWVzdEFyZ3NUb01pZGRsZXdhcmVBcmdzKG4uYXJncyksZGF0YVBhdGg6bi5kYXRhUGF0aCxydW5JblRyYW5zYWN0aW9uOiEhbi50cmFuc2FjdGlvbixhY3Rpb246bi5hY3Rpb24sbW9kZWw6bi5tb2RlbH0scz17bWlkZGxld2FyZTp7bmFtZTpcIm1pZGRsZXdhcmVcIixtaWRkbGV3YXJlOiEwLGF0dHJpYnV0ZXM6e21ldGhvZDpcIiR1c2VcIn0sYWN0aXZlOiExfSxvcGVyYXRpb246e25hbWU6XCJvcGVyYXRpb25cIixhdHRyaWJ1dGVzOnttZXRob2Q6by5hY3Rpb24sbW9kZWw6by5tb2RlbCxuYW1lOm8ubW9kZWw/YCR7by5tb2RlbH0uJHtvLmFjdGlvbn1gOm8uYWN0aW9ufX19LGE9LTEsbD1hc3luYyB1PT57bGV0IGM9dGhpcy5fbWlkZGxld2FyZXMuZ2V0KCsrYSk7aWYoYylyZXR1cm4gdGhpcy5fdHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3BhbihzLm1pZGRsZXdhcmUsVD0+Yyh1LEE9PihUPy5lbmQoKSxsKEEpKSkpO2xldHtydW5JblRyYW5zYWN0aW9uOnAsYXJnczpkLC4uLmZ9PXUseT17Li4ubiwuLi5mfTtkJiYoeS5hcmdzPWkubWlkZGxld2FyZUFyZ3NUb1JlcXVlc3RBcmdzKGQpKSxuLnRyYW5zYWN0aW9uIT09dm9pZCAwJiZwPT09ITEmJmRlbGV0ZSB5LnRyYW5zYWN0aW9uO2xldCBnPWF3YWl0IHphKHRoaXMseSk7cmV0dXJuIHkubW9kZWw/R2Eoe3Jlc3VsdDpnLG1vZGVsTmFtZTp5Lm1vZGVsLGFyZ3M6eS5hcmdzLGV4dGVuc2lvbnM6dGhpcy5fZXh0ZW5zaW9ucyxydW50aW1lRGF0YU1vZGVsOnRoaXMuX3J1bnRpbWVEYXRhTW9kZWx9KTpnfTtyZXR1cm4gdGhpcy5fdHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3BhbihzLm9wZXJhdGlvbiwoKT0+bmV3IEV1LkFzeW5jUmVzb3VyY2UoXCJwcmlzbWEtY2xpZW50LXJlcXVlc3RcIikucnVuSW5Bc3luY1Njb3BlKCgpPT5sKG8pKSl9YXN5bmMgX2V4ZWN1dGVSZXF1ZXN0KHthcmdzOm4sY2xpZW50TWV0aG9kOmksZGF0YVBhdGg6byxjYWxsc2l0ZTpzLGFjdGlvbjphLG1vZGVsOmwsYXJnc01hcHBlcjp1LHRyYW5zYWN0aW9uOmMsdW5wYWNrZXI6cCxvdGVsUGFyZW50Q3R4OmQsY3VzdG9tRGF0YVByb3h5RmV0Y2g6Zn0pe3RyeXtuPXU/dShuKTpuO2xldCB5PXtuYW1lOlwic2VyaWFsaXplXCJ9LGc9dGhpcy5fdHJhY2luZ0hlbHBlci5ydW5JbkNoaWxkU3Bhbih5LCgpPT5LbCh7bW9kZWxOYW1lOmwscnVudGltZURhdGFNb2RlbDp0aGlzLl9ydW50aW1lRGF0YU1vZGVsLGFjdGlvbjphLGFyZ3M6bixjbGllbnRNZXRob2Q6aSxjYWxsc2l0ZTpzLGV4dGVuc2lvbnM6dGhpcy5fZXh0ZW5zaW9ucyxlcnJvckZvcm1hdDp0aGlzLl9lcnJvckZvcm1hdCxjbGllbnRWZXJzaW9uOnRoaXMuX2NsaWVudFZlcnNpb259KSk7cmV0dXJuICQuZW5hYmxlZChcInByaXNtYTpjbGllbnRcIikmJihsdChcIlByaXNtYSBDbGllbnQgY2FsbDpcIiksbHQoYHByaXNtYS4ke2l9KCR7VGEobil9KWApLGx0KFwiR2VuZXJhdGVkIHJlcXVlc3Q6XCIpLGx0KEpTT04uc3RyaW5naWZ5KGcsbnVsbCwyKStgXG5gKSksYz8ua2luZD09PVwiYmF0Y2hcIiYmYXdhaXQgYy5sb2NrLHRoaXMuX3JlcXVlc3RIYW5kbGVyLnJlcXVlc3Qoe3Byb3RvY29sUXVlcnk6Zyxtb2RlbE5hbWU6bCxhY3Rpb246YSxjbGllbnRNZXRob2Q6aSxkYXRhUGF0aDpvLGNhbGxzaXRlOnMsYXJnczpuLGV4dGVuc2lvbnM6dGhpcy5fZXh0ZW5zaW9ucyx0cmFuc2FjdGlvbjpjLHVucGFja2VyOnAsb3RlbFBhcmVudEN0eDpkLG90ZWxDaGlsZEN0eDp0aGlzLl90cmFjaW5nSGVscGVyLmdldEFjdGl2ZUNvbnRleHQoKSxjdXN0b21EYXRhUHJveHlGZXRjaDpmfSl9Y2F0Y2goeSl7dGhyb3cgeS5jbGllbnRWZXJzaW9uPXRoaXMuX2NsaWVudFZlcnNpb24seX19Z2V0ICRtZXRyaWNzKCl7aWYoIXRoaXMuX2hhc1ByZXZpZXdGbGFnKFwibWV0cmljc1wiKSl0aHJvdyBuZXcgc2UoXCJgbWV0cmljc2AgcHJldmlldyBmZWF0dXJlIG11c3QgYmUgZW5hYmxlZCBpbiBvcmRlciB0byBhY2Nlc3MgbWV0cmljcyBBUElcIix7Y2xpZW50VmVyc2lvbjp0aGlzLl9jbGllbnRWZXJzaW9ufSk7cmV0dXJuIHRoaXMuX21ldHJpY3N9X2hhc1ByZXZpZXdGbGFnKG4pe3JldHVybiEhdGhpcy5fZW5naW5lQ29uZmlnLnByZXZpZXdGZWF0dXJlcz8uaW5jbHVkZXMobil9fXJldHVybiB0fWZ1bmN0aW9uIHd1KGUsdCl7cmV0dXJuIE9nKGUpP1tuZXcgbWUoZSx0KSxYbF06W2UsZXVdfWZ1bmN0aW9uIE9nKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpJiZBcnJheS5pc0FycmF5KGUucmF3KX12YXIgRGc9bmV3IFNldChbXCJ0b0pTT05cIixcIiQkdHlwZW9mXCIsXCJhc3ltbWV0cmljTWF0Y2hcIixTeW1ib2wuaXRlcmF0b3IsU3ltYm9sLnRvU3RyaW5nVGFnLFN5bWJvbC5pc0NvbmNhdFNwcmVhZGFibGUsU3ltYm9sLnRvUHJpbWl0aXZlXSk7ZnVuY3Rpb24gVHUoZSl7cmV0dXJuIG5ldyBQcm94eShlLHtnZXQodCxyKXtpZihyIGluIHQpcmV0dXJuIHRbcl07aWYoIURnLmhhcyhyKSl0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIGVudW0gdmFsdWU6ICR7U3RyaW5nKHIpfWApfX0pfWZ1bmN0aW9uIEN1KGUpe2lyKGUse2NvbmZsaWN0Q2hlY2s6XCJ3YXJuXCJ9KX0wJiYobW9kdWxlLmV4cG9ydHM9e0RNTUYsRE1NRkNsYXNzLERlYnVnLERlY2ltYWwsRXh0ZW5zaW9ucyxNZXRyaWNzQ2xpZW50LE5vdEZvdW5kRXJyb3IsT2JqZWN0RW51bVZhbHVlLFByaXNtYUNsaWVudEluaXRpYWxpemF0aW9uRXJyb3IsUHJpc21hQ2xpZW50S25vd25SZXF1ZXN0RXJyb3IsUHJpc21hQ2xpZW50UnVzdFBhbmljRXJyb3IsUHJpc21hQ2xpZW50VW5rbm93blJlcXVlc3RFcnJvcixQcmlzbWFDbGllbnRWYWxpZGF0aW9uRXJyb3IsUHVibGljLFNxbCxUeXBlcyxkZWZpbmVEbW1mUHJvcGVydHksZGV0ZWN0UnVudGltZSxlbXB0eSxnZXRQcmlzbWFDbGllbnQsaXR4Q2xpZW50RGVueUxpc3Qsam9pbixtYWtlU3RyaWN0RW51bSxvYmplY3RFbnVtTmFtZXMsb2JqZWN0RW51bVZhbHVlcyxyYXcsc3FsdGFnLHdhcm5FbnZDb25mbGljdHMsd2Fybk9uY2V9KTtcbi8qISBCdW5kbGVkIGxpY2Vuc2UgaW5mb3JtYXRpb246XG5cbmRlY2ltYWwuanMvZGVjaW1hbC5tanM6XG4gICgqIVxuICAgKiAgZGVjaW1hbC5qcyB2MTAuNC4zXG4gICAqICBBbiBhcmJpdHJhcnktcHJlY2lzaW9uIERlY2ltYWwgdHlwZSBmb3IgSmF2YVNjcmlwdC5cbiAgICogIGh0dHBzOi8vZ2l0aHViLmNvbS9NaWtlTWNsL2RlY2ltYWwuanNcbiAgICogIENvcHlyaWdodCAoYykgMjAyMiBNaWNoYWVsIE1jbGF1Z2hsaW4gPE04Y2g4OGxAZ21haWwuY29tPlxuICAgKiAgTUlUIExpY2VuY2VcbiAgICopXG4qL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlicmFyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@prisma/client/runtime/library.js\n");

/***/ })

};
;